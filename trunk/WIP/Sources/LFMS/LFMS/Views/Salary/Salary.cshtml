@{
    ViewBag.Title = "Quản lí lương nhân viên";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/Content/css/jquery.gritter.css" />
<link rel="stylesheet" href="~/Content/css/jquery-ui-1.10.3.custom.min.css" />

<link rel="stylesheet" href="~/Content/css/chosen.css" />
<link rel="stylesheet" href="~/Content/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/Content/css/font-awesome.min.css" />
<link rel="stylesheet" href="~/Content/css/ace.min.css" />
<link rel="stylesheet" href="~/Content/css/datepicker.css" />
<link rel="stylesheet" href="~/Content/css/timeline/screen.css" />
<link rel="stylesheet" href="~/Content/css/timeline/screen.css" />

<script src="~/Content/ckfinder/ckfinder.js" type="text/javascript"></script>
<script src="~/Content/js/jquery-ui-1.10.3.custom.min.js" type="text/javascript"></script>
<script src="~/Content/js/timeliner.min.js" type="text/javascript"></script>
<script src="~/Content/js/bootbox.min.js" type="text/javascript"></script>
<script src="~/Content/js/jquery.dataTablesStaff.js" type="text/javascript"></script>
<script src="~/Content/js/jquery.dataTables.bootstrapStaff.js" type="text/javascript"></script>
@*<script src="~/Content/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="~/Content/js/jquery.dataTables.bootstrap.js" type="text/javascript"></script>*@
<script src="~/Content/js/date-time/bootstrap-datepicker.min.js" type="text/javascript"></script>

<script src="~/Content/js/jquery.numeric.js" type="text/javascript"></script>
<script src="~/Content/js/fuelux/fuelux.spinner.min.js" type="text/javascript"></script>
<script src="~/Content/js/jquery.autosize.min.js" type="text/javascript"></script>
<script src="~/Content/js/jquery.gritter.min.js" type="text/javascript"></script>
<script src="~/Content/js/typeahead-bs2.min.js" type="text/javascript"></script>
<script src="~/Content/js/chosen.jquery.min.js" type="text/javascript"></script>
<script src="~/Content/js/jquery.validate.min.js"></script>
<script src="~/Content/js/jquery.hotkeys.min.js"></script>
<script src="~/Content/js/bootstrap-wysiwyg.min.js"></script>
<script src="~/Content/js/additional-methods.js"></script>

<script src="~/Content/js/jscrollPanel/jquery.jscrollpane.min.js"></script>
<script src="~/Content/js/jscrollPanel/jquery.mousewheel.js"></script>

@section Sidebar
{
    <div class=" sidebar" id="sidebar">
        <script type="text/javascript">
            try { ace.settings.check('sidebar', 'fixed') } catch (e) { }
        </script>

        <ul class="nav nav-list">
            <li class="" id="liStaffSalary" onclick='GetSalary()'>
                <a href="#" onclick="setLiActiveClass('#liStaffSalary')">
                    <i class="icon-exchange"></i>
                    <span class="menu-text"> Lương nhân viên Nhân viên</span>
                </a>

            </li>

            <li class="" id="liStaffBenefit" onclick="getAllBenefit()">
                <a href="#" onclick="setLiActiveClass('#liStaffBenefit')">
                    <i class="icon-bar-chart"></i>
                    <span class="menu-text"> Trợ cấp </span>
                </a>
            </li>
            <li class="" id="liStaffReward" onclick="getAllReward()">
                <a href="#" onclick="setLiActiveClass('#liStaffReward')">
                    <i class="icon-cogs"></i>
                    <span class="menu-text"> Thưởng </span>
                </a>
            </li>
            <li class="" id="liStaffImpress" onclick="getAllImpress()">
                <a href="#" onclick="setLiActiveClass('#liStaffImpress')">
                    <i class=" icon-heart-empty"></i>
                    <span class="menu-text"> Tạm ứng </span>
                </a>
            </li>


            <li class="" id="liStaffTax" onclick="getAllTax()">
                <a href="#" onclick="setLiActiveClass('#liStaffTax')">
                    <i class="icon-legal"></i>
                    <span class="menu-text"> Thuế  </span>
                </a>
            </li>
            <li class="" id="liStaffAssurance" onclick="getAllAssurance()">
                <a href="#" onclick="setLiActiveClass('#liStaffAssurance')">
                    <i class=" icon-heart"></i>
                    <span class="menu-text"> Bảo hiểm </span>
                </a>
            </li>

            <li class="" id="liTimesheet" onclick="getAllTimesheet()">
                <a href="#" onclick="setLiActiveClass('#liTimesheet')">
                    <i class="icon-exchange"></i>
                    <span class="menu-text"> Ngày nghỉ </span>
                </a>
            </li>

        </ul><!-- /.nav-list -->

        <div class="sidebar-collapse" id="sidebar-collapse">
            <i class="icon-double-angle-left" data-icon1="icon-double-angle-left" data-icon2="icon-double-angle-right"></i>
        </div>

        <script type="text/javascript">
            try { ace.settings.check('sidebar', 'collapsed') } catch (e) { }
        </script>
    </div>
}

@section Breadcrumbs
{
    <div class="breadcrumbs" id="breadcrumbs">
        <script type="text/javascript">
            try { ace.settings.check('breadcrumbs', 'fixed') } catch (e) { }
        </script>

        <ul class="breadcrumb">
            <li>
                <i class="icon-home home-icon"></i>
                <a href="/Home/Index">Trang chủ</a> | Quản lí lương
            </li>
            <li>
                <span id="breadcrumbsMenu" style="font-weight: bold"></span>
            </li>

            @*<li>
                    Danh sách nhân viên
                </li>*@
        </ul><!-- .breadcrumb -->
    </div>
}

<div id="bodyContent">

</div>

<div id="bodyChangePass">

</div>
@*<div id="staffIdDiv" value="@Session["StaffId"].ToString()" style="display:none"></div>*@
@*<div id="roleIdDiv" value="@Session["RoleId"].ToString()" style="display:none"></div>*@

@*All scrip load bảng Lương nhân viên*@
<script type="text/javascript">
    setLiActiveClass('#liStaffDetail');
    var allStaff = null;

    $(document).ready(function () {
        GetSalary();
    });

    function maskMoney(input) {
        var num = $(input).val();
        if (num != "") {
            var str = ("" + num).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, function ($1) { return $1 + "." });
            $(input).val(str + " VNĐ");
        }
    }

    function convertToMoney(num) {
        if ("" + num != "") {
            var str = ("" + num).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, function ($1) { return $1 + "." });
            str = str + " VNĐ";
            return str;
        }
    }

    function removeMask(input) {
        var num = $(input).val();
        if (num != "") {
            var result = num.replace(" VNĐ", "");
            result = parseInt(result.split(".").join(""));
            return $(input).val(result);
        }
    }

    function setLiActiveClass(liId) {
        $('#liStaffSalary').attr("class", "");
        $('#liStaffTax').attr("class", "");
        $('#liStaffAssurance').attr("class", "");
        $('#liStaffImpress').attr("class", "");
        $('#liStaffBenefit').attr("class", "");
        $('#liTimesheet').attr("class", "");
        $('#liStaffReward').attr("class", "");

        $(liId).attr("class", "active");
    }
    function GetSalary() {
        $.post("/Salary/GetSalary", function (out) {
            document.getElementById("bodyContent").innerHTML = (out.html);
            {
                var item = '<tbody id="listStaffMonth">';
                allSalary = out.list;
                $.each(out.list, function (index, salary) {
                    item += '<tr>';
                    item += '<td><a onClick="getSalaryByIndex(' + index + ')" data-toggle="modal" href="#tblUpdateSalary">' + salary.Staff.StaffName + '</a></td>';
                    item += '<td>' + salary.TotalPresent + '</td>';
                    item += '<td>' + salary.TotalAbsent + '</td>';
                    item += '<td>' + convertToMoney(salary.TotalBenefit) + '</td>';
                    item += '<td>' + convertToMoney(salary.TotalTax) + '</td>';
                    item += '<td>' + convertToMoney(salary.TotalAssurance) + '</td>';
                    item += '<td>' + convertToMoney(salary.ActualSalary) + '</td>';

                    item += '<td class="visible-md visible-lg hidden-sm hidden-xs action-buttons"><center><a onClick="getSalaryByIndex(' + index + '); enablebuttonSalary()" class="green" title="Chỉnh sửa" data-toggle="modal" href="#tblUpdateSalary" data-id="' + index
                         + '"><i class="icon-pencil bigger-130"></i></a><a onClick="deleteSalary(' + salary.SalaryID + ')" class="red" title="Xóa" href="#" data-id="' + salary.SalaryID + '"><i class="icon-trash bigger-130"></i></a></center></td>';
                    item += '</tr>';
                });
                item += '</tbody>';
                item = item.split("null").join("");
                $('#tblSalaryDetail').append(item);
                $("#tblSalaryDetail").dataTable().fnDestroy();
                var oTableSalary = $('#tblSalaryDetail').dataTable({
                    "aoColumns": [
                       null, null, null, null, null, null, null, { "bSortable": false }
                    ]
                });
                loadSelectBenefit();
                loadSelectAssurancet();
                getStaffTax();
                getStaffName();
                getMonthinYear();
                getYear();
                // Gọi JS cho component ngày
                $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
                    $(this).prev().focus();
                });
                //Chạy hàm validate
                validateAddStaffSalary('#addStaffSalaryValidateForm');
                $("#cboBenefit").chosen();
                $("#cboBenefit_chosen").css("width", "100%");

                $("#cboAssurance").chosen();
                $("#cboAssurance_chosen").css("width", "100%");

                $("#staffOffice").chosen();
                $("#staffOffice_chosen").css("width", "100%");

                $("#staffAssuranceDetail").chosen();
                $("#staffAssuranceDetail_chosen").css("width", "100%");

                $("#staffBenefitDetail").chosen();
                $("#staffBenefitDetail_chosen").css("width", "100%");

                $("#staffTaxDetail").chosen();
                $("#staffTaxDetail_chosen").css("width", "100%");

                $("#currentImpress").chosen();
                $("#currentImpress_chosen").css("width", "100%");

                //})
                ;
            }
        });
        $('#breadcrumbsMenu').text('Lương nhân viên');
    }

    function GetUpdateSalary() {
        $.post("/Salary/GetSalaryUpdate", function (out) {
            {
                allSalary = out;
                var item = '<tbody id="listStaffMonth">';

                $.each(out, function (index, salary) {
                    item += '<tr>';
                    item += '<td><a onClick="getSalaryByIndex(' + index + ')" data-toggle="modal" href="#tblUpdateSalary">' + salary.Staff.StaffName + '</a></td>';
                    item += '<td>' + salary.TotalPresent + '</td>';
                    item += '<td>' + salary.TotalAbsent + '</td>';
                    item += '<td>' + convertToMoney(salary.TotalBenefit) + '</td>';
                    item += '<td>' + convertToMoney(salary.TotalTax) + '</td>';
                    item += '<td>' + convertToMoney(salary.TotalAssurance) + '</td>';
                    item += '<td>' + convertToMoney(salary.ActualSalary) + '</td>';

                    item += '<td class="visible-md visible-lg hidden-sm hidden-xs action-buttons"><center><a onClick="getSalaryByIndex(' + index + '); enablebuttonSalary()" class="green" title="Chỉnh sửa" data-toggle="modal" href="#tblUpdateSalary" data-id="' + index
                         + '"><i class="icon-pencil bigger-130"></i></a><a onClick="deleteSalary(' + salary.SalaryID + ')" class="red" title="Xóa" href="#" data-id="' + salary.SalaryID + '"><i class="icon-trash bigger-130"></i></a></center></td>';
                    item += '</tr>';
                });
                item += '</tbody>';
                item = item.split("null").join("");
                $('#tblSalaryDetail').html(item);
                $("#tblSalaryDetail").dataTable().fnDestroy();
                var oTableSalary = $('#tblSalaryDetail').dataTable({
                    "aoColumns": [
                       null, null, null, null, null, null, null, { "bSortable": false }
                    ]
                });
          
                $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
                    $(this).prev().focus();
                });
                //Chạy hàm validate
                validateAddStaffSalary('#addStaffSalaryValidateForm');
                getMonthinYear();

                //})
                ;
            }
        });
        $('#breadcrumbsMenu').text('Lương nhân viên');
    }

    //function getSalarybyMonth() {

    //    $.post("/Salary/getSalarybyMonth", { monthId: $('#selectMonth').val() }, function (out) {

    //        $("#tblSalaryDetail")[0].removeChild($("#listStaffMonth")[0]);
    //        {
    //            var item = '<tbody id="listStaffMonth">';
    //            allSalaryIndexMonth = out.list;
    //            $.each(out.list, function (index, salarydetail) {
    //                item += '<tr>';
    //                item += '<td><a onClick="getSalaryByIndexMonth(' + index + ')" data-toggle="modal" href="#tblUpdateSalary">' + salarydetail.Staff.StaffName + '</a></td>';
    //                item += '<td>' + salarydetail.TotalPresent + '</td>';
    //                item += '<td>' + salarydetail.TotalAbsent + '</td>';
    //                item += '<td>' + convertToMoney(salarydetail.TotalBenefit) + '</td>';
    //                item += '<td>' + convertToMoney(salarydetail.TotalTax) + '</td>';
    //                item += '<td>' + convertToMoney(salarydetail.TotalAssurance) + '</td>';
    //                item += '<td>' + convertToMoney(salarydetail.ActualSalary) + '</td>';

    //                item += '<td class="visible-md visible-lg hidden-sm hidden-xs action-buttons"><center><a onClick="getSalaryByIndex(' + index + '); enablebuttonSalary()" class="green" title="Chỉnh sửa" data-toggle="modal" href="#tblUpdateSalary" data-id="' + index
    //                     + '"><i class="icon-pencil bigger-130"></i></a><a onClick="deleteSalary(' + salarydetail.SalaryID + ')" class="red" title="Xóa" href="#" data-id="' + salarydetail.SalaryID + '"><i class="icon-trash bigger-130"></i></a></center></td>';
    //                item += '</tr>';
    //            });
    //            item += '</tbody>';
    //            item = item.split("null").join("");
    //            $('#tblSalaryDetail').append(item);
    //            $("#tblSalaryDetail").dataTable().fnDestroy();
    //            var oTableSalary = $('#tblSalaryDetail').dataTable({
    //                "aoColumns": [
    //                   null, null, null, null, null, null, null, { "bSortable": false }
    //                ]
    //            });

    //            loadSelectBenefit();
    //            loadSelectAssurancet();
    //            getStaffTax();
    //            getStaffName();
    //            //getMonthinYear();

    //            // Gọi JS cho component ngày
    //            $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
    //                $(this).prev().focus();
    //            });

    //            //Chạy hàm validate
    //            validateAddStaffSalary('#addStaffSalaryValidateForm');

    //            $("#cboBenefit").chosen();
    //            $("#cboBenefit_chosen").css("width", "100%");

    //            $("#cboAssurance").chosen();
    //            $("#cboAssurance_chosen").css("width", "100%");

    //            $("#staffOffice").chosen();
    //            $("#staffOffice_chosen").css("width", "100%");
    //            //})
    //            ;
    //        }
    //    });
    //    $('#breadcrumbsMenu').text('Lương nhân viên');

    //}

    function getSalarybyMonthandYear() {

        $.post("/Salary/getSalarybyMonthandYear", { monthId: $('#selectMonth').val(), yearId: $('#cboYear').val() }, function (out) {

            $("#tblSalaryDetail")[0].removeChild($("#listStaffMonth")[0]);
            {
                var item = '<tbody id="listStaffMonth">';
                allSalary = out.list;
                $('.close').click();
                $.each(out.list, function (index, salarydetail) {
                    item += '<tr>';
                    item += '<td><a onClick="getSalaryByIndex(' + index + ')" data-toggle="modal" href="#tblUpdateSalary">' + salarydetail.Staff.StaffName + '</a></td>';
                    item += '<td>' + salarydetail.TotalPresent + '</td>';
                    item += '<td>' + salarydetail.TotalAbsent + '</td>';
                    item += '<td>' + convertToMoney(salarydetail.TotalBenefit) + '</td>';
                    item += '<td>' + convertToMoney(salarydetail.TotalTax) + '</td>';
                    item += '<td>' + convertToMoney(salarydetail.TotalAssurance) + '</td>';
                    item += '<td>' + convertToMoney(salarydetail.ActualSalary) + '</td>';

                    item += '<td class="visible-md visible-lg hidden-sm hidden-xs action-buttons"><center><a onClick="getSalaryByIndex(' + index + '); enablebuttonSalary()" class="green" title="Chỉnh sửa" data-toggle="modal" href="#tblUpdateSalary" data-id="' + index
                         + '"><i class="icon-pencil bigger-130"></i></a><a onClick="deleteSalary(' + salarydetail.SalaryID + ')" class="red" title="Xóa" href="#" data-id="' + salarydetail.SalaryID + '"><i class="icon-trash bigger-130"></i></a></center></td>';
                    item += '</tr>';
                });
                item += '</tbody>';
                item = item.split("null").join("");
                $('#tblSalaryDetail').append(item);
                $("#tblSalaryDetail").dataTable().fnDestroy();
                var oTableSalary = $('#tblSalaryDetail').dataTable({
                    "aoColumns": [
                       null, null, null, null, null, null, null, { "bSortable": false }
                    ]
                });

                //loadSelectBenefit();
                //loadSelectAssurancet();
                //getStaffTax();
                //getStaffName();
                //getMonthinYear();

                // Gọi JS cho component ngày
                $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
                    $(this).prev().focus();
                });

                //Chạy hàm validate
                validateAddStaffSalary('#addStaffSalaryValidateForm');

                $("#cboBenefit").chosen();
                $("#cboBenefit_chosen").css("width", "100%");

                $("#cboAssurance").chosen();
                $("#cboAssurance_chosen").css("width", "100%");

                $("#staffOffice").chosen();
                $("#staffOffice_chosen").css("width", "100%");
                //})
                ;
            }
        });
        $('#breadcrumbsMenu').text('Lương nhân viên');

    }
    function getSalaryByIndexMonth(index) {
        disablebuttonSalary(); //chạy hàm này để disable cái select box
        editFr = $('#tblUpdateSalary');

        $('#salaryId', editFr).val(allSalaryIndexMonth[index].SalaryID);
        $('#detailStaffName', editFr).val(allSalaryIndexMonth[index].Staff.StaffId);

        var bd = convertNETDateTime(allSalaryIndexMonth[index].Date).toLocaleFormat('%d/%m/%Y');
        $('#detailDate', editFr).val(bd);

        $('#detailTotalAbsent', editFr).val(allSalaryIndexMonth[index].TotalAbsent);
        $('#detailTotalPresent', editFr).val(allSalaryIndexMonth[index].TotalPresent);
        $('#detailTotalBenefit', editFr).val(convertToMoney(allSalaryIndexMonth[index].TotalBenefit));
        $('#detailTotalImprest', editFr).val(convertToMoney(allSalaryIndexMonth[index].TotalImprest));
        $('#detailTotalTax', editFr).val(convertToMoney(allSalaryIndexMonth[index].TotalTax));
        $('#detailTotalAssurance', editFr).val(convertToMoney(allSalaryIndexMonth[index].TotalAssurance));
        $('#detailTotalReward', editFr).val(convertToMoney(allSalaryIndexMonth[index].TotalReward));
        $('#detailBaseSalary', editFr).val(convertToMoney(allSalaryIndexMonth[index].BaseSalary));
        $('#detailActualSalary', editFr).val(convertToMoney(allSalaryIndexMonth[index].ActualSalary));
        $('#detailAppendantPeople', editFr).val(allSalaryIndexMonth[index].Staff.AppendantPeople);
        $('#detailTotalAbsentIsallow', editFr).val(allSalaryIndexMonth[index].Staff.TimeSheets.StaffId);
        $('#detailTotalMoneydet', editFr).val(convertToMoney(allSalaryIndexMonth[index].TotalMoneyDeduction));
        $('#detailTotalDatedet', editFr).val(allSalaryIndexMonth[index].TotalDateDeduction);

        //Tính tổng số ngày nghỉ có phép
        var array = new Array();
        var IsallowAbsent = 0;
        var Absent = 0;
        $.each(allSalaryIndexMonth[index].Staff.TimeSheets, function (i, totalabsent) {
            var bd1 = convertNETDateTime(totalabsent.Date).toLocaleFormat('%m');
            var bd = convertNETDateTime(allSalaryIndexMonth[index].Date).toLocaleFormat('%m');
            //$('#detailDate', editFr).val(bd);
            if (totalabsent.IsAllowed == false && bd1 == bd) {
                IsallowAbsent = IsallowAbsent + totalabsent.Hours;

            } if (totalabsent.IsAllowed == true && bd1 == bd) {
                Absent = Absent + totalabsent.Hours;

            }
        });
        IsallowAbsent = IsallowAbsent / 8;
        Absent = Absent / 8;
        $('#detailTotalAbsentAllow', editFr).val(Absent);
        $('#detailTotalAbsentIsallow', editFr).val(IsallowAbsent);

        $("#staffAssuranceDetail").val(array);
        $("#staffAssuranceDetail").trigger("chosen:updated");

        //tạo ra một mảng để lưu các id và push lại giá trị vào để hiển thị bảo hiểm
        var array = new Array();
        $.each(allSalaryIndexMonth[index].SalaryAssuranceDetails, function (i, assurance) {
            array.push(assurance.AssuranceID);
        });
        $("#staffAssuranceDetail").val(array);
        $("#staffAssuranceDetail").trigger("chosen:updated");

        //tạo ra một mảng để lưu các id và push lại giá trị vào để hiển thị thuế
        var array = new Array();
        $.each(allSalaryIndexMonth[index].SalaryTaxDetails, function (i, tax) {
            array.push(tax.TaxID);
        });
        $("#staffTaxDetail").val(array);
        $("#staffTaxDetail").trigger("chosen:updated");

        //tạo ra một mảng để lưu các id và push lại giá trị vào để hiển thị trợ cấp
        var array = new Array();
        $.each(allSalaryIndexMonth[index].SalaryBenefitDetails, function (i, benefit) {
            array.push(benefit.BenefitID);
        });
        $("#staffBenefitDetail").val(array);
        $("#staffBenefitDetail").trigger("chosen:updated");

        validateAddStaffSalary('#updateStaffSalaryValidateForm');


    }

    function getMonthinYear() {

        $.post("/Salary/getMonthInYear", {}, function (out) {
            var item = "";
            $.each(out, function (index, ser) {
                item += '<option value="' + ser.Value + '">' + ser.Month + '</option>';
            });
            $("#selectMonth").html(item);
            $("#cboMonth").html(item);
            //tháng được thưởng
            $("#cboMonthReward").html(item);
            $("#cboMonthImpress").html(item);
            $("#cboMonthTimesheet").html(item);
            //     $("#selectMonth").trigger("chosen:updated");
        });
    }

    function getYear() {

        $.post("/Salary/getYear", {}, function (out) {
            var item = "";
            $.each(out, function (index, ser) {
                item += '<option value="' + ser.Value + '">' + ser.Year + '</option>';
            });
            $("#cboYear").html(item);
            $("#cboYearReward").html(item);
            $("#cboYearImpress").html(item);
            $("#cboYearTimesheet").html(item);
            //     $("#selectMonth").trigger("chosen:updated");
        });
    }

    function addStaffSalary() {
        if ($('#addStaffSalaryValidateForm').valid()) {
            editFr = $('#tblAddStaff').val();
            var staffGroup = $('#selectStaffName option:selected', editFr).val();
            var staffDayofbith = $('#txtStaffDayofbith', editFr).val();
            var staffRole = $('#selectStaffTax option:selected', editFr).val();

            // bảo hiểm
            var cboAssUVal = "";
            if ($("#cboAssurance").val() != null && $("#cboAssurance").val() != "") {
                cboAssUVal = $("#cboAssurance").val().toString();
            }
            //trợ cấp
            var cboOfficeVal = "";
            if ($("#cboBenefit").val() != null && $("#cboBenefit").val() != "") {
                cboOfficeVal = $("#cboBenefit").val().toString();
            }


            $.post("/Salary/AddStaffSalary", {
                selectStaffName: staffGroup, selectStaffTax: staffRole, txtStaffDayofbith: staffDayofbith, cboAssUVal: cboAssUVal, cboOfficeVal: cboOfficeVal
            }, function (result) {
                $('#existCountSalary').attr("style", "display: none");
                $('#invalidateCountSalary').attr("style", "display: none");
                if (result == "successful") {
                    $('.close').click();
                    $("body").attr("class", "");
                    //clearField1();
                    GetUpdateSalary();
                    notification("Tính lương nhân viên thành công!", "", 2000, "btn-primary center");
                } else if (result == 'error') {
                    $('.close').click();
                    notification("Tính lương nhân viên thất bại!", "Hãy thử tính lại", 3000, "gritter-error center");
                }
                else if (result == "exist") {
                    $('#existCountSalary').attr("style", "display: block");
                }
                else if (result == "dateinValide") {
                    $('#invalidateCountSalary').attr("style", "display: block");
                }
            })
                .error(function () {
                    $('.close').click();
                    notification("Tính lương nhân viên thất bại", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                });

        }
    }

    function getSalaryByIndex(index) {
        disablebuttonSalary(); //chạy hàm này để disable cái select box
        editFr = $('#tblUpdateSalary');
        $('#salaryId', editFr).val(allSalary[index].SalaryID);
        $('#detailStaffName', editFr).val(allSalary[index].Staff.StaffId);

        var bd = convertNETDateTime(allSalary[index].Date).toLocaleFormat('%d/%m/%Y');
        $('#detailDate', editFr).val(bd);
        var bd1 = convertNETDateTime(allSalary[index].Date).toLocaleFormat('%m');

        $('#detailTotalAbsent', editFr).val(allSalary[index].TotalAbsent);
        $('#detailTotalPresent', editFr).val(allSalary[index].TotalPresent);
        $('#detailTotalBenefit', editFr).val(convertToMoney(allSalary[index].TotalBenefit));
        $('#detailTotalImprest', editFr).val(convertToMoney(allSalary[index].TotalImprest));
        $('#detailTotalTax', editFr).val(convertToMoney(allSalary[index].TotalTax));
        $('#detailTotalAssurance', editFr).val(convertToMoney(allSalary[index].TotalAssurance));
        $('#detailTotalReward', editFr).val(convertToMoney(allSalary[index].TotalReward));
        $('#detailBaseSalary', editFr).val(convertToMoney(allSalary[index].BaseSalary));
        $('#detailActualSalary', editFr).val(convertToMoney(allSalary[index].ActualSalary));
        $('#detailAppendantPeople', editFr).val(allSalary[index].Staff.AppendantPeople);
        $('#detailTotalMoneydet', editFr).val(convertToMoney(allSalary[index].TotalMoneyDeduction));
        $('#detailTotalDatedet', editFr).val(allSalary[index].TotalDateDeduction);


        //Tính tổng số ngày nghỉ có phép
        var array = new Array();
        var IsallowAbsent = 0;
        var Absent = 0;
        $.each(allSalary[index].Staff.TimeSheets, function (i, totalabsent) {
            var bd1 = convertNETDateTime(totalabsent.Date).toLocaleFormat('%m');
            var bd = convertNETDateTime(allSalary[index].Date).toLocaleFormat('%m');
            //$('#detailDate', editFr).val(bd);
            if (totalabsent.IsAllowed == false && bd1 == bd) {
                IsallowAbsent = IsallowAbsent + totalabsent.Hours;

            } if (totalabsent.IsAllowed == true && bd1 == bd) {
                Absent = Absent + totalabsent.Hours;

            }
        });
        IsallowAbsent = IsallowAbsent / 8;
        Absent = Absent / 8;
        $('#detailTotalAbsentAllow', editFr).val(Absent);
        $('#detailTotalAbsentIsallow', editFr).val(IsallowAbsent);

        $("#staffAssuranceDetail").val(array);
        $("#staffAssuranceDetail").trigger("chosen:updated");


        //tạo ra một mảng để lưu các id và push lại giá trị vào để hiển thị bảo hiểm
        var array = new Array();
        $.each(allSalary[index].SalaryAssuranceDetails, function (i, assurance) {
            array.push(assurance.AssuranceID);
        });
        $("#staffAssuranceDetail").val(array);
        $("#staffAssuranceDetail").trigger("chosen:updated");

        //tạo ra một mảng để lưu các id và push lại giá trị vào để hiển thị thuế
        var array = new Array();
        $.each(allSalary[index].SalaryTaxDetails, function (i, tax) {
            array.push(tax.TaxID);
        });
        $("#staffTaxDetail").val(array);
        $("#staffTaxDetail").trigger("chosen:updated");

        //tạo ra một mảng để lưu các id và push lại giá trị vào để hiển thị trợ cấp
        var array = new Array();
        $.each(allSalary[index].SalaryBenefitDetails, function (i, benefit) {
            array.push(benefit.BenefitID);
        });
        $("#staffBenefitDetail").val(array);
        $("#staffBenefitDetail").trigger("chosen:updated");

        validateAddStaffSalary('#updateStaffSalaryValidateForm');
    }
    //gọi lại nhóm nhân viên để đổ dữ liệu về select box

    function getStaffName() {
        $.post("/Staff/ListAllStaff", {}, function (out) {
            var item = '';
            $.each(out, function (index, group) {
                item += '<option value="' + group.StaffId + '">' + group.StaffName + '</option>';
            });
            $('#selectStaffName').html(item);
            $('#selectGroup').html(item);
            $('#detailStaffName').html(item);
            $('#selectStaffImpress').html(item);
            $('#selectStaffReward').html(item);
            $('#selectStaffTimesheet').html(item);
            
            



            $("#selectGroup").trigger("chosen:updated")
            $('#selectStaffName').val("");
        });
    }

    function loadSelectAssurancet() {
        $.post("/Salary/GetSelectAssurance", {}, function (out) {
            var item = "";
            $.each(out, function (index, off) {
                item += '<option value="' + off.AssuranceID + '">' + off.Name + '</option>';
            });
            $('#cboAssurance').html(item);
            $('#staffAssuranceDetail').html(item);

            $("#cboAssurance").trigger("chosen:updated");
        });
    }

    function getStaffTax() {
        $.post("/Salary/GetAllTax", {}, function (out) {
            var item = '';
            $.each(out, function (index, role) {

                item += '<option value="' + role.TaxID + '">' + role.Name + '</option>';

            });
            $('#selectStaffTax').html(item);
            $('#txtSalary').html(item);
            $("#txtSalary").trigger("chosen:updated");
            $('#staffTaxDetail').html(item);
            $('#selectStaffTax').val("");

        });
    }

    //Hàm này để gọi lên tất cả các trợ cấp
    function loadSelectBenefit() {
        $.post("/Salary/GetSelectBenefit", {}, function (out) {
            var item = "";
            $.each(out, function (index, off) {
                item += '<option value="' + off.BenefitID + '">' + off.Name + '</option>';
            });
            $('#cboBenefit').html(item);
            $("#cboBenefit").trigger("chosen:updated");
            $('#staffBenefitDetail').html(item);
        });
    }

    function updateStaffSalary() {
        if ($('#updateStaffSalaryValidateForm').valid()) {
            editFr = $('#tblUpdateSalary');
            var salaryId = $('#salaryId', editFr).val();
            var selectStaffId = $('#detailStaffName', editFr).val();
            var detailDate = $('#detailDate', editFr).val();

            //mảng bảo hiểm
            var cboStaffAssuranceDetail = "";
            if ($("#staffAssuranceDetail").val() != null && $("#staffAssuranceDetail").val() != "") {
                cboStaffAssuranceDetail = $("#staffAssuranceDetail").val().toString();
                //mảng trợ cấp
            }
            var cboStaffBenefitDetail = "";
            if ($("#staffBenefitDetail").val() != null && $("#staffBenefitDetail").val() != "") {
                cboStaffBenefitDetail = $("#staffBenefitDetail").val().toString();


            }
            $.post("/Salary/UpdateStaffSalary", {
                salaryId: salaryId, selectStaffId: selectStaffId, detailDate: detailDate, cboStaffAssuranceDetail: cboStaffAssuranceDetail, cboStaffBenefitDetail: cboStaffBenefitDetail
            }, function (result) {
                if (result == "successful") {
                    disablebuttonSalary(); // CHỈNH sửa lần 2
                    GetUpdateSalary();
                    $('.close').click();
                    $("body").attr("class", "");
                    notification("Cập nhật  lương nhân viên thành công!", "", 2000, "btn-primary center");
                } else if (result == 'error') {
                    notification("Cập nhật  lương nhân viên thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                }
                else if (result == 'notpermit') {
                    notification("Bạn chỉ được chỉnh sửa lương tháng hiện tại!", "", 3000, "gritter-error center");
                }
            })
                    .error(function () {
                        notification("Cập nhật lương nhân viên thất bại", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                    });


        }
    }

    function deleteSalary(id) {
        $(ace.click_event, function () {
            bootbox.confirm("Bạn thực sự muốn thực hiện thao tác này?", function (result) {
                if (result) {
                    $.post("/Salary/deleteSalary", { salaryId: id }
                        , function (result) {
                            if (result == "Successful") {
                                GetUpdateSalary();
                                notification("Xóa lương nhân viên thành công!", "", 2000, "btn-primary center");
                            } else if (result == 'Error') {
                                $('.close').click();
                                notification("Xóa lương nhân viên thất bại!", "", 3000, "gritter-error center");
                            }
                        })
                        .error(function () {
                            notification("Xóa lương nhân viên thất bại!", "Có lỗi xảy ra trong quá trình xóa nhóm lưng nhân viên.", 3000, "gritter-error center");
                        });
                }
            });
        });
    }
    function exportExcel() {
        $.post("/Salary/ExportExcel", { monthId: $('#selectMonth').val(), yearId: $('#cboYear').val() }, function (result) {
            if (result == "Successful") {
                notification("Xuất file Excel thành công !", "", 2000, "btn-primary center");
            } else if (result == 'Error') {
                notification("Xuất file Excel thất bại!", "Không có dữ liệu để xuất ra file, hãy chọn tháng khác!.", 3000, "gritter-error center");
            }
        }).error(function () {
            $('.close').click();
            notification("Xuất file Excel thất bại", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
        });
    }

    function disablebuttonSalary() {
        editFr = $('#tblUpdateStaff');
        $('.editableInput').attr("disabled", "");
        $('.editableSelect').attr("disabled", "disabled");
        $('.ace', editFr).attr("disabled", "");
        $('#enablebutton').show();
        $('#disablebutton').hide();
        $('#detailStaffDayofbith', editFr).attr("style", "cursor: pointer");

    }

    function enablebuttonSalary() {
        editFr = $('#tblUpdateStaff');
        $('.editableInput').removeAttr("disabled");
        //$('.editableSelect').removeAttr("disabled");
        $("#staffAssuranceDetail").trigger("chosen:updated");
        //$("#staffTaxDetail").trigger("chosen:updated");
        $("#staffBenefitDetail").trigger("chosen:updated");
        $('.ace', editFr).removeAttr("disabled");
        $("#staffOffice").trigger("chosen:updated");
        $('#disablebutton').show();
        $('#enablebutton').hide();

    }

    function clearFieldSalary() {
        editFr = $('#tblAddStaff');
        $('#selectStaffName', editFr).val("");
        $('#txtStaffDayofbith', editFr).val("");


        $("#cboAssurance", editFr).val("");
        $("#cboAssurance").trigger("chosen:updated")

        $("#cboBenefit", editFr).val("");
        $("#cboBenefit").trigger("chosen:updated")
    }

    function validateAddStaffSalary(validateform) {
        validator = $(validateform).validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            rules: {
                selectStaffName: {
                    required: true
                },
                txtStaffDayofbith: {
                    required: true
                }
                //,
                //cboBenefit: {
                //    required: true
                //},
                //cboAssurance: {
                //    required: true
                //}

            },
            messages: {
                selectStaffName: {
                    required: "Chọn một nhân viên!"
                },
                txtStaffDayofbith: {
                    required: "Chọn ngày tính lương nhân viên!",
                }
                //,
                //cboBenefit: {
                //    required: "Chọn một trợ cấp!",
                //},
                //cboAssurance: {
                //    required: "Chọn một bảo hiểm!",
                //}

            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            },

            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).remove();
            },
            errorPlacement: function (error, element) {
                if (element.is(':checkbox') || element.is(':radio')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                }
                else error.insertAfter(element.parent());
            }
        });
    }

</script>

<script type="text/javascript">
    jQuery(function ($) {
        //$(".chosen-select").chosen();
        //$("#cboOffice_chosen").css("width", "100%");

        var oTableSalary = $('#tblSalaryDetail').dataTable({
            "aoColumns": [
                null, null, null, null, null, null, null, { "bSortable": false }
            ]
        });

        $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });

        $('textarea[class*=autosize]').autosize({ append: "\n" });
    })
</script>






@*all scrip của Bảng Thuế----------------------------------------------------------------------*@
<script>
    function getAllTax() {
        $.post("/Salary/GetTaxs", function (out) {

            document.getElementById("bodyContent").innerHTML = (out.html);
            {

                var item = '<tbody>';
                allStaffTax = out.list;
                $.each(out.list, function (index, tax) {

                    item += '<tr>';
                    item += '<td><a onClick="getTaxById(' + index + ')" data-toggle="modal" href="#tblUpdateTax">' + tax.Name + '</a></td>';
                    item += '<td>' + convertToMoney(tax.MoneyFrom) + '</td>';
                    item += '<td>' + convertToMoney(tax.MoneyTo) + '</td>';
                    item += '<td>' + tax.Rate + '</td>';
                    item += '<td>' + convertToMoney(tax.IndexTax) + '</td>';
                    if (tax.Active == false) {
                        item += '<td><span class="label label-lg label-danger arrowed">Ngừng áp dụng</span></td>';
                    }
                    else if (tax.Active == true) {
                        item += '<td><span class="label label-lg label-success arrowed">Đang áp dụng</span></td>';
                    }
                    item += '<td class="visible-md visible-lg hidden-sm hidden-xs action-buttons"><center><a onClick="getTaxById(' + index + '); enablebuttonTax()" class="green" title="Chỉnh sửa" data-toggle="modal" href="#tblUpdateTax" data-id="' + index
                        + '"><i class="icon-pencil bigger-130"></i></a><a onClick="deleteTax(' + tax.TaxID + ')" class="red" title="Xóa" href="#" data-id="' + tax.TaxID + '"><i class="icon-trash bigger-130"></i></a></center></td>';

                    item += '</tr>';
                });
                item += '</tbody>';
                item = item.split("null").join("");
                $('#tblTaxDetail').append(item);
                $("#tblTaxDetail").dataTable().fnDestroy();
                var oTableTax = $('#tblTaxDetail').dataTable({
                    "aoColumns": [
                       null, null, null, null, null, null, { "bSortable": false }
                    ]
                });
                validateAddTax('#addTaxValidateForm');
                $("#txtTaxFrom").numeric({ decimal: false, negative: false });
                $("#txtTaxTo").numeric({ decimal: false, negative: false });
                $("#txtTaxIndex").numeric({ decimal: false, negative: false });

                ;
            }
        })
        $('#breadcrumbsMenu').text('Thuế');
    }

    function addNewTax() {
        if ($('#addTaxValidateForm').valid()) {
            editFr = $('#tblAddTax');
            var txtTaxName = $('#txtTaxName', editFr).val();
            var txtTaxRate = $('#txtTaxRate', editFr).val();
            //var txtTaxIndex = $('#txtTaxIndex', editFr).val();
            var txtTaxIndex = $("#txtTaxIndex").val().replace("VNĐ", "");
            txtTaxIndex = txtTaxIndex.split(".").join("");

            //var txtTaxFrom = $('#txtTaxFrom', editFr).val();
            var txtTaxFrom = $("#txtTaxFrom").val().replace("VNĐ", "");
            txtTaxFrom = txtTaxFrom.split(".").join("");

            //var txtTaxTo = $('#txtTaxTo', editFr).val();
            var txtTaxTo = $("#txtTaxTo").val().replace("VNĐ", "");
            txtTaxTo = txtTaxTo.split(".").join("");

            $.post("/Salary/AddTax", {
                txtTaxName: txtTaxName, txtTaxRate: txtTaxRate, txtTaxIndex: txtTaxIndex, txtTaxFrom: txtTaxFrom, txtTaxTo: txtTaxTo

            }, function (result) {
                $('#existTaxError').attr("style", "display: none");
                if (result == "Successful") {
                    getAllTax();
                    $('.close').click();
                    $("body").attr("class", "");

                    notification("Tạo thuế thành công!", "", 2000, "btn-primary center");
                } else if (result == 'Error') {
                    $('.close').click();
                    notification("Tạo thuế thất bại!", "", 3000, "gritter-error center");
                }
                else if (result == "exist") {
                    $('#existTaxError').attr("style", "display: block");
                }
            })
                .error(function () {
                    $('.close').click();
                    notification("Tạo thuế thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                });
        }
    }

    function getTaxById(index) {
        disablebuttonTax();
        editFr = $('#tblUpdateTax');
        $('#txTaxId', editFr).val(allStaffTax[index].TaxID);
        $('#txtEditName', editFr).val(allStaffTax[index].Name);
        //$('#txtEditFrom', editFr).val(allStaffTax[index].MoneyFrom);
        var from = convertToMoney(allStaffTax[index].MoneyFrom);
        $('#txtEditFrom', editFr).val(from);

        //$('#txtEditTo', editFr).val(allStaffTax[index].MoneyTo);
        var to = convertToMoney(allStaffTax[index].MoneyTo);
        $('#txtEditTo', editFr).val(to);

        $('#txtEditTax', editFr).val(allStaffTax[index].Rate);
        //$('#txtEditIndex', editFr).val(allStaffTax[index].IndexTax);
        var editIndex = convertToMoney(allStaffTax[index].IndexTax);
        $('#txtEditIndex', editFr).val(editIndex);

        validateAddTax('#updateTaxValidateForm');
        $("#txtEditTo").numeric({ decimal: false, negative: false });
        $("#txtEditIndex").numeric({ decimal: false, negative: false });
        $("#txtEditFrom").numeric({ decimal: false, negative: false });
    }

    function updateTax() {
        if ($('#updateTaxValidateForm').valid()) {
            editFr = $('#tblUpdateTax');
            var txTaxId = $('#txTaxId', editFr).val();
            var taxName = $('#txtEditName', editFr).val();
            var taxTax = $('#txtEditTax', editFr).val();
            //var taxIndex = $('#txtEditIndex', editFr).val();
            var taxIndex = $("#txtEditIndex").val().replace("VNĐ", "");
            taxIndex = taxIndex.split(".").join("");

            //var txtTaxFrom = $('#txtEditFrom', editFr).val();
            var txtTaxFrom = $("#txtEditFrom").val().replace("VNĐ", "");
            txtTaxFrom = txtTaxFrom.split(".").join("");

            //var txtTaxTo = $('#txtEditTo', editFr).val();
            var txtTaxTo = $("#txtEditTo").val().replace("VNĐ", "");
            txtTaxTo = txtTaxTo.split(".").join("");

            disablebuttonTax(); // CHỈNH sửa lần 2
            $.post("/Salary/UpdateTax", {
                txTaxId: txTaxId, txtTaxName: taxName, txtTaxRate: taxTax, txtTaxIndex: taxIndex, txtTaxFrom: txtTaxFrom, txtTaxTo: txtTaxTo
            }, function (result) {
                $('#existTaxErrorDetail').attr("style", "display: none");
                if (result == "Successful") {
                    $('.close').click();
                    getAllTax();
                    $("body").attr("class", "");
                    notification("Cập nhật thuế thành công!", "", 2000, "btn-primary center");
                } else if (result == 'Error') {
                    $('.close').click();
                    notification("Cập nhậtthuế thất bại!", "", 3000, "gritter-error center");
                }
                else if (result == "exist") {
                    $('#existTaxErrorDetail').attr("style", "display: block");
                }
            })
                        .error(function () {
                            $('.close').click();
                            notification("Tạo thuế thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                        });
        }
    }
    function deleteTax(id) {
        $(ace.click_event, function () {
            bootbox.confirm("Bạn có muốn thực hiện thao tác này?", function (result) {
                if (result) {
                    $.post("/Salary/DeleteTax", { txTaxId: id }
                    , function (result) {
                        if (result == "inactive") {
                            $('.close').click();
                            getAllTax();

                            $("body").attr("class", "");
                            notification("Thuế này đã ngừng áp dụng!", "", 3000, "btn-primary center");
                        } if (result == "active") {
                            $('.close').click();
                            getAllTax();
                            $("body").attr("class", "");
                            notification("Thuế đã áp dụng lại!", "", 3000, "btn-primary center");
                        }
                        else if (result == "Error") {

                            notification("Chỉnh sửa Thuế thất bại!", "Thuế này hiện đang được sử dụng", 5000, "gritter-error center");
                        }
                    }).error(function () {
                        notification("Chỉnh sửa Thuếthất bại!", "Có lỗi xảy ra trong quá trình xóa văn phòng.", 5000, "gritter-error center");
                    });
                    $("#closeBtn").click();
                }
            });
        });
    }

    function validateAddTax(validateform) {
        $(validateform).validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            rules: {
                txtTaxName: {
                    required: true
                },
                txtTaxFrom: {
                    required: true,
                    maxlength: false

                },
                txtTaxIndex: {
                    required: true,
                    maxlength: false
                },
                txtTaxRate: {
                    required: true,
                    number: true,
                    min: true
                },
                txtTaxTo: {
                    required: true,
                    maxlength: false

                }

            },
            messages: {
                txtTaxName: {
                    required: "Nhập tên thuế!"
                },
                txtTaxFrom: {
                    required: "Nhập khoảng tiền bắt đầu tính thuế!",
                },
                txtTaxIndex: {
                    required: "Nhập chỉ số tính thuế!"
                },
                txtTaxRate: {
                    required: "Nhập phần trăm tính thuế %!",
                    number: "Hãy nhập số chính xác",
                    min: "% không hợp lệ"
                },
                txtTaxTo: {
                    required: "Nhập khoảng tiền kết thúc tính thuế!",
                }
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            },

            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).remove();
            },
            errorPlacement: function (error, element) {
                if (element.is(':checkbox') || element.is(':radio')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                }
                else error.insertAfter(element.parent());
            }
        });
    }

    function disablebuttonTax() {
        editFr = $('#tblUpdateTax');
        $('.editableInput', editFr).attr("disabled", "");
        $('#enablebuttonTax').show();
        $('#disablebuttonTax').hide();
    }

    function enablebuttonTax() {
        editFr = $('#tblUpdateTax');
        $('.editableInput', editFr).removeAttr("disabled");
        $('#disablebuttonTax').show();
        $('#enablebuttonTax').hide();
    }

    //function clearField2() {
    //    editFr = $('#tblAddTax');
    //    $('#txtGroupName', editFr).val("");
    //    $('#txtGroupDetail', editFr).val("");
    //}

</script>

<script type="text/javascript">
    jQuery(function ($) {
        var oTableTax = $('#tblTaxDetail').dataTable({
            "aoColumns": [
               null, null, null, null, null, null, { "bSortable": false }
            ]
        });

        $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });

        $('textarea[class*=autosize]').autosize({ append: "\n" });
    })
</script>

@*all scrip của bảng Bảo hiểm----------------------------------------------------------------------*@

<script>
    function getAllAssurance() {
        $.post("/Salary/getAllAssurance", function (out) {

            document.getElementById("bodyContent").innerHTML = (out.html);
            {
                var item = '<tbody>';
                allAssurance = out.list;
                $.each(out.list, function (index, assur) {
                    item += '<tr>';
                    item += '<td><a onClick="getAssuranceById(' + index + ')" data-toggle="modal" href="#tblUpdateAssurance">' + assur.Name + '</a></td>';
                    item += '<td>' + assur.Rate + '</td>';
                    if (assur.Active == false) {
                        item += '<td><span class="label label-lg label-danger arrowed">Ngừng áp dụng</span></td>';
                    }
                    else if (assur.Active == true) {
                        item += '<td><span class="label label-lg label-success arrowed">Đang áp dụng</span></td>';
                    }
                    item += '<td class="visible-md visible-lg hidden-sm hidden-xs action-buttons"><center><a onClick="getAssuranceById(' + index + '); enablebuttonAssuran()" class="green" title="Chỉnh sửa" data-toggle="modal" href="#tblUpdateAssurance" data-id="' + index
                        + '"><i class="icon-pencil bigger-130"></i></a><a onClick="deleteAssuran(' + assur.AssuranceID + ')" class="red" title="Xóa" href="#" data-id="' + assur.AssuranceID + '"><i class="icon-trash bigger-130"></i></a></center></td>';
                    item += '</tr>';
                });
                item += '</tbody>';
                item = item.split("null").join("");
                $('#tblAssuranDetail').append(item);
                $("#tblAssuranDetail").dataTable().fnDestroy();
                var oTableAssuran = $('#tblAssuranDetail').dataTable({
                    "aoColumns": [
                       null, null, null, { "bSortable": false }
                    ]
                });
                validateAddAssuran('#addAssuranceValidateForm');
                ;
            }
        })
        $('#breadcrumbsMenu').text('Bảo hiểm');
    }

    function addNewAssurance() {
        if ($('#addAssuranceValidateForm').valid()) {
            editFr = $('#tblAddAssurance');
            var txtAssName = $('#txtAssuranceName', editFr).val();
            var txtAssIndex = $('#txtAssuranceIndex', editFr).val();
            $.post("/Salary/AddAssurance", {
                txtAssuranceName: txtAssName, txtAssuranceIndex: txtAssIndex

            }, function (result) {
                $('#existAssuranError').attr("style", "display: none");
                if (result == "Successful") {
                    getAllAssurance();
                    $('.close').click();
                    $("body").attr("class", "");

                    notification("Tạo bảo hiểm mới thành công!", "", 2000, "btn-primary center");
                } else if (result == 'Error') {
                    $('.close').click();
                    notification("Tạo bảo hiểm thất bại!", "", 3000, "gritter-error center");
                }
                else if (result == "exist") {
                    $('#existAssuranError').attr("style", "display: block");
                }

            })
                .error(function () {
                    $('.close').click();
                    notification("Tạo bảo hiểm thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                });
        }
    }

    function getAssuranceById(index) {
        disablebuttonAssuran();
        editFr = $('#tblUpdateAssurance');
        $('#txAssuranceId', editFr).val(allAssurance[index].AssuranceID);
        $('#txtEditName', editFr).val(allAssurance[index].Name);
        $('#txtEditRate', editFr).val(allAssurance[index].Rate);

        validateAddAssuran('#updateAssuranceValidateForm');
    }

    function updateAssurance() {
        if ($('#updateAssuranceValidateForm').valid()) {
            editFr = $('#tblUpdateAssurance');
            var txAssuranceId = $('#txAssuranceId', editFr).val();
            var assName = $('#txtEditName', editFr).val();
            var assRate = $('#txtEditRate', editFr).val();

            disablebuttonAssuran(); // Chỉnh sửa lần 2
            $.post("/Salary/UpdateAssurance", {
                assuranceId: txAssuranceId, txtEditName: assName, txtEditRate: assRate
            }, function (result) {
                if (result == "Successful") {
                    $('.close').click();
                    getAllAssurance();
                    $("body").attr("class", "");
                    notification("Cập nhật bảo hiểm thành công!", "", 2000, "btn-primary center");
                } else if (result == 'Error') {
                    $('.close').click();
                    notification("Cập nhật bảo hiểm thất bại!", "", 3000, "gritter-error center");
                }
            })
                        .error(function () {
                            $('.close').click();
                            notification("Cập nhật bảo hiểm thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                        });
        }
    }

    function deleteAssuran(id) {
        $(ace.click_event, function () {
            bootbox.confirm("Bạn có muốn thực hiện thao tác này?", function (result) {
                if (result) {
                    $.post("/Salary/DeleteAssurance", { assuranceId: id }
                    , function (result) {
                        if (result == "inactive") {
                            $('.close').click();
                            getAllAssurance();

                            $("body").attr("class", "");
                            notification("Bảo hiểm này đã ngừng áp dụng!", "", 3000, "btn-primary center");
                        } if (result == "active") {
                            $('.close').click();
                            getAllAssurance();
                            $("body").attr("class", "");
                            notification("Bảo hiểm đã áp dụng lại!", "", 3000, "btn-primary center");
                        }
                        else if (result == "Error") {

                            notification("Chỉnh sửa Bảo hiểm thất bại!", "Bảo hiểm này hiện đang được sử dụng.", 5000, "gritter-error center");
                        }
                    }).error(function () {
                        notification("Chỉnh sửa Bảo hiểm thất bại!", "Có lỗi xảy ra trong quá trình xóa bảo hiểm.", 5000, "gritter-error center");
                    });
                    $("#closeBtn").click();
                }
            });
        });
    }

    function validateAddAssuran(validateform) {
        $(validateform).validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            rules: {
                txtAssuranceName: {
                    required: true
                },
                txtAssuranceIndex: {
                    required: true,
                    number: true,
                    min: true

                }

            },
            messages: {
                txtAssuranceName: {
                    required: "Nhập tên bảo hiểm!"
                },
                txtAssuranceIndex: {
                    required: "Nhập phần trăm (%) bảo hiểm!",
                    number: "Hãy nhập số chính xác!",
                    min: "Hãy nhập % chính xác!"
                }
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            },

            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).remove();
            },
            errorPlacement: function (error, element) {
                if (element.is(':checkbox') || element.is(':radio')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                }
                else error.insertAfter(element.parent());
            }
        });
    }

    function disablebuttonAssuran() {
        editFr = $('#tblUpdateAssurance');
        $('.editableInput', editFr).attr("disabled", "");
        $('#enablebuttonAssuran').show();
        $('#disablebuttonAssuran').hide();
    }

    function enablebuttonAssuran() {
        editFr = $('#tblUpdateAssurance');
        $('.editableInput', editFr).removeAttr("disabled");
        $('#disablebuttonAssuran').show();
        $('#enablebuttonAssuran').hide();
    }

    //function clearField2() {
    //    editFr = $('#tblAddAssurance');
    //    $('#txtGroupName', editFr).val("");
    //    $('#txtGroupDetail', editFr).val("");
    //}

</script>

<script type="text/javascript">
    jQuery(function ($) {
        var oTableAssuran = $('#tblAssuranDetail').dataTable({
            "aoColumns": [
               null, null, null, { "bSortable": false }
            ]
        });

        $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });

        $('textarea[class*=autosize]').autosize({ append: "\n" });
    })
</script>

@*all scrip của bảng Tiền tạm ứng----------------------------------------------------------------------*@

<script>
    //$(document).ready(function () {
    //    getStaffImpress();
    //});

    function getStaffImpress() {
        $.post("/Staff/ListAllStaff", {}, function (out) {
            var item = '<option value="0">Tất cả nhân viên</option>';
            $.each(out, function (index, group) {
                item += '<option value="' + group.StaffId + '">' + group.StaffName + '</option>';
            });
            //$('#selectStaffImpress').html(item);
            //$("#selectStaffImpress").trigger("chosen:updated")
            $('#txtEditName').html(item);
            $('#selectImpressView').html(item);


        });
    }

    function getAllImpress() {

        $.post("/Salary/getAllImpress", function (out) {
            document.getElementById("bodyContent").innerHTML = (out.html);
            {
                var item = '<tbody id="listStaffImpress">';
                allImpress = out.list;
                $.each(out.list, function (index, impress) {

                    item += '<tr>';
                    item += '<td><a onClick="getImpressById(' + index + ')" data-toggle="modal" href="#tblUpdateImpress">' + impress.Staff.StaffName + '</a></td>';
                    item += '<td>' + convertNETDateTime(impress.Date).toLocaleFormat('%d/%m/%Y') + '</td>';
                    item += '<td>' + convertToMoney(impress.Money) + '</td>';
                    item += '<td class="visible-md visible-lg hidden-sm hidden-xs action-buttons"><center><a onClick="getImpressById(' + index + '); enablebuttonImpress()" class="green" title="Chỉnh sửa" data-toggle="modal" href="#tblUpdateImpress" data-id="' + index
                        + '"><i class="icon-pencil bigger-130"></i></a><a onClick="deleteImpress(' + impress.ID + ')" class="red" title="Xóa" href="#" data-id="' + impress.ID + '"><i class="icon-trash bigger-130"></i></a></center></td>';
                    item += '</tr>';
                });
                item += '</tbody>';
                item = item.split("null").join("");
                $('#tblImpressDetail').append(item);
                $("#tblImpressDetail").dataTable().fnDestroy();
                $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
                    $(this).prev().focus();
                });
                var oTableImpress = $('#tblImpressDetail').dataTable({
                    "aoColumns": [
                        null, null, null, { "bSortable": false }
                    ]
                });
                getStaffImpress();
                getMonthinYear();
                getYear();
                getStaffName();
                validateAddImpress('#addImpressValidateForm');
                $("#txtmoneyImpress").numeric({ decimal: false, negative: false });

                ;
            }
        })
        $('#breadcrumbsMenu').text('Tạm ứng');
    }

    function getImpressByStaffId() {

        $.post("/Salary/getImpressByStaffId", { staffId: $('#selectImpressView').val(), monthImpressId: $('#cboMonthImpress').val(), yearImpressId: $('#cboYearImpress').val() }, function (out) {
            $("#tblImpressDetail")[0].removeChild($("#listStaffImpress")[0]);
            {
                var item = '<tbody id="listStaffImpress">';
                allImpress = out.list;
                $.each(out.list, function (index, impress) {

                    item += '<tr>';
                    item += '<td><a onClick="getImpressById(' + index + ')" data-toggle="modal" href="#tblUpdateImpress">' + impress.Staff.StaffName + '</a></td>';
                    item += '<td>' + convertNETDateTime(impress.Date).toLocaleFormat('%d/%m/%Y') + '</td>';
                    item += '<td>' + convertToMoney(impress.Money) + '</td>';
                    item += '<td class="visible-md visible-lg hidden-sm hidden-xs action-buttons"><center><a onClick="getImpressById(' + index + '); enablebuttonImpress()" class="green" title="Chỉnh sửa" data-toggle="modal" href="#tblUpdateImpress" data-id="' + index
                        + '"><i class="icon-pencil bigger-130"></i></a><a onClick="deleteImpress(' + impress.ID + ')" class="red" title="Xóa" href="#" data-id="' + impress.ID + '"><i class="icon-trash bigger-130"></i></a></center></td>';
                    item += '</tr>';
                });
                item += '</tbody>';
                item = item.split("null").join("");
                $('#tblImpressDetail').append(item);
                $("#tblImpressDetail").dataTable().fnDestroy();
                $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
                    $(this).prev().focus();
                });
                var oTableImpress = $('#tblImpressDetail').dataTable({
                    "aoColumns": [
                        null, null, null, { "bSortable": false }
                    ]
                });
                //getStaffImpress();
                validateAddImpress('#addImpressValidateForm');
                $("#txtmoneyImpress").numeric({ decimal: false, negative: false });

                ;
            }
        })
        $('#breadcrumbsMenu').text('Tạm ứng');
    }


    function addNewIpress() {
        if ($('#addImpressValidateForm').valid()) {
            editFr = $('#tblAddImpress');
            var selectStaffImpress = $('#selectStaffImpress option:selected', editFr).val();
            var dateStaffImpress = $('#dateStaffImpress', editFr).val();
            //var txtmoneyImpress = $('#txtmoneyImpress', editFr).val();
            var txtmoneyImpress = $("#txtmoneyImpress").val().replace("VNĐ", "");
            txtmoneyImpress = txtmoneyImpress.split(".").join("");

            $.post("/Salary/AddImpress", {
                selectStaffImpress: selectStaffImpress, dateStaffImpress: dateStaffImpress, txtmoneyImpress: txtmoneyImpress

            }, function (result) {
                $('#invalidateMonthError').attr("style", "display: none");
                if (result == "Successful") {
                    getAllImpress();
                    $('.close').click();
                    $("body").attr("class", "");

                    notification("Thêm tạm ứng thành công!", "", 2000, "btn-primary center");
                } else if (result == 'Error') {
                    $('.close').click();
                    notification("Thêm tạm ứng thất bại!", "", 3000, "gritter-error center");
                }
                else if (result == "dateinValide") {
                    $('#invalidateMonthError').attr("style", "display: block");
                }
            })
                .error(function () {
                    $('.close').click();
                    notification("Thêm tạm ứng thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                });
        }
    }

    function getImpressById(index) {
        disablebuttonImpress();
        editFr = $('#tblUpdateImpress');
        $('#txtImpressId', editFr).val(allImpress[index].ID);
        $('#txtEditName', editFr).val(allImpress[index].Staff.StaffId);
        $("#txtEditName").trigger("chosen:updated");

        var bd = convertNETDateTime(allImpress[index].Date).toLocaleFormat('%d/%m/%Y');
        $('#txtEditDate', editFr).val(bd);
        //$('#txtEditMoney', editFr).val(allImpress[index].Money);
        var editmoney = convertToMoney(allImpress[index].Money);
        $('#txtEditMoney', editFr).val(editmoney);

        $('#txtEditDate', editFr).attr("readonly", "readonly");
        $('#txtEditDate', editFr).removeAttr("style");

        validateAddImpress('#updateImpressValidateForm');
        $("#txtEditMoney").numeric({ decimal: false, negative: false });

    }

    function updateImpress() {
        if ($('#updateImpressValidateForm').valid()) {
            editFr = $('#tblUpdateImpress');
            var txtImpressId = $('#txtImpressId', editFr).val();
            var impressName = $('#txtEditName', editFr).val();
            var impressDate = $('#txtEditDate', editFr).val();
            //var impressMoney = $('#txtEditMoney', editFr).val();
            var impressMoney = $("#txtEditMoney").val().replace("VNĐ", "");
            impressMoney = impressMoney.split(".").join("");

            disablebuttonImpress(); // Chỉnh sửa lần 2
            $.post("/Salary/UpdateImpress", {
                txtImpressId: txtImpressId, txtEditName: impressName, txtEditDate: impressDate, txtEditMoney: impressMoney
            }, function (result) {
                $('#invalidateMonthErrorEdit').attr("style", "display: none");
                if (result == "Successful") {
                    $('.close').click();
                    getAllImpress();
                    $("body").attr("class", "");
                    notification("Cập nhật tạm ứng thành công!", "", 2000, "btn-primary center");
                } else if (result == 'Error') {
                    $('.close').click();
                    notification("Cập nhật tạm ứng thất bại!", "", 3000, "gritter-error center");
                }
                else if (result == "dateinValide") {
                    $('#invalidateMonthErrorEdit').attr("style", "display: block");
                }
            })
                        .error(function () {
                            $('.close').click();
                            notification("Cập nhật tạm ứng thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                        });
        }
    }

    function deleteImpress(id) {
        $(ace.click_event, function () {
            bootbox.confirm("Bạn thực sự muốn thực hiện thao tác này?", function (result) {
                if (result) {
                    $.post("/Salary/deleteImpress", { txtImpressId: id }
                        , function (result) {
                            if (result == "Successful") {
                                getAllImpress();
                                notification("Xóa tạm ứng của nhân viên thành công!", "", 2000, "btn-primary center");
                            } else if (result == 'Error') {
                                $('.close').click();
                                notification("Xóa tạm ứng của nhân viên thất bại!", "Tạm ứng này hiện đang được sử dụng!", 3000, "gritter-error center");
                            }
                        })
                        .error(function () {
                            notification("Xóa tạm ứng của nhân viên thất bại!", "Có lỗi xảy ra trong quá trình xóa.", 3000, "gritter-error center");
                        });
                }
            });
        });
    }

    function validateAddImpress(validateform) {
        $(validateform).validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            rules: {
                selectStaffImpress: {
                    required: true
                },
                dateStaffImpress: {
                    required: true
                }
                ,
                txtmoneyImpress: {
                    required: true,
                    maxlength: false
                }

            },
            messages: {
                selectStaffImpress: {
                    required: "Chọn một nhân viên!"
                },
                dateStaffImpress: {
                    required: "Hãy chọn ngày tạm ứng của nhân viên",

                },
                txtmoneyImpress: {
                    required: "Nhập số tiền tạm ứng!",

                }
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            },

            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).remove();
            },
            errorPlacement: function (error, element) {
                if (element.is(':checkbox') || element.is(':radio')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                }
                else error.insertAfter(element.parent());
            }
        });
    }

    function disablebuttonImpress() {
        editFr = $('#tblUpdateImpress');
        $('.editableInput', editFr).attr("disabled", "");
        $('.editableSelect').attr("disabled", "disabled");
        $('#enablebuttonImpress').show();
        $('#disablebuttonImpress').hide();
    }

    function enablebuttonImpress() {
        editFr = $('#tblUpdateImpress');
        $('.editableInput', editFr).removeAttr("disabled");
        $('.editableSelect').removeAttr("disabled");
        $('#disablebuttonImpress').show();
        $('#enablebuttonImpress').hide();
        $('#txtEditDate').attr("readonly", "readonly");
        $('#txtEditDate').attr("style", "background: none repeat scroll 0 0 #fff !important; width: 100%; cursor: pointer")

    }

    //function clearField2() {
    //    editFr = $('#tblAddAssurance');
    //    $('#txtGroupName', editFr).val("");
    //    $('#txtGroupDetail', editFr).val("");
    //}

</script>

<script type="text/javascript">
    jQuery(function ($) {
        var oTableImpress = $('#tblImpressDetail').dataTable({
            "aoColumns": [
                null, null, null, { "bSortable": false }
            ]
        });

        $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });

        $('textarea[class*=autosize]').autosize({ append: "\n" });
    })
</script>
@*all scrip của bảng Tiền trợ cấp----------------------------------------------------------------------*@

<script>
    function getAllBenefit() {

        $.post("/Salary/getAllBenefit", function (out) {

            document.getElementById("bodyContent").innerHTML = (out.html);
            {

                var item = '<tbody>';
                allAssurance = out.list;
                $.each(out.list, function (index, benefit) {

                    item += '<tr>';
                    item += '<td><a onClick="getBenefitById(' + index + ')" data-toggle="modal" href="#tblUpdateBenefit">' + benefit.Name + '</a></td>';
                    item += '<td>' + convertToMoney(benefit.Rate) + '</td>';
                    if (benefit.Active == false) {
                        item += '<td><span class="label label-lg label-danger arrowed">Ngừng áp dụng</span></td>';
                    }
                    else if (benefit.Active == true) {
                        item += '<td><span class="label label-lg label-success arrowed">Đang áp dụng</span></td>';
                    }
                    item += '<td class="visible-md visible-lg hidden-sm hidden-xs action-buttons"><center><a onClick="getBenefitById(' + index + '); enablebuttonBenefit()" class="green" title="Chỉnh sửa" data-toggle="modal" href="#tblUpdateBenefit" data-id="' + index
     + '"><i class="icon-pencil bigger-130"></i></a><a onClick="deleteBenefit(' + benefit.BenefitID + ')" class="red" title="Xóa" href="#" data-id="' + benefit.BenefitID + '"><i class="icon-trash bigger-130"></i></a></center></td>';

                    item += '</tr>';
                });
                item += '</tbody>';
                item = item.split("null").join("");
                $('#tblBenefitDetail').append(item);
                $("#tblBenefitDetail").dataTable().fnDestroy();
                var oTableBenefit = $('#tblBenefitDetail').dataTable({
                    "aoColumns": [
                        null, null, null, { "bSortable": false }
                    ]
                });
                validateAddBenefit('#addBenefitValidateForm');
                $("#txtBenefitRate").numeric({ decimal: false, negative: false });

                ;
            }
        })
        $('#breadcrumbsMenu').text('Trợ cấp');
    }



    function addNewBenefit() {
        if ($('#addBenefitValidateForm').valid()) {
            editFr = $('#tblAddBenefit');
            var txtbenefitName = $('#txtBenefitName', editFr).val();
            var txtbenefitRate = $("#txtBenefitRate").val().replace("VNĐ", "");
            txtbenefitRate = txtbenefitRate.split(".").join("");
            $.post("/Salary/addNewBenefit", {
                benefitName: txtbenefitName, benefitRate: txtbenefitRate

            }, function (result) {
                $('#existStaffGroupError').attr("style", "display: none");
                if (result == "Successful") {
                    getAllBenefit();
                    $('.close').click();
                    $("body").attr("class", "");

                    notification("Tạo trợ cấp thành công!", "", 2000, "btn-primary center");
                } else if (result == 'Error') {
                    $('.close').click();
                    notification("Tạo trợ cấp thất bại!", "", 3000, "gritter-error center");
                }
                else if (result == "exist") {
                    $('#existBenefitError').attr("style", "display: block");
                }
            })
                .error(function () {
                    $('.close').click();
                    notification("Tạo trợ cấp thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                });
        }
    }

    function getBenefitById(index) {
        disablebuttonBenefit();
        editFr = $('#tblUpdateBenefit');
        $('#txBenefitId', editFr).val(allAssurance[index].BenefitID);
        $('#txtEditName', editFr).val(allAssurance[index].Name);

        var editmoney = convertToMoney(allAssurance[index].Rate);
        $('#txtEditRate', editFr).val(editmoney);
        validateAddBenefit('#updateBenefitValidateForm');
        $("#txtEditRate").numeric({ decimal: false, negative: false });

    }

    function updateBenefit() {
        if ($('#updateBenefitValidateForm').valid()) {
            editFr = $('#tblUpdateBenefit');
            var txbenefitId = $('#txBenefitId', editFr).val();
            var benefitName = $('#txtEditName', editFr).val();
            var benefitRate = $("#txtEditRate").val().replace("VNĐ", "");
            benefitRate = benefitRate.split(".").join("");

            disablebuttonBenefit(); // Chỉnh sửa lần 2
            $.post("/Salary/UpdateBenefit", {
                benefitId: txbenefitId, txtEditName: benefitName, txtEditRate: benefitRate
            }, function (result) {
                if (result == "Successful") {
                    $('.close').click();
                    getAllBenefit();
                    $("body").attr("class", "");
                    notification("Cập nhật trợ cấp thành công!", "", 2000, "btn-primary center");
                } else if (result == 'Error') {
                    $('.close').click();
                    notification("Cập nhật trợ cấp thất bại!", "", 3000, "gritter-error center");
                }
            })
                        .error(function () {
                            $('.close').click();
                            notification("Cập nhật trợ cấp thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                        });
        }
    }

    function deleteBenefit(id) {
        $(ace.click_event, function () {
            bootbox.confirm("Bạn có muốn thực hiện thao tác này?", function (result) {
                if (result) {
                    $.post("/Salary/DeleteBenefit", { benefitId: id }
                    , function (result) {
                        if (result == "inactive") {
                            $('.close').click();
                            getAllBenefit();

                            $("body").attr("class", "");
                            notification("Trợ cấp này đã ngừng áp dụng!", "", 3000, "btn-primary center");
                        } if (result == "active") {
                            $('.close').click();
                            getAllBenefit();
                            $("body").attr("class", "");
                            notification("Trợ cấp đã áp dụng lại!", "", 3000, "btn-primary center");
                        }
                        else if (result == "Error") {

                            notification("Chỉnh sửa trợ cấp thất bại!", "Trợ cấp này hiện đang được sử dụng", 5000, "gritter-error center");
                        }
                    }).error(function () {
                        notification("Chỉnh sửa trợ cấp thất bại!", "Có lỗi xảy ra trong quá trình xóa văn phòng.", 5000, "gritter-error center");
                    });
                    $("#closeBtn").click();
                }
            });
        });
    }

    function validateAddBenefit(validateform) {
        $(validateform).validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            rules: {
                txtBenefitName: {
                    required: true
                },
                txtBenefitRate: {
                    required: true, maxlength: false
                }

            },
            messages: {
                txtBenefitName: {
                    required: "Nhập tên trợ cấp!"
                },
                txtBenefitRate: {
                    required: "Nhập số tiền trợ cấp!",
                    //number: "Hãy nhập số chính xác"
                }
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            },

            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).remove();
            },
            errorPlacement: function (error, element) {
                if (element.is(':checkbox') || element.is(':radio')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                }
                else error.insertAfter(element.parent());
            }
        });
    }

    function disablebuttonBenefit() {
        editFr = $('#tblUpdateBenefit');
        $('.editableInput', editFr).attr("disabled", "");
        $('#enablebuttonBenefit').show();
        $('#disablebuttonBenefit').hide();
    }

    function enablebuttonBenefit() {
        editFr = $('#tblUpdateBenefit');
        $('.editableInput', editFr).removeAttr("disabled");
        $('#disablebuttonBenefit').show();
        $('#enablebuttonBenefit').hide();
    }

    //function clearField2() {
    //    editFr = $('#tblAddAssurance');
    //    $('#txtGroupName', editFr).val("");
    //    $('#txtGroupDetail', editFr).val("");
    //}

</script>

<script type="text/javascript">
    jQuery(function ($) {
        var oTableBenefit = $('#tblBenefitDetail').dataTable({
            "aoColumns": [
              null, null, null, { "bSortable": false }
            ]
        });

        $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });

        $('textarea[class*=autosize]').autosize({ append: "\n" });
    })
</script>
@*all scrip của Bảng TimeSheet----------------------------------------------------------------------*@
<script>
    function getStaffTimesheet() {
        $.post("/Staff/ListAllStaff", {}, function (out) {
            var item = '<option value="0">Tất cả nhân viên</option>';
            $.each(out, function (index, group) {
                item += '<option value="' + group.StaffId + '">' + group.StaffName + '</option>';
            });
            //$('#selectStaffTimesheet').html(item);
            //$("#selectStaffTimesheet").trigger("chosen:updated")
            $('#txtEditName').html(item);
            $('#selectTimeSheetView').html(item);
        });
    }

    function getAllTimesheet() {

        $.post("/Salary/GetTimesheet", function (out) {


            document.getElementById("bodyContent").innerHTML = (out.html);
            {

                var item = '<tbody id="listTimeSheetStaff">';
                allTimesheet = out.list;
                $.each(out.list, function (index, timesheet) {

                    item += '<tr>';
                    item += '<td><a onClick="getStaffTimesheetId(' + index + ')" data-toggle="modal" href="#tblUpdateTimesheet">' + timesheet.Staff.StaffName + '</a></td>';
                    item += '<td>' + convertNETDateTime(timesheet.Date).toLocaleFormat('%d/%m/%Y') + '</td>';
                    item += '<td>' + timesheet.Description + '</td>';
                    item += '<td>' + timesheet.Hours + '</td>';
                    if (timesheet.IsAllowed == false) {
                        item += '<td><span class="label label-lg label-danger arrowed">Không phép</span></td>';
                    }
                    else if (timesheet.IsAllowed == true) {
                        item += '<td><span class="label label-lg label-success arrowed">Có phép</span></td>';
                    }
                    item += '<td class="visible-md visible-lg hidden-sm hidden-xs action-buttons"><center><a onClick="getStaffTimesheetId(' + index + '); enablebuttonTimeSheet()" class="green" title="Chỉnh sửa" data-toggle="modal" href="#tblUpdateTimesheet" data-id="' + index
                        + '"><i class="icon-pencil bigger-130"></i></a><a onClick="deleteTimeSheet(' + timesheet.ID + ')" class="red" title="Xóa" href="#" data-id="' + timesheet.ID + '"><i class="icon-trash bigger-130"></i></a></center></td>';
                    item += '</tr>';


                });
                item += '</tbody>';
                item = item.split("null").join("");
                $('#tblTimeSheetDetail').append(item);
                $("#tblTimeSheetDetail").dataTable().fnDestroy();
                var oTabletimeSheet = $('#tblTimeSheetDetail').dataTable({
                    "aoColumns": [
                      null, null, null, null, null, { "bSortable": false }
                    ]
                });
                $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
                    $(this).prev().focus();
                });
                validateAddTimeSheet('#addTimeSheetValidateForm');
                $('#addAllow').prop("checked", true);
                getStaffTimesheet();
                getYear();
                getMonthinYear();
                getStaffName();
            }
        })
        $('#breadcrumbsMenu').text('Nhóm nhân viên');
    }

    function getTimeSheetByStaffId() {

        $.post("/Salary/GetTimeSheetByStaffId", { staffId: $('#selectTimeSheetView').val(), monthTimsheetId: $('#cboMonthTimesheet').val(), yearTimsheetId: $('#cboYearTimesheet').val() }, function (out) {

            $("#tblTimeSheetDetail")[0].removeChild($("#listTimeSheetStaff")[0]);
            {
                var item = '<tbody id="listTimeSheetStaff">';
                allTimesheet = out.list;
                $.each(out.list, function (index, timesheet) {

                    item += '<tr>';
                    item += '<td><a onClick="getStaffTimesheetId(' + index + ')" data-toggle="modal" href="#tblUpdateTimesheet">' + timesheet.Staff.StaffName + '</a></td>';
                    item += '<td>' + convertNETDateTime(timesheet.Date).toLocaleFormat('%d/%m/%Y') + '</td>';
                    item += '<td>' + timesheet.Description + '</td>';
                    item += '<td>' + timesheet.Hours + '</td>';
                    if (timesheet.IsAllowed == false) {
                        item += '<td><span class="label label-lg label-danger arrowed">Không phép</span></td>';
                    }
                    else if (timesheet.IsAllowed == true) {
                        item += '<td><span class="label label-lg label-success arrowed">Có phép</span></td>';
                    }
                    item += '<td class="visible-md visible-lg hidden-sm hidden-xs action-buttons"><center><a onClick="getStaffTimesheetId(' + index + '); enablebuttonTimeSheet()" class="green" title="Chỉnh sửa" data-toggle="modal" href="#tblUpdateTimesheet" data-id="' + index
                        + '"><i class="icon-pencil bigger-130"></i></a><a onClick="deleteTimeSheet(' + timesheet.ID + ')" class="red" title="Xóa" href="#" data-id="' + timesheet.ID + '"><i class="icon-trash bigger-130"></i></a></center></td>';
                    item += '</tr>';


                });
                item += '</tbody>';
                item = item.split("null").join("");
                $('#tblTimeSheetDetail').append(item);
                $("#tblTimeSheetDetail").dataTable().fnDestroy();
                var oTabletimeSheet = $('#tblTimeSheetDetail').dataTable({
                    "aoColumns": [
                      null, null, null, null, null, { "bSortable": false }
                    ]
                });
                $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
                    $(this).prev().focus();
                });
                validateAddTimeSheet('#addTimeSheetValidateForm');
                $('#addAllow').prop("checked", true);
                //getStaffTimesheet();
                ;
            }
        })
        $('#breadcrumbsMenu').text('Nhóm nhân viên');
    }

    function addnewTimeSheet() {
        if ($('#addTimeSheetValidateForm').valid()) {
            editFr = $('#tblAddTimesheet');
            var selectStaffTimesheet = $('#selectStaffTimesheet option:selected', editFr).val();
            var dateStaffTimesheet = $('#dateStaffTimesheet', editFr).val();
            var txtDetail = $('#txtDetail', editFr).val();
            var txttimeLeave = $('#txttimeLeave', editFr).val();
            if (document.getElementById('addAllow').checked) {
                var staffAllow = document.getElementById('addAllow').value;
            } else if (document.getElementById('addIsAllow').checked) {
                var staffAllow = document.getElementById('addIsAllow').value;
            }

            $.post("/Salary/AddStaffTimesheet", {
                selectStaffTimesheet: selectStaffTimesheet, dateStaffTimesheet: dateStaffTimesheet, txtDetail: txtDetail, txttimeLeave: txttimeLeave, staffAllow: staffAllow

            }, function (result) {
                $('#timsheetMonthError').attr("style", "display: none");
                $('#timsheetOverLoadError').attr("style", "display: none");
                $('#timsheetDayError').attr("style", "display: none");
                
                if (result == "Successful") {
                    getAllTimesheet();
                    $('.close').click();
                    $("body").attr("class", "");

                    notification("Thêm  nghỉ  phép thành công!", "", 2000, "btn-primary center");
                } else if (result == 'Error') {
                    $('.close').click();
                    notification("Thêm ngày nghỉ thất bại!", "", 3000, "gritter-error center");
                }

                else if (result == "overload") {
                    $('#timsheetOverLoadError').attr("style", "display: block");
                }
                else if (result == "dateinValide") {
                    $('#timsheetMonthError').attr("style", "display: block");
                }else if (result == "sang") {
                    $('#timsheetDayError').attr("style", "display: block");
                }
            })
                .error(function () {
                    $('.close').click();
                    notification("Tạo bảo hiểm thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                });
        }
    }


    function getStaffTimesheetId(index) {
        disablebuttonTimeSheet();
        editFr = $('#tblUpdateTimesheet');
        $('#txtTimeSheetId', editFr).val(allTimesheet[index].ID);
        $('#txtEditName', editFr).val(allTimesheet[index].Staff.StaffId);
        $("#txtEditName").trigger("chosen:updated");

        var bd = convertNETDateTime(allTimesheet[index].Date).toLocaleFormat('%d/%m/%Y');
        $('#txtEditDate', editFr).val(bd);
        $('#txtEdittimeLeave', editFr).val(allTimesheet[index].Hours);

        $('#txtEditDetail', editFr).val(allTimesheet[index].Description);

        if (allTimesheet[index].IsAllowed == true) {
            $('#allowed', editFr).prop("checked", true);
        } else if (allTimesheet[index].IsAllowed == false) {
            $('#isAllowed', editFr).prop("checked", true);
        } else {
            $('#allowed', editFr).prop("checked", false);
            $('#isAllowed', editFr).prop("checked", false);
        }
        $('#txtEditDate').attr("readonly", "readonly");
        $('#txtEditDate').removeAttr("style");

        validateAddImpress('#updateTimeSheetValidateForm');
    }


    function updateTimeSheet() {
        if ($('#updateTimeSheetValidateForm').valid()) {
            editFr = $('#tblUpdateTimesheet');
            var txtTimeSheetId = $('#txtTimeSheetId', editFr).val();
            var txtEditName = $('#txtEditName', editFr).val();
            var txtEditDate = $('#txtEditDate', editFr).val();
            var txtEditDetail = $('#txtEditDetail', editFr).val();
            var txtEdittimeLeave = $('#txtEdittimeLeave', editFr).val();

            if (document.getElementById('allowed').checked) {
                var editstaffAllow = document.getElementById('allowed').value;
            } else if (document.getElementById('isAllowed').checked) {
                var editstaffAllow = document.getElementById('isAllowed').value;
            }
            disablebuttonTimeSheet(); // CHỈNH sửa lần 2
            $.post("/Salary/UpdateTimeSheet", {
                txtTimeSheetId: txtTimeSheetId, txtEditName: txtEditName, txtEditDate: txtEditDate, txtEditDetail: txtEditDetail, txtEdittimeLeave: txtEdittimeLeave, editstaffAllow: editstaffAllow

            }, function (result) {
                $('#editTimsheetMonthError').attr("style", "display: none");
                $('#timsheetOverLoadError').attr("style", "display: none");
                $('#timsheetDayError').attr("style", "display: none");
                if (result == "Successful") {
                    $('.close').click();
                    getAllTimesheet();
                    $("body").attr("class", "");
                    notification("Cập nhật ngày nghỉ nhân viên thành công!", "", 2000, "btn-primary center");
                } else if (result == 'Error') {
                    $('.close').click();
                    notification("Cập nhật ngày nghỉ nhân viên thất bại!", "", 3000, "gritter-error center");
                } else if (result == "dateinValide") {
                    $('#editTimsheetMonthError').attr("style", "display: block");
                }
                else if (result == "overload") {
                    $('#edittimsheetOverLoadError').attr("style", "display: block");
                }
                else if (result == "sang") {
                    $('#edittimsheetDayError').attr("style", "display: block");
                }
            })
                        .error(function () {
                            $('.close').click();
                            notification("Cập nhật ngày nghỉ nhân viên thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                        });
        }
    }

    function deleteTimeSheet(id) {
        $(ace.click_event, function () {
            bootbox.confirm("Bạn thực sự muốn thực hiện thao tác này?", function (result) {
                if (result) {
                    $.post("/Salary/deleteTimeSheet", { txtTimeSheetId: id }
                        , function (result) {
                            if (result == "Successful") {
                                getAllTimesheet();
                                notification("Xóa lịch nghỉ nhân viên thành công!", "", 2000, "btn-primary center");
                            } else if (result == 'Error') {
                                $('.close').click();
                                notification("Xóa lịch nghỉ nhân viên thất bại!", "Nhóm nhân viên này hiện đang được sử dụng!", 3000, "gritter-error center");
                            }
                        })
                        .error(function () {
                            notification("Xóa lịch nghỉ nhân viên thất bại!", "Có lỗi xảy ra trong quá trình xóa nhóm nhân viên.", 3000, "gritter-error center");
                        });
                }
            });
        });
    }

    function validateAddTimeSheet(validateform) {
        $(validateform).validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            rules: {
                selectStaffTimesheet: {
                    required: true
                },
                dateStaffTimesheet: {
                    required: true
                },
                txttimeLeave: {
                    required: true,
                    number: true,
                    min: true

                }

            },
            messages: {
                selectStaffTimesheet: {
                    required: "Chọn tên nhân viên!"
                },
                dateStaffTimesheet: {
                    required: "Chọn ngày nghỉ của nhân viên!",
                }
                ,
                txttimeLeave: {
                    required: "Nhập vào số giờ nghỉ!",
                    number: "Hãy nhập số ngày nghỉ chính xác",
                    min: "Số giờ nghỉ không hợp lệ"
                }

            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            },

            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).remove();
            },
            errorPlacement: function (error, element) {
                if (element.is(':checkbox') || element.is(':radio')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                }
                else error.insertAfter(element.parent());
            }
        });
    }

    function disablebuttonTimeSheet() {
        editFr = $('#tblUpdateTimesheet');
        $('.ace', editFr).attr("disabled", "");
        $('.editableInput', editFr).attr("disabled", "");
        $('.editableSelect').attr("disabled", "disabled");
        $('#enablebuttonTimeSheet').show();
        $('#disablebuttonTimeSheet').hide();
    }

    function enablebuttonTimeSheet() {
        editFr = $('#tblUpdateTimesheet');
        $('.ace', editFr).removeAttr("disabled");
        $('.editableInput', editFr).removeAttr("disabled");
        $('.editableSelect').removeAttr("disabled");
        $('#disablebuttonTimeSheet').show();
        $('#enablebuttonTimeSheet').hide();
        $('#txtEditDate').attr("readonly", "readonly");
        $('#txtEditDate').attr("style", "background: none repeat scroll 0 0 #fff !important; width: 100%; cursor: pointer")

    }

    //function clearField2() {
    //    editFr = $('#tblAddGroup');
    //    $('#txtGroupName', editFr).val("");
    //    $('#txtGroupDetail', editFr).val("");
    //}

</script>

<script type="text/javascript">
    jQuery(function ($) {
        var oTabletimeSheet = $('#tblTimeSheetDetail').dataTable({
            "aoColumns": [
              null, null, null, null, null, { "bSortable": false }
            ]
        });

        $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });

        $('textarea[class*=autosize]').autosize({ append: "\n" });
    })
</script>
@*all scrip của bảng Tiền thưởng----------------------------------------------------------------------*@

<script>
    //$(document).ready(function () {
    //    getStaffImpress();
    //});

    function getStaffReward() {
        $.post("/Staff/ListAllStaff", {}, function (out) {
            //var item = '';
            var item = '<option value="0">Tất cả nhân viên</option>';
            $.each(out, function (index, group) {
                //item += 'tất cả';
                item += '<option value="' + group.StaffId + '">' + group.StaffName + '</option>';
            });
           //var  aaa= 'Sang'
            //$('#selectStaffReward').html(item);
            $('#selectRewardView').html(item);
            //$('#selectRewardView').val(aaa);
            //$("#selectStaffReward").trigger("chosen:updated")
            $('#txtEditName').html(item);
       
            //$('#selectStaffReward').val("");

        });
    }

    function getAllReward() {


        $.post("/Salary/getAllReward", function (out) {

            document.getElementById("bodyContent").innerHTML = (out.html);
            {

                var item = '<tbody id="listStaffReward">';
                allReward = out.list;
                $.each(out.list, function (index, reward) {

                    item += '<tr>';
                    item += '<td><a onClick="getRewardById(' + index + ')" data-toggle="modal" href="#tblUpdateReward">' + reward.Staff.StaffName + '</a></td>';
                    item += '<td>' + convertNETDateTime(reward.Date).toLocaleFormat('%d/%m/%Y') + '</td>';
                    item += '<td>' + convertToMoney(reward.Money) + '</td>';
                    item += '<td>' + reward.Description + '</td>';
                    item += '<td class="visible-md visible-lg hidden-sm hidden-xs action-buttons"><center><a onClick="getRewardById(' + index + '); enablebuttonReward()" class="green" title="Chỉnh sửa" data-toggle="modal" href="#tblUpdateReward" data-id="' + index
                        + '"><i class="icon-pencil bigger-130"></i></a><a onClick="deleteReward(' + reward.RewardID + ')" class="red" title="Xóa" href="#" data-id="' + reward.RewardID + '"><i class="icon-trash bigger-130"></i></a></center></td>';
                    item += '</tr>';
                });
                item += '</tbody>';
                item = item.split("null").join("");
                $('#tblRewardDetail').append(item);
                $("#tblRewardDetail").dataTable().fnDestroy();
                $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
                    $(this).prev().focus();
                });
                var oTableReward = $('#tblRewardDetail').dataTable({
                    "aoColumns": [
                     null, null, null, null, { "bSortable": false }
                    ]
                });
                getMonthinYear()
                getYear();
                getStaffReward();
                getStaffName();
                validateAddReward('#addRewardValidateForm');
                $("#txtmoneyReward").numeric({ decimal: false, negative: false });
                ;
            }
        })
        $('#breadcrumbsMenu').text('Tiền thưởng');
    }
    function getAllRewardByStaffId() {
        $.post("/Salary/getRewardbyStaffId", { staffId: $('#selectRewardView').val(), monthRewwardId: $('#cboMonthReward').val(), yearRewardId: $('#cboYearReward').val() }, function (out) {

            $("#tblRewardDetail")[0].removeChild($("#listStaffReward")[0]);
            {
                var item = '<tbody id="listStaffReward">';
                allReward = out.list;
                $.each(out.list, function (index, reward) {

                    item += '<tr>';
                    item += '<td><a onClick="getRewardById(' + index + ')" data-toggle="modal" href="#tblUpdateReward">' + reward.Staff.StaffName + '</a></td>';
                    item += '<td>' + convertNETDateTime(reward.Date).toLocaleFormat('%d/%m/%Y') + '</td>';
                    item += '<td>' + convertToMoney(reward.Money) + '</td>';
                    item += '<td>' + reward.Description + '</td>';
                    item += '<td class="visible-md visible-lg hidden-sm hidden-xs action-buttons"><center><a onClick="getRewardById(' + index + '); enablebuttonReward()" class="green" title="Chỉnh sửa" data-toggle="modal" href="#tblUpdateReward" data-id="' + index
                        + '"><i class="icon-pencil bigger-130"></i></a><a onClick="deleteReward(' + reward.RewardID + ')" class="red" title="Xóa" href="#" data-id="' + reward.RewardID + '"><i class="icon-trash bigger-130"></i></a></center></td>';
                    item += '</tr>';
                });
                item += '</tbody>';
                item = item.split("null").join("");
                $('#tblRewardDetail').append(item);
                $("#tblRewardDetail").dataTable().fnDestroy();
                $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
                    $(this).prev().focus();
                });
                var oTableReward = $('#tblRewardDetail').dataTable({
                    "aoColumns": [
                     null, null, null, null, { "bSortable": false }
                    ]
                });
                //getStaffReward();
                validateAddReward('#addRewardValidateForm');
                $("#txtmoneyReward").numeric({ decimal: false, negative: false });
                ;
            }
        })
        $('#breadcrumbsMenu').text('Tiền thưởng');
    }

    function addNewReward() {
        if ($('#addRewardValidateForm').valid()) {
            editFr = $('#tblAddReward');
            var selectStaffReward = $('#selectStaffReward option:selected', editFr).val();
            var dateStaffReward = $('#dateStaffReward', editFr).val();
            //var txtmoneyReward = $('#txtmoneyReward', editFr).val();

            var txtmoneyReward = $("#txtmoneyReward").val().replace("VNĐ", "");
            txtmoneyReward = txtmoneyReward.split(".").join("");

            var txtDescription = $('#txtDescription', editFr).val();
            $.post("/Salary/AddReward", {
                selectStaffReward: selectStaffReward, dateStaffReward: dateStaffReward, txtmoneyReward: txtmoneyReward, txtDescription: txtDescription

            }, function (result) {
                $('#rewardMonthError').attr("style", "display: none");
                if (result == "Successful") {
                    getAllReward();
                    $('.close').click();
                    $("body").attr("class", "");

                    notification("Thêm tiền thưởng thành công!", "", 2000, "btn-primary center");
                } else if (result == 'Error') {
                    $('.close').click();
                    notification("Thêm tiền thưởng thất bại!", "", 3000, "gritter-error center");
                }
                else if (result == "dateinValide") {
                    $('#rewardMonthError').attr("style", "display: block");
                }
            })
                .error(function () {
                    $('.close').click();
                    notification("Thêm tiền thưởng thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                });
        }
    }

    function getRewardById(index) {
        disablebuttonReward();
        editFr = $('#tblUpdateReward');
        $('#txtRewardId', editFr).val(allReward[index].RewardID);
        $('#txtEditName', editFr).val(allReward[index].Staff.StaffId);
        $("#txtEditName").trigger("chosen:updated");

        var bd = convertNETDateTime(allReward[index].Date).toLocaleFormat('%d/%m/%Y');
        $('#txtEditDate', editFr).val(bd);
        //$('#txtEditMoney', editFr).val(allReward[index].Money);

        var editmoney = convertToMoney(allReward[index].Money);
        $('#txtEditMoney', editFr).val(editmoney);

        $('#editDescription', editFr).val(allReward[index].Description);

        $('#txtEditDate', editFr).attr("readonly", "readonly");
        $('#txtEditDate', editFr).removeAttr("style");

        validateAddReward('#updateRewardValidateForm');
        $("#txtEditMoney").numeric({ decimal: false, negative: false });
      
    }

    function updateReward() {
        if ($('#updateRewardValidateForm').valid()) {
          
            editFr = $('#tblUpdateReward');
            var txtRewardId = $('#txtRewardId', editFr).val();
            var impressName = $('#txtEditName', editFr).val();
            var impressDate = $('#txtEditDate', editFr).val();
            //var impressMoney = $('#txtEditMoney', editFr).val();
            var impressMoney = $("#txtEditMoney").val().replace("VNĐ", "");
            impressMoney = impressMoney.split(".").join("");

            var impressDes = $('#editDescription', editFr).val();

            disablebuttonReward(); // Chỉnh sửa lần 2
            $.post("/Salary/UpdateReward", {
                txtRewardId: txtRewardId, txtEditName: impressName, txtEditDate: impressDate, txtEditMoney: impressMoney, editDescription: impressDes
            }, function (result) {
                $('#invalidateMonthErrorEdit').attr("style", "display: none");
                if (result == "Successful") {
                    $('.close').click();
                    getAllReward();
                    $("body").attr("class", "");
                    notification("Cập nhật tạm ứng thành công!", "", 2000, "btn-primary center");
                } else if (result == 'Error') {
                    $('.close').click();
                    notification("Cập nhật tạm ứng thất bại!", "", 3000, "gritter-error center");
                }
                else if (result == "dateinValide") {
                    $('#invalidateMonthErrorEdit').attr("style", "display: block");
                }
            })
                        .error(function () {
                            $('.close').click();
                            notification("Cập nhật tạm ứng thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                        });
        }
    }

    function deleteReward(id) {
        $(ace.click_event, function () {
            bootbox.confirm("Bạn thực sự muốn thực hiện thao tác này?", function (result) {
                if (result) {
                    $.post("/Salary/deleteReward", { txtRewardId: id }
                        , function (result) {
                            if (result == "Successful") {
                                getAllReward();
                                notification("Xóa tạm ứng của nhân viên thành công!", "", 2000, "btn-primary center");
                            } else if (result == 'Error') {
                                $('.close').click();
                                notification("Xóa tạm ứng của nhân viên thất bại!", "Tạm ứng này hiện đang được sử dụng!", 3000, "gritter-error center");
                            }
                        })
                        .error(function () {
                            notification("Xóa tạm ứng của nhân viên thất bại!", "Có lỗi xảy ra trong quá trình xóa!", 3000, "gritter-error center");
                        });
                }
            });
        });
    }

    function validateAddReward(validateform) {
        $(validateform).validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            rules: {
                selectStaffReward: {
                    required: true
                },
                dateStaffReward: {
                    required: true
                }
                ,
                txtmoneyReward: {
                    required: true,
                    maxlength: false
                }

            },
            messages: {
                selectStaffReward: {
                    required: "Chọn một nhân viên!"
                },
                dateStaffReward: {
                    required: "Hãy chọn ngày được thưởng của nhân viên!",

                },
                txtmoneyReward: {
                    required: "Nhập số tiền được thưởng!",
                }
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            },

            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).remove();
            },
            errorPlacement: function (error, element) {
                if (element.is(':checkbox') || element.is(':radio')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                }
                else error.insertAfter(element.parent());
            }
        });
    }

    function disablebuttonReward() {
        editFr = $('#tblUpdateReward');
        $('.editableInput', editFr).attr("disabled", "");
        $('.editableSelect').attr("disabled", "disabled");
        $('#enablebuttonReward').show();
        $('#disablebuttonReward').hide();
    }

    function enablebuttonReward() {
        editFr = $('#tblUpdateReward');
        $('.editableInput', editFr).removeAttr("disabled");
        $('.editableSelect').removeAttr("disabled");
        $('#disablebuttonReward').show();
        $('#enablebuttonReward').hide();
        $('#txtEditDate').attr("readonly", "readonly");
        $('#txtEditDate').attr("style", "background: none repeat scroll 0 0 #fff !important; width: 100%; cursor: pointer")

    }




    //function clearField2() {
    //    editFr = $('#tblAddAssurance');
    //    $('#txtGroupName', editFr).val("");
    //    $('#txtGroupDetail', editFr).val("");
    //}

</script>

<script type="text/javascript">
    jQuery(function ($) {
        var oTableReward = $('#tblRewardDetail').dataTable({
            "aoColumns": [
             null, null, null, null, { "bSortable": false }
            ]
        });

        $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });

        $('textarea[class*=autosize]').autosize({ append: "\n" });
    })
</script>