@{
    ViewBag.Title = "Hồ sơ tác nghiệp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/Content/css/jquery.gritter.css" />
<link rel="stylesheet" href="~/Content/css/chosen.css" />
<link rel="stylesheet" href="~/Content/css/datepicker.css" />
<link rel="stylesheet" href="~/Content/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/Content/css/ace.min.css" />
<link rel="stylesheet" href="~/Content/css/font-awesome.min.css" />

<link rel="stylesheet" href="~/Content/css/timeline/screen.css" />
<link rel="stylesheet" href="~/Content/css/daterangepicker-bs3.css" />
<link rel="stylesheet" href="~/Content/css/jquery.jscrollpane.css" />
<link rel="stylesheet" href="~/Content/css/jquery-ui-1.10.3.custom.min.css" />

<script src="~/Content/ckeditor/ckeditor.js" type="text/javascript"></script>
<script src="~/Content/ckfinder/ckfinder.js" type="text/javascript"></script>

<script src="~/Content/js/jquery-ui-1.10.3.custom.min.js" type="text/javascript"></script>
<script src="~/Content/js/date-time/moment.min.js" type="text/javascript"></script>
<script src="~/Content/js/timeliner.min.js" type="text/javascript"></script>
<script src="~/Content/js/bootbox.min.js" type="text/javascript"></script>
<script src="~/Content/js/jquery.easy-pie-chart.min.js" type="text/javascript"></script>

<script src="~/Content/js/jquery.dataTables.min.js" type="text/javascript"></script>
<script src="~/Content/js/jquery.dataTables.bootstrap.js" type="text/javascript"></script>
<script src="~/Content/js/date-time/bootstrap-datepicker.min.js" type="text/javascript"></script>
<script src="~/Content/js/date-time/daterangepicker.js" type="text/javascript"></script>

<script src="~/Content/js/jquery.numeric.js" type="text/javascript"></script>
<script src="~/Content/js/fuelux/fuelux.spinner.min.js" type="text/javascript"></script>
<script src="~/Content/js/jquery.autosize.min.js" type="text/javascript"></script>
<script src="~/Content/js/jquery.gritter.min.js" type="text/javascript"></script>
<script src="~/Content/js/chosen.jquery.min.js" type="text/javascript"></script>
<script src="~/Content/js/jquery.validate.min.js"></script>
<script src="~/Content/js/additional-methods.js"></script>

<script src="~/Content/js/jscrollPanel/jquery.jscrollpane.min.js"></script>
<script src="~/Content/js/jscrollPanel/jquery.mousewheel.js"></script>
<style type="text/css">
    #txtDisputeSubject { 
        overflow-y: scroll !important;
        height:70px !important;

    }
    #txtLimitationStatute { 
         overflow-y: scroll !important;
        height:70px !important;
    }
    #txtLegalEvent { 
         overflow-y: scroll !important;
        height:70px !important;
    }
    }

</style>
@section Sidebar
{
    <div class=" sidebar" id="sidebar">
        <script type="text/javascript">
            try { ace.settings.check('sidebar', 'fixed') } catch (e) { }
        </script>

        <ul class="nav nav-list">
            <li class="" id="liCaseDetail" onclick='getCaseDetail("@ViewBag.caseId")'>
                <a href="#" onclick="setLiActiveClass('#liCaseDetail')">
                    <i class="icon-edit"></i>
                    <span class="menu-text"> Chi tiết hồ sơ </span>
                </a>
            </li>

            <li class="" id="liCaseEvent" onclick='getCaseEvent("@ViewBag.caseId")'>
                <a href="#" onclick="setLiActiveClass('#liCaseEvent')">
                    <i class="icon-calendar"></i>
                    <span class="menu-text"> Sự kiện </span>
                </a>
            </li>

            <li class="" id="liCasePeople" onclick='getPeople("@ViewBag.caseId")'>
                <a href="#" onclick="setLiActiveClass('#liCasePeople')">
                    <i class="icon-group"></i>
                    <span class="menu-text"> Người liên quan </span>
                </a>
            </li>

            <li class="" id="liCaseFile" onclick="getFiles()">
                <a href="#" onclick="setLiActiveClass('#liCaseFile')">
                    <i class="icon-book"></i>
                    <span class="menu-text"> Tài liệu liên quan </span>
                </a>
            </li>

            <li class="" id="liCaseInvoice" onclick='getCost("@ViewBag.caseId")'>
                <a href="#" onclick="setLiActiveClass('#liCaseInvoice')">
                    <i class="icon-credit-card"></i>
                    <span class="menu-text"> Hóa đơn </span>
                </a>
            </li>
        </ul><!-- /.nav-list -->

        <div class="sidebar-collapse" id="sidebar-collapse">
            <i class="icon-double-angle-left" data-icon1="icon-double-angle-left" data-icon2="icon-double-angle-right"></i>
        </div>

        <script type="text/javascript">
            try { ace.settings.check('sidebar', 'collapsed') } catch (e) { }
        </script>
    </div>
}

@section Breadcrumbs{
    <div class="breadcrumbs" id="breadcrumbs">
        <script type="text/javascript">
            try { ace.settings.check('breadcrumbs', 'fixed') } catch (e) { }
        </script>

        <ul class="breadcrumb">
            <li>
                <i class="icon-home home-icon"></i>
                <a href="/Home/Index">Trang chủ</a> | Hồ sơ tác nghiệp
            </li>

            <li>
                <a href="/Case/ListCase">Danh sách hồ sơ</a>
            </li>

            <li>
                <span id="breadcrumbsCaseCode" style="font-weight: bold"></span>
            </li>
        </ul><!-- .breadcrumb -->


        <div style="position: absolute; right: 0; top:0;margin-right: 20px">
            <div id="searchBtn" style="position: absolute; right: 0; top:0">
                <button class="btn btn-sm btn-warning">
                    <i class="icon-arrow-left icon-on-right"></i>
                    <span class="bigger-110 no-text-shadow">Thư Viện</span>
                </button>
            </div>

            <div id="searchtvplContent" style="margin-top:5px">

                <div class=" widget-box transparent ">
                    <div class="widget-header">
                        <div class="widget-toolbar no-border" style="float:left;width:100%">
                            <ul id="tabSearchtvpl" class="nav nav-tabs" style="font-size: 15px;">
                                <p style="float: left; margin: 0px 10px 0px 25px; font-size: 18px; font-weight: bold; color: blue">Tra cứu : </p>
                                <li class="active" id="vbplLi" onclick='changeSearch(this)'>
                                    <a href="#" style="font-weight: bold;">VĂN BẢN PHÁP LUẬT</a>
                                </li>

                                <li id="cvLi" onclick='changeSearch(this)'>
                                    <a href="#">CÔNG VĂN</a>
                                </li>
                                <li id="tcvnLi" onclick='changeSearch(this)'>
                                    <a href="#">TIÊU CHUẨN VIỆT NAM</a>
                                </li>
                            </ul>
                        </div>
                    </div>

                    <div class="widget-body" style=" padding-left: 10%">
                        <p style="font-size: 9px; color: Gray; margin: 0;line-height: 20px">
                            Từ khoá: <strong>Số Hiệu, Tiêu đề</strong> hoặc <strong>Nội dung ngắn gọn</strong>
                            của Văn Bản...
                        </p>
                        <div class="input-group" style="width:70%;">
                            <input type="text" id="searchText" class="form-control" placeholder="Tìm kiếm văn bản pháp luật...">
                            <span class="input-group-btn">
                                <button type="button" class="btn btn-sm btn-info no-radius" id="searchDocBtn" onclick="searchKeyWord()">
                                    <i class="icon-search"></i>
                                    Tìm Kiếm
                                </button>
                            </span>
                            <div id="searchWait" style="margin-left: 20px; visibility: hidden"><i class="icon-spinner icon-spin orange bigger-200"></i></div>
                        </div>
                        <table cellspacing="2" cellpadding="2" border="0" style=" line-height: 20px; font-size: 12px; width:80% ">
                            <tbody>

                                <tr id="searchArea">
                                    <td width="100px"> <span class="info-blue">Tìm trong: </span></td>
                                    <td style="padding-right: 10px"> <input type="radio" checked="checked" id="RadioGroup1_0" value="0" name="RadioGroup">  Tất cả</td>
                                    <td style="padding-right: 10px"> <input type="radio" id="RadioGroup1_1" value="1" name="RadioGroup">  Tiêu đề văn bản</td>
                                    <td style="padding-right: 10px"> <input type="radio" id="RadioGroup1_2" value="2" name="RadioGroup">  Số hiệu văn bản</td>
                                </tr>
                                <tr id="searchArea">
                                    <td> <span class="info-blue">Ban hành từ: </span></td>
                                    <td colspan="4">

                                        <input class="form-control" type="text" id="id-date-range-picker" readonly="" style="font-size: 12px; height:25px;cursor: pointer; background: none repeat scroll 0 0 #fff !important" />
                                    </td>
                                    <td align="right" width="200px">
                                        <span id="hideSearchMethodBtn" style="cursor: pointer; color: Blue; font-weight: bold;" onclick="hideSearchMethod()">+ Thêm điều kiện</span>
                                    </td>

                                </tr>
                                <tr id="searchMath" class="hideSearch">
                                    <td> <span class="info-blue">Kết quả phải:</span>   </td>
                                    <td colspan="4">
                                        <input type="radio" checked="checked" id="RadioGroup1_True" value="True" name="RadioGroup1">   Có tất cả các từ trên
                                        <input type="radio" style="margin-left: 20px;" id="RadioGroup1_False" value="False" name="RadioGroup1"> Chính xác cụm từ trên
                                    </td>
                                </tr>

                                <tr style="" class="info-blue hideSearch" id="trStatus">
                                    <td class="vbpl-tcvn">  Loại Văn bản: </td>
                                    <td colspan="4" class="vbpl-tcvn">
                                        <select style="width: 80%; height: 25px; " class="dropdown-large" id="documentTypeDropDownListVbpl">
                                            <option value="0" selected="selected">Tất cả</option>
                                            <option value="1">Chỉ thị</option>
                                            <option value="31">Điều ước quốc tế</option>
                                            <option value="6">Hiến pháp</option>
                                            <option value="34">Lệnh</option>
                                            <option value="10">Luật</option>
                                            <option value="11">Nghị định</option>
                                            <option value="13">Nghị quyết</option>
                                            <option value="14">Pháp lệnh</option>
                                            <option value="17">Quyết định</option>
                                            <option value="18">Sắc lệnh</option>
                                            <option value="23">Thông tư</option>
                                            <option value="24">Thông tư liên tịch</option>
                                            <option value="40">Văn bản hợp nhất</option>
                                            <option value="33">Văn bản khác</option>
                                            <option value="32">Văn bản WTO</option>
                                        </select>
                                        <select style="width: 80%; height: 25px; display:none" class="dropdown-large" id="documentTypeDropDownListTcvn">
                                            <option value="39" selected="selected">Tất cả</option>
                                            <option value="35">Quy chuẩn</option>
                                            <option value="38">Tiêu chuẩn ngành</option>
                                            <option value="36">Tiêu chuẩn Việt Nam</option>
                                            <option value="37">Tiêu chuẩn XDVN</option>
                                        </select>

                                        <span id="bLocStatus" style="margin-left:10px">Tình trạng:</span>
                                    </td>

                                    <td colspan="4" class="vbpl-tcvn">
                                        <select style="width: 100%; height: 25px; " id="ddlStatus" name="ddlStatus">
                                            <option value="0" selected="selected">Tất cả</option>
                                            <option value="1">Còn hiệu lực</option>
                                            <option value="2">Hết hiệu lực</option>
                                            <option value="3">Không còn phù hợp</option>
                                            <option value="4">Không xác định</option>
                                        </select>
                                    </td>

                                </tr>

                                <tr style="" class="hideSearch">
                                    <td>
                                        <span class="info-blue">Sắp xếp theo:</span>
                                    </td>
                                    <td colspan="4">
                                        <select style="width: 80%; height: 25px; " class="dropdown-large" id="sortDropDownList" name="sortDropDownList">
                                            <option value="1">Văn bản chính xác sẽ nằm trên</option>
                                            <option value="2">Văn bản mới ban hành sẽ nằm trên</option>
                                            <option value="6">Văn bản mới ban hành sẽ nằm dưới</option>

                                        </select>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <div id="searchResult" style="width: 100%; height: 100%; line-height: 10px;">

                    </div>

                </div>
            </div>
        </div>

    </div>
}
<div id="reviewPopup" class="modal fade" tabindex="-1">
    <div class="modal-dialog" style="width:800px">
        <div class="modal-content">

            <div class="modal-header no-padding">
                <div class="table-header">
                    <button aria-hidden="true" data-dismiss="modal" class="close" type="button">
                        <span class="white">×</span>
                    </button>
                    Xem trước nội dung văn bản:
                </div>
            </div>
            <div style="min-height:100px">
                <div class="center">
                    <i id="reviewWait" class="icon-spinner icon-spin orange bigger-300" style="margin-top:20px"></i>
                </div>
                <div id="reviewContent">

                </div>
            </div>
            <div class="modal-footer no-margin-top">
                <button class="btn btn-default pull-left" type="button" data-dismiss="modal" id="reviewClose">
                    <i class="icon-remove"></i>
                    Đóng
                </button>

            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<div id="caseIdDiv" value="@ViewBag.caseId" style="display:none"></div>
<div id="staffRoleIdDiv" value="@Session["RoleId"].ToString()" style="display:none"></div>
<div id="IsAuthorize" value="@ViewBag.isAuthorize" style="display:none"></div>
<div id="StatusDiv" value="" style="display:none"></div>
<div id="OfficeStatusDiv" value="" style="display:none"></div>

<div id="CanEditLawyer" value="@ViewBag.CanEditLawyer" style="display:none"></div>
<div id="StaffIdDiv" value="@Session["StaffId"].ToString()" style="display:none"></div>
<div id="StaffNameDiv" value="@Session["StaffName"].ToString()" style="display:none"></div>


<div id="bodyChangePass">

</div>

<div class="col-sm-12 widget-container-span" style="display: none" id="peopleContent">
    <div class="widget-box transparent">
        <div class="widget-header">
             <div class="" id="">
                <ul class="breadcrumb">
                    <li style="color: #4C8FBD; font-weight: bold">Hồ sơ
                    </li>
                    <li>
                        <span id="tittlePeople" style="font-weight: bold"></span>
                    </li>
                    <li style="color: #4C8FBD; font-weight: bold">
                        Luật sư chính:
                         <span id="tittleMainPeople" style="font-weight: bold"></span>
                    </li>                   
                </ul>
            </div>
            <div class="widget-toolbar no-border">
                <ul class="nav nav-tabs" id="myTab2">
                    <li id="customerLi">
                        <a href="#" onclick="GetCustomerRelated(@ViewBag.caseId, false)">Khách hàng</a>
                    </li>
                     <li id="subjectLi">
                        <a href="#" onclick="GetSubjectRelated(@ViewBag.caseId, false)">Chủ thể</a>
                    </li>
                    <li id="lawyerLi" class="active">
                        <a href="#" onclick="GetLawyerRelated(@ViewBag.caseId, false)">Luật sư</a>
                    </li>                 

                   
                </ul>
            </div>
        </div>

        <div class="widget-body">
            <div class="widget-main padding-12 no-padding-left no-padding-right">
                <div class="padding-4" id="subPeopleContent">

                </div>
            </div>
        </div>
    </div>
</div>

<div id="bodyContent">

</div>

@* case info ========================================================================================*@

<script>
    $(document).ready(function () {
        document.body.setAttribute('spellcheck', false);
        setLiActiveClass('#liCaseDetail');
        getCaseDetail($("#caseIdDiv").attr("value"));
    });

    var offId;
    function getCaseDetail(caseId) {
        $('#peopleContent').hide();
        $('.date-picker').datepicker('remove');
        removeEditor();


        $.post("/Case/GetCaseDetail", { id: caseId }, function (out) {
            document.getElementById("bodyContent").innerHTML = (out.html);

            // Khởi tạo breadcrumbs
            $('#breadcrumbsCaseCode').text(out.result.CaseCode);

            // Khởi tạo case detail
            setDeactiveComponent();

            // Khởi tạo giá trị
            $('#txtCaseCode').val(out.result.CaseCode);
            $("#StatusDiv").attr("value", out.result.Status);
            $("#OfficeStatusDiv").attr("value", out.result.Office.Active);


            if (out.result.ReceiptDate != null) {
                var receiptDate = convertNETDateTime(out.result.ReceiptDate).toLocaleFormat('%d/%m/%Y');
                $('#datePickerReceiptDate').val(receiptDate);
            }

            $('#cboOffice').html('<option>' + out.result.Office.OfficeName + '</option>');
            offId = out.result.OfficeId;

            loadSelectedStatus(out.result.Status);
            $('#txtCaseContent').val(out.result.CaseContent);
            $('#txtDisputeSubject').val(out.result.DisputeSubject);
            $('#txtDisputeRelation').val(out.result.DisputeRelation);

            $('#txtLimitationStatute').val(out.result.LimitationStatute);
            $('#txtLegalEvent').val(out.result.LegalEvent);
            $('#txtErrorFactor').val(out.result.ErrorFactor);

            // Gọi JS cho component
            $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
                $(this).prev().focus();
            });

            $('textarea[class*=autosize]').autosize({ append: "\n" });

            $('[data-rel=tooltip]').tooltip();

            validateUpdateDetail('#updateDetailValidateForm');
            if ($("#liCaseDetail").attr("class") != "active") {
                $("#bodyContent").html("");
            }
        });
    }

    function updateCaseDetail() {
        if ($('#updateDetailValidateForm').valid()) {;
            var status = $('#cboStatus').val();
            if (status == "Đã thụ lý") {
                bootbox.confirm("Hồ sơ ở trạng thái đã thụ lý sẽ không thể chỉnh sửa. Bạn có chắc muốn lưu?", function (result) {
                    if (result) {
                        doUpdateCaseDetail();
                    }
                });
            } else doUpdateCaseDetail();
        }
    }
    function doUpdateCaseDetail() {
        var caseId = $("#caseIdDiv").attr("value");
        var receiptDate = $('#datePickerReceiptDate').val();
        var officeId = $("#cboOffice option:selected").val();
        var status = $('#cboStatus').val();
        var caseContent = $('#txtCaseContent').val();
        var disputeSubject = $('#txtDisputeSubject').val();
        var disputeRelation = $('#txtDisputeRelation').val();
        var limitationStatute = $('#txtLimitationStatute').val();
        var legalEvent = $('#txtLegalEvent').val();
        var errorFactor = $('#txtErrorFactor').val();


        $.post("/Case/UpdateCaseDetail", {
            caseId: caseId, receiptDate: receiptDate, officeId: officeId, status: status, caseContent: caseContent,
            disputeSubject: disputeSubject, disputeRelation: disputeRelation, limitationStatute: limitationStatute, legalEvent: legalEvent, errorFactor: errorFactor
        }, function (result) {
            if (result == "success") {
                getCaseDetail($("#caseIdDiv").attr("value"));
                notification("Cập nhật chi tiết hồ sơ thành công!", "", 2000, "btn-primary center");
            } else if (result == "error") {
                notification("Cập nhật thông tin hồ sơ thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
            } else if (result == "StaffNotInOffice") {
                notification("Cập nhật thông tin hồ sơ thất bại!", "Đang có luật sư phụ trách không thuộc văn phòng này, hãy kiểm tra lại!", 3000, "gritter-error center");
            }

        })
        .error(function () {
            notification("Cập nhật chi tiết hồ sơ thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
        });
    }

    function cancelUpdateCaseDetail() {
        setDeactiveComponent();
        getCaseDetail($("#caseIdDiv").attr("value"));
    }

    function loadSelectedOfficesWithAdmin() {
        $.post("/Case/GetAllOfficeJson", {}, function (out) {
            var item = '';
            $.each(out, function (index, off) {
                if (off.OfficeId == offId) {
                    item += '<option selected="selected" value="' + off.OfficeId + '">' + off.OfficeName + '</option>';
                }
                else {
                    item += '<option value="' + off.OfficeId + '">' + off.OfficeName + '</option>';
                }
            });
            $('#cboOffice').html(item);
        });
    }

    function loadSelectedOffices() {
        $.post("/Case/GetOfficesByStaffId", {}, function (out) {
            var item = '';
            $.each(out.Office_Staff, function (index, off) {
                if (off.Office.OfficeId == offId) {
                    item += '<option selected="selected" value="' + off.Office.OfficeId + '">' + off.Office.OfficeName + '</option>';
                }
                else {
                    item += '<option value="' + off.Office.OfficeId + '">' + off.Office.OfficeName + '</option>';
                }
            });
            $('#cboOffice').html(item);
        });
    }

    function loadSelectedStatus(status) {
        var item = '';
        if (status == 'Đang thụ lý') {
            item += '<option selected="selected">Đang thụ lý</option>';
            item += '<option>Đã thụ lý</option>';
        }
        else if (status == 'Đã thụ lý') {
            item += '<option>Đang thụ lý</option>';
            item += '<option selected="selected">Đã thụ lý</option>';
        }
        $('#cboStatus').html(item);
    }

    function setLiActiveClass(liId) {
        $('#liCaseDetail').attr("class", "");
        $('#liCaseEvent').attr("class", "");
        $('#liCasePeople').attr("class", "");
        $('#liCaseFile').attr("class", "");
        $('#liCaseInvoice').attr("class", "");
        $(liId).attr("class", "active");
    }

    function setDeactiveComponent() {
        $('#datePickerReceiptDate').attr("disabled", "disabled");
        $('#datePickerReceiptDate').attr("style", "cursor: not-allowed; background: none repeat scroll 0 0 #EEEEEE !important");
        $('#cboOffice').attr("disabled", "disabled");
        $('#cboStatus').attr("disabled", "disabled");
        $('#txtCaseContent').attr("disabled", "disabled");
        $('#txtDisputeSubject').attr("disabled", "disabled");
        $('#txtDisputeRelation').attr("disabled", "disabled");
        $('#txtLimitationStatute').attr("disabled", "disabled");
        $('#txtLegalEvent').attr("disabled", "disabled");
        $('#txtErrorFactor').attr("disabled", "disabled");

        $('#btnCancelUpdateCaseDetail').hide();
        $('#btnUpdateCaseDetail').hide();
    }

    function setActiveComponent() {
        var authorize = $("#IsAuthorize").attr("value");
        if (authorize == "true") {

            $('#datePickerReceiptDate').removeAttr("disabled");
            $('#cboOffice').removeAttr("disabled");

            // load office len cobOffice trong case detail
            var roleId = $("#staffRoleIdDiv").attr("value");
            if (roleId == "1") {
                loadSelectedOfficesWithAdmin();
            } else {
                loadSelectedOffices();
            }

            $('#cboStatus').removeAttr("disabled");
            $('#txtCaseContent').removeAttr("disabled");
            $('#txtDisputeSubject').removeAttr("disabled");
            $('#txtDisputeRelation').removeAttr("disabled");
            $('#txtLimitationStatute').removeAttr("disabled");
            $('#txtLegalEvent').removeAttr("disabled");
            $('#txtErrorFactor').removeAttr("disabled");

            $('#datePickerReceiptDate').attr("style", "cursor: pointer; background: none repeat scroll 0 0 #fff !important");

            $('#btnCancelUpdateCaseDetail').show();
            $('#btnUpdateCaseDetail').show();

        } else {
            if ($("#StatusDiv").attr("value") == "Đã thụ lý") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Hồ sơ đang trong trạng thái đã thụ lý.", 3000, "gritter-error center");
            } else if ($("#OfficeStatusDiv").attr("value")== "false") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Văn phòng đang tạm thời ngừng hoạt động.", 3000, "gritter-error center");

            }else notification("Bạn không có quyền sửa hồ sơ này!", "Liên hệ với quản lý hoặc luật sư trưởng.", 3000, "gritter-error center");
        }
    }

    function validateUpdateDetail(validateform) {
        $(validateform).validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            rules: {
                txtCaseContent: {
                    required: true
                }
            },
            messages: {
                txtCaseContent: {
                    required: "Nhập nội dung!"
                }
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            },

            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).remove();
            },
            errorPlacement: function (error, element) {
                if (element.is(':checkbox') || element.is(':radio')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                }
                else error.insertAfter(element.parent());
            }
        });
    }
</script>

@* case invoice ========================================================================================*@

<script>
    var invoiceJson = "";
    var paymentJson = "";
    var totalInvoice=0;
    var totalPayment=0;


    function maskMoney(input) {
        var num = $(input).val();
        if (num != "") {
            var str = ("" + num).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, function ($1) { return $1 + "." });
            $(input).val(str + " VNĐ");
        }
    }

    function convertToMoney(num) {
        if (""+num != "") {
            var str = ("" + num).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, function ($1) { return $1 + "." });
            str = str + " VNĐ";
            return str;
        } 
    }

    function removeMask(input) {
        var num = $(input).val();
        if (num != "") {
            var result = num.replace(" VNĐ", "");
            result = parseInt(result.split(".").join(""));
            return $(input).val(result);
        }
    }

    function getCost(oDid) {
        $('#peopleContent').hide();
        $('.date-picker').datepicker('remove');
        removeEditor();

        $.post("/Case/GetCost", { caseId: oDid }, function (out) {
            document.getElementById("bodyContent").innerHTML = (out.html);

            var today = getCurdate();

            document.getElementById("curDateSpan").innerHTML = today;
            $('#CaseCodeSpan').text(out.result.CaseCode);
            updateInvoice(out.result.UsedServices);
            updatePayment(out.result.Payments);
            $("#offNameLi").append(" <b>" + out.result.Office.OfficeName + "</b>");
            $("#offAddressLi").append(" <b>" + out.result.Office.Address + "</b>");
            $("#offEmailLi").append(" <b>" + out.result.Office.Email + "</b>");
            $("#offPhoneLi").append(" <b>" + out.result.Office.PhoneNumber + "</b>");
            if (out.result.Case_Customer.length > 0) {
                $("#cusNameLi").append(" <b>" + out.result.Case_Customer[0].Customer.CustomerName + "</b>");
                $("#cusAddressLi").append(" <b>" + out.result.Case_Customer[0].Customer.Address + "</b>");
                $("#cusEmailLi").append(" <b>" + out.result.Case_Customer[0].Customer.Email + "</b>");
                $("#cusPhoneLi").append(" <b>" + out.result.Case_Customer[0].Customer.Mobile + "</b>");
            }
            $("#selectService").chosen();
            $('[data-rel=tooltip]').tooltip();
            $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
                $(this).prev().focus();
            });

            $("#selectService").chosen().on('change', function () {
                $(this).closest('form').validate().element($(this));
            });
            $("#selectService_chosen").css("width", "100%");
            validateAddCost("#invoiceValidateForm");
            validateAddCost("#paymentValidateForm");
            $('textarea[class*=autosize]').autosize({ append: "\n" });
            $("#serviceCost").numeric({ decimal: false, negative: false });
            $("#paymentCost").numeric({ decimal: false, negative: false });
        });
    }

    function updateInvoice(input) {
        $('#txtInvoice').css("height", "");
        input = sortByKey(input, "RegisteredDate");
        invoiceJson = input;
        var itemInvoice = '<tbody id="invoiceTbody">';
        var sumInvoice = 0;
        totalInvoice = 0;
        $.each(input, function (index, od) {
            itemInvoice += '<tr>';

            itemInvoice += '<td class="center">' + Number(index + 1) + '</td>';
            itemInvoice += '<td>' + od.ServiceName + '</td>';
            itemInvoice += '<td>' + od.Description + '</td>';
            var date = convertNETDateTime(od.RegisteredDate).toLocaleFormat('%d/%m/%Y');

            itemInvoice += '<td>' + date + '</td>';
            itemInvoice += '<td style="text-align:right">' + convertToMoney(od.ServiceCost) + '</td>';
            itemInvoice += '<td style="display:none" class="invoiceTd center"><div class="action-buttons"> <a class="green" data-toggle="modal" href="#invoicePopup" onclick="editInvoicePopup(' + od.UsedServiceId + ')"><i style="cursor:pointer" class="icon-pencil bigger-140"></i></a>' +
                '<a class="green" onclick="deleteInvoice(' + od.UsedServiceId + ')"><i style="cursor:pointer" class="red icon-trash bigger-140"></i></a></div></td>';
            itemInvoice += '</tr>';
            sumInvoice = sumInvoice + od.ServiceCost;
            totalInvoice=sumInvoice;
        });
        itemInvoice += '</tbody>';
        $('#invoiceTbl').append(itemInvoice);
        $('#sumInvoiceSpan').text(convertToMoney(sumInvoice));
        if (totalInvoice > totalPayment) {
            $("#balanceSpan").text("Chưa Thanh Toán: ");
            $("#sumBalanceSpan").text(convertToMoney(totalInvoice - totalPayment));
        } else if (totalInvoice < totalPayment) {
            $("#balanceSpan").text("Số Dư:");
            $("#sumBalanceSpan").text(convertToMoney(totalInvoice - totalPayment));
        } else {
            $("#balanceSpan").text("Đã thanh toán đủ");
            $("#sumBalanceSpan").text("");
        }

    }

    function updatePayment(input) {
        $('#txtPayment').css("height", "");
        input = sortByKey(input, "PaymentTime");
        paymentJson = input;

        var itemPayment = '<tbody id="paymentTbody">';
        var sumPayment = 0;
        totalPayment = 0;
        $.each(input, function (index, od) {
            itemPayment += '<tr>';
            itemPayment += '<td>' + index + 1 + '</td>';
            itemPayment += '<td>' + od.Description + '</td>';
            var date = convertNETDateTime(od.PaymentTime).toLocaleFormat('%d/%m/%Y');
            itemPayment += '<td>' + date + '</td>';
            itemPayment += '<td style="text-align:right">' + convertToMoney(od.PaymentMoney) + '</td>';
            itemPayment += '<td style="display:none" class="paymentTd center"><div class="action-buttons"> <a class="green" data-toggle="modal" href="#paymentPopup" onclick="editPaymentPopup(' + od.PaymentId + ')"><i style="cursor:pointer" class="icon-pencil bigger-140"></i></a>' +
                '<a class="green" onclick="deletePayment(' + od.PaymentId + ')"><i style="cursor:pointer" class="red icon-trash bigger-140"></i></a></div></td>';

            itemPayment += '</tr>';
            sumPayment = sumPayment + od.PaymentMoney;
            totalPayment=sumPayment;

        });
        itemPayment += '</tbody>';
        $('#sumPaymentSpan').text(convertToMoney(sumPayment));
        $('#paymentTbl').append(itemPayment);
        if (totalInvoice > totalPayment) {
            $("#balanceSpan").text("Chưa Thanh Toán: ");
            $("#sumBalanceSpan").text(convertToMoney(totalInvoice - totalPayment));
        } else if (totalInvoice < totalPayment) {
            $("#balanceSpan").text("Số Dư:");
            $("#sumBalanceSpan").text(convertToMoney(totalPayment-totalInvoice));
        } else {
            $("#balanceSpan").text("Đã thanh toán đủ");
            $("#sumBalanceSpan").text("");
        }
    }

    function editableInvoice() {
        var authorize = $("#IsAuthorize").attr("value");
        if (authorize == "true") {
            $("#editInvoiceTh").show();
            $(".invoiceTd").show();
            $("#editInvoice").attr("onClick", "successEditInvoice()");
        } else {
            if ($("#StatusDiv").attr("value") == "Đã thụ lý") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Hồ sơ đang trong trạng thái đã thụ lý.", 3000, "gritter-error center");
            } else if ($("#OfficeStatusDiv").attr("value")== "false") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Văn phòng đang tạm thời ngừng hoạt động.", 3000, "gritter-error center");

            } else notification("Bạn không có quyền sửa hồ sơ này!", "Liên hệ với quản lý hoặc luật sư trưởng.", 3000, "gritter-error center");
        }
    }

    function successEditInvoice() {
        $("#editInvoiceTh").hide();
        $(".invoiceTd").hide();
        $("#editInvoice").attr("onClick", "editableInvoice()");
    }

    function editablePayment() {
        var authorize = $("#IsAuthorize").attr("value");
        if (authorize == "true") {
            $("#editPaymentTh").show();
            $(".paymentTd").show();
            $("#editPayment").attr("onClick", "successEditPayment()");
        } else {
            if ($("#StatusDiv").attr("value") == "Đã thụ lý") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Hồ sơ đang trong trạng thái đã thụ lý.", 3000, "gritter-error center");
            }else if ($("#OfficeStatusDiv").attr("value")== "false") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Văn phòng đang tạm thời ngừng hoạt động.", 3000, "gritter-error center");

            } else notification("Bạn không có quyền sửa hồ sơ này!", "Liên hệ với quản lý hoặc luật sư trưởng.", 3000, "gritter-error center");
        }
    }

    function successEditPayment() {
        $("#editPaymentTh").hide();
        $(".paymentTd").hide();
        $("#editPayment").attr("onClick", "editablePayment()");
    }

    function choseTypeService() {
        var selected = $("#selectTypeService").val();
        var serviceitem = '<option value=""></option>';
        $.each(allservice, function (indextype, sertype) {
            if (sertype.ServiceTypeId == selected) {
                $.each(sertype.Services, function (indexser, ser) {
                    serviceitem += '<option value=' + ser.ServiceId + '>' + ser.ServiceName + ' </option>';
                });
            }
        });
        $("#selectService").html(serviceitem);
        $("#selectService").trigger("chosen:updated");

    }

    var allservice = "";

    function addInvoiceToCus() {
        if ($('#invoiceValidateForm').valid()) {
            $("#invoicePopup").click();
            var result = $("#serviceCost").val().replace(" VNĐ", "");
            result = result.split(".").join("");
            $.post("/Case/AddInvoice", {
                serviceCost: result, caseId: $("#caseIdDiv").attr("value"), txtDescription: $("#txtInvoice").val(),
                serviceName: $("#selectService  option:selected").text(), datePickerService: $("#datePickerService").val()
            }, function (out) {
                if ("Successful" == out) {
                    $.post("/Case/UpdateCost", { update: "UsedServices", caseId: $("#caseIdDiv").attr("value") }, function (update) {
                        $("#invoiceTbl")[0].removeChild($("#invoiceTbody")[0]);
                        updateInvoice(update.UsedServices);
                        $(".invoiceTd").show();
                        notification("Thêm dịch vụ thành công !", "", 2000, "btn-primary center");
                        $("#serviceCost").val("");
                        txtDescription: $("#txtDescription").val("");
                        return false;
                    });
                }
                else notification("Thêm dịch vụ thất bại!", "Hãy kiểm tra lại kết nối database", 3000, "gritter-error center");
            });


        }
    }

    function addPaymentToCus() {
        if ($('#paymentValidateForm').valid()) {
            $("#paymentPopup").click();
            var result = $("#paymentCost").val().replace(" VNĐ", "");
            result = result.split(".").join("");
            $.post("/Case/AddPayment", {
                paymentCost: result, caseId: $("#caseIdDiv").attr("value"), txtDescription: $("#txtPayment").val(),
                datePickerPayment: $("#datePickerPayment").val()
            }, function (out) {
                if ("Successful" == out) {
                    $.post("/Case/UpdateCost", { update: "Payments", caseId: $("#caseIdDiv").attr("value") }, function (update) {
                        $("#paymentTbl")[0].removeChild($("#paymentTbody")[0]);
                        updatePayment(update.Payments);
                        $(".paymentTd").show();
                        notification("Thêm thanh toán thành công !", "", 2000, "btn-primary center");
                        $("#paymentCost").val("");
                        txtDescription: $("#txtPayment").val("");
                        return false;
                    });
                } else notification("Thêm thanh toán thất bại!", "Hãy kiểm tra lại kết nối database", 3000, "gritter-error center");
            });

        }
    }

    function deleteInvoice(element) {
        $(ace.click_event, function () {
            bootbox.confirm("Bạn thực sự muốn xóa dịch vụ này?", function (result) {
                if (result) {
                    $.post("/Case/DeleteInvoice", { invoiceId: element }, function (out) {
                        if (out == "Successful") {
                            $.post("/Case/UpdateCost", { update: "UsedServices", caseId: $("#caseIdDiv").attr("value") }, function (update) {
                                $("#invoiceTbl")[0].removeChild($("#invoiceTbody")[0]);
                                updateInvoice(update.UsedServices);
                                $(".invoiceTd").show();
                                notification("Xóa dịch vụ thành công !", "", 2000, "btn-primary center");
                                $("#serviceCost").val("");
                                txtDescription: $("#txtDescription").val("");
                                return false;
                            });
                        }
                        else notification("Xóa dịch vụ thất bại!", "Hãy kiểm tra lại kết nối database", 3000, "gritter-error center");
                    });
                }
            });
        });
    }

    function deletePayment(element) {
        $(ace.click_event, function () {
            bootbox.confirm("Bạn thực sự muốn xóa thanh toán này?", function (result) {
                if (result) {
                    $.post("/Case/DeletePayment", { paymentId: element }, function (out) {
                        if (out == "Successful") {
                            $.post("/Case/UpdateCost", { update: "Payments", caseId: $("#caseIdDiv").attr("value") }, function (update) {
                                $("#paymentTbl")[0].removeChild($("#paymentTbody")[0]);
                                updatePayment(update.Payments);
                                $(".paymentTd").show();
                                notification("Xóa thanh toán thành công !", "", 2000, "btn-primary center");
                                $("#paymentCost").val("");
                                txtDescription: $("#txtPayment").val("");
                                return false;
                            });
                        } else notification("Xóa thanh toán thất bại!", "Hãy kiểm tra lại kết nối database", 3000, "gritter-error center");
                    });
                }
            });
        });
    }

    function addPaymentPopup() {
        var today = getCurdate();
        $('#paymentHeader').html("Tạo Thanh Toán:");
        document.getElementById("datePickerPayment").value = today;
        $('#addPaymentBtn').attr("onClick", 'addPaymentToCus()');
    }

    function AddInvoicePopup() {
        $('#invoiceHeader').html("Thêm Dịch Vụ:");
        $('#addInvoiceBtn').html("Thêm Dịch Vụ");
        $("#serviceTypeDiv").show();
        $("#serviceDiv").show();
        $('#addInvoiceBtn').attr("onClick", 'addInvoiceToCus()');
        var today = getCurdate();
        document.getElementById("datePickerService").value = today;
        $.post("/Case/GetAllServices", {}, function (out) {
            allservice = out;
            var servicetypeitem = "";
            $.each(out, function (index, ser) {
                servicetypeitem += '<option value=' + ser.ServiceTypeId + '>' + ser.ServiceTypeName + ' </option>';
            });
            $("#selectTypeService").html(servicetypeitem);
            $("#selectTypeService").val("");
            $("#selectService").html('<option value=""></option>');
            $("#selectService").trigger("chosen:updated");
        });
    }

    function editInvoicePopup(id) {
        $('#invoiceHeader').html("Sửa Chi Phí:");
        $('#addInvoiceBtn').html("Sửa Chi Phí");
        $('#addInvoiceBtn').attr("onClick", 'editInvoice(' + id + ')');
        $("#serviceTypeDiv").hide();
        $("#serviceDiv").hide();
        $.each(invoiceJson, function (index, invoice) {
            if (invoice.UsedServiceId == id) {
                $("#serviceCost").val(convertToMoney(invoice.ServiceCost));
                $("#datePickerService").val(convertNETDateTime(invoice.RegisteredDate).toLocaleFormat('%d/%m/%Y'));
                $("#txtInvoice").val(invoice.Description);
            }
        });
    }

    function editPaymentPopup(id) {
        $('#paymentHeader').html("Sửa Thanh Toán:");
        $('#addPaymentBtn').html("Sửa Thanh Toán");
        $('#addPaymentBtn').attr("onClick", 'editPayment(' + id + ')');
        $.each(paymentJson, function (index, payment) {
            if (payment.PaymentId == id) {
                $("#paymentCost").val(convertToMoney(payment.PaymentMoney));
                $("#datePickerPayment").val(convertNETDateTime(payment.PaymentTime).toLocaleFormat('%d/%m/%Y'));
                $("#txtPayment").val(payment.Description);
            }
        });
    }

    function editPayment(id) {
        if ($('#paymentValidateForm').valid()) {
            var result = $("#paymentCost").val().replace(" VNĐ", "");
            result = result.split(".").join("");
            $("#paymentPopup").click();
            $.post("/Case/UpdatePayment", {
                paymentId: id, paymentCost: result,
                txtDescription: $("#txtPayment").val(), datePickerPayment: $("#datePickerPayment").val()
            }, function (out) {
                if ("Successful" == out) {
                    $.post("/Case/UpdateCost", { update: "Payments", caseId: $("#caseIdDiv").attr("value") }, function (update) {
                        $("#paymentTbl")[0].removeChild($("#paymentTbody")[0]);
                        updatePayment(update.Payments);
                        $(".paymentTd").show();
                        notification("Sửa thanh toán thành công !", "", 2000, "btn-primary center");
                        $("#paymentCost").val("");
                        txtDescription: $("#txtPayment").val("");
                        return false;
                    });
                } else notification("Sửa thanh toán thất bại!", "Hãy kiểm tra lại kết nối database", 3000, "gritter-error center");
            });

        }
    }

    function editInvoice(id) {
        if ($('#invoiceValidateForm').valid()) {
            var result = $("#serviceCost").val().replace(" VNĐ", "");
            result = result.split(".").join("");
            $("#invoicePopup").click();
            $.post("/Case/UpdateInvoice", {

                invoiceId: id, serviceCost: result,
                txtDescription: $("#txtInvoice").val(), datePickerService: $("#datePickerService").val()
            }, function (out) {
                if (out == "Successful") {
                    $.post("/Case/UpdateCost", { update: "UsedServices", caseId: $("#caseIdDiv").attr("value") }, function (update) {
                        $("#invoiceTbl")[0].removeChild($("#invoiceTbody")[0]);
                        updateInvoice(update.UsedServices);
                        $(".invoiceTd").show();
                        notification("Sửa dịch vụ thành công !", "", 2000, "btn-primary center");
                        $("#serviceCost").val("");
                        txtDescription: $("#txtDescription").val("");
                        return false;
                    });
                }
                else notification("Sửa dịch vụ thất bại!", "Hãy kiểm tra lại kết nối database", 3000, "gritter-error center");
            });

        }
    }

    function validateAddCost(validateform) {
        $(validateform).validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            rules: {
                selectService: {
                    required: true
                },
                serviceCost: {
                    required: true,
                    maxlength: false
                },
                selectTypeService: {
                    required: true
                },
                txtDescription: {
                    required: true
                },
                paymentCost: {
                    required: true,
                    maxlength: false
                },
            },
            messages: {
                txtDescription: {
                    required: "Nhập nội dung!"
                },
                serviceCost: {
                    required: "Nhập chi phí!",
                },
                paymentCost: {
                    required: "Nhập số tiền thanh toán!",
                },
                selectTypeService: {
                    required: "Chọn loại dịch vụ!"
                },
                selectService: {
                    required: "Chọn dịch vụ!"
                }
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            },

            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).remove();
            },
            errorPlacement: function (error, element) {
                if (element.is(':checkbox') || element.is(':radio')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                }
                else if (element.is('.chosen-select')) {
                    error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
                }
                else error.insertAfter(element.parent());
            }
        });
    }
</script>

@* case event ========================================================================================*@

<script>
    function showTabEvent(id) {
        if (id == "qdls") {
            $("#qdlsLi").find("a").css("font-weight", "bold");
            $("#sktnLi").find("a").css("font-weight", "");
            $("#qdlsLi").attr("class", "active");
            $("#sktnLi").attr("class", "");
            $("#tabQDLSDiv").show();
            $("#tabSKTNDiv").hide();
        } else {
            $("#sktnLi").find("a").css("font-weight", "bold");
            $("#qdlsLi").find("a").css("font-weight", "");
            $("#sktnLi").attr("class", "active");
            $("#qdlsLi").attr("class", "");
            $("#tabQDLSDiv").hide();
            $("#tabSKTNDiv").show();
        }
    }

    var editor = "";
    var dateChange = false;
    function createEditor(id) {
        editor = CKEDITOR.appendTo(id, {

        });
    }

    function removeEditor() {
        if (editor) {
            editor.destroy();
            editor = "";
        }
    }
    function formatDateEvent(date) {
        date = convertNETDateTime(date);
        var day = Number((date).toLocaleFormat('%d'));
        var month = Number((date).toLocaleFormat('%m'));
        var year = (date).toLocaleFormat('%Y');
        var hour = Number((date).toLocaleFormat('%H'));
        var min =  Number((date).toLocaleFormat('%M'));
        day = (day<10)? "0"+day:day;
        month = (month<10)? "0"+month:month;
        hour = (hour<10)? "0"+hour:hour;
        min = (min<10)? "0"+min:min;
        return day + "/" + month + "/" + year + " " + hour + ":" + min;
    }
    function convertStringDateToDiv(date) {
          date =  date.split(" đến ");
          date[0] = date[0].split(" ");
          date[1] = date[1].split(" ");
          return '<a style="font-size: 1em; text-decoration:none">'+'<div class="dateArea">'+date[0][0]+'</div>'+' <div class="timeArea">'+ date[0][1]+'</div>'+
              '<span style="font-size: 25px">➦</span>'+'<div class="dateArea">'+date[1][0]+'</div>'+' <div class="timeArea">'+ date[1][1]+'</div>'
              + '</a>';
    }
    function formatDateforcompare(date) {
        date = convertNETDateTime(date);
        var day = Number((date).toLocaleFormat('%d'));
        var month = Number((date).toLocaleFormat('%m'));
        var year = (date).toLocaleFormat('%Y');
        day = (day < 10) ? "0" + day : day;
        month = (month < 10) ? "0" + month : month;
        return year + month + day;
    }
    function formatDateforevent(date) {
        date = convertNETDateTime(date);
        var day = Number((date).toLocaleFormat('%d'));
        var month = Number((date).toLocaleFormat('%m'));
        var year = (date).toLocaleFormat('%Y');
        day = (day < 10) ? "0" + day : day;
        month = (month < 10) ? "0" + month : month;
        return day + "/" + month + "/" + year;
    }
    function getendday(array) {
        var a = 0;
        var i = 0;
        for (i; i < array.length; i++) {
            var curent = formatDateforcompare(array[i].EndTime);
            var newday = formatDateforcompare(array[a].EndTime);
            if (curent > newday) {
                a = i;
            }
        }
        return formatDateforevent(array[a].EndTime);
    }
    function getstartday(array) {
        var a = 0;
        var i = 0;
        for (i; i < array.length; i++) {
            var curent = formatDateforcompare(array[i].BeginTime);
            var newday = formatDateforcompare(array[a].BeginTime);
            if (curent < newday) {
                a = i;
            }
        }
        return formatDateforevent(array[a].BeginTime);
    }
    
    function getCaseEvent(id) {
        $('#peopleContent').hide();
        $('.date-picker').datepicker('remove');
        removeEditor();
        $.post("/Case/GetEvent", { caseId: id }, function (out) {
            var tittleEvent = out.result.CaseContent;
            var starday = getstartday(out.result.OperationalEvents);
            var endday = getendday(out.result.OperationalEvents);
            document.getElementById("bodyContent").innerHTML = (out.html);
            $('#tittleEvent').text(tittleEvent);
            $('#tittleday').text("Từ: " + starday + " đến: " + endday);
            getViewpoint(id);
            showTabEvent("sktn");
            var eventStr = "";
            $.each(out.result.OperationalEvents, function (index, event) {
                var staffName;
                $.each(out.creatorUsername, function (i, e) {
                    if (event.CreatorId == e.StaffId) {
                        staffName = e.Staff.StaffName;
                    }
                });
                eventStr += '<div  class="timelineMajor" id="caseEvent' + event.OperationalEventId + '" creatorId="' + event.CreatorId + '">';
                eventStr += '<h2 class="timelineMajorMarker"><span>' + event.Title + '</span><span style="display:none">' + formatDateEvent(event.BeginTime) + " đến " + formatDateEvent(event.EndTime) + '</span></h2>';
                
                eventStr += '<dl class="timelineMinor">';
                
                eventStr += '<dt class="dt-time"  id="' + index + 'dt"> ' + convertStringDateToDiv(formatDateEvent(event.BeginTime) + " đến " + formatDateEvent(event.EndTime)) + '</dt>';

                eventStr += '<dt>  <span>Luật sư phụ trách:</span> <span style="font-weight: bold">' +   staffName  + '</span></dt>';
                eventStr += '<div style="font-size: 14px;margin-left:70%;margin-bottom:10px"></div>';
                eventStr += '<dd style="display: none;" id="' + index + 'dtEX" class="timelineEvent">';
                eventStr += '<div id=content' + event.OperationalEventId + '>' + event.Description + '</div>';
                eventStr += '</dd></dl>';
                eventStr += '<div id="editor' + event.OperationalEventId + '"></div></div>';
            });

            dateChange = false;
            isEdit = false;
            $('#timelineEvent').append(eventStr);
            $.timeliner({
                startOpen: []
            });
            $.timeliner({
                timelineContainer: '#timelineEvent'
            });
            if ($('.daterangepicker').length > 1) {
                $($('.daterangepicker')[1]).remove();
            }

            $('#datePickerEvent').daterangepicker({
                separator: " đến ", timePicker: true, timePickerIncrement: 15, format: 'DD/MM/YYYY HH:mm', timePicker12Hour: false
               
            }).prev().on(ace.click_event, function () {
                $(this).next().focus();
         
            });
            $('#datePickerEvent').change(this, function () {
                dateChange = true;
            }).click(this,function() {
                var eventTime = $('#datePickerEvent').val().split(" đến ");
                if (eventTime != "") {
                    $('#datePickerEvent').data("daterangepicker").setStartDate(eventTime[0]);
                    $('#datePickerEvent').data("daterangepicker").setEndDate(eventTime[1]);
                } else {
                    $('#datePickerEvent').data("daterangepicker").setStartDate(getCurdate()+"00:00");
                    $('#datePickerEvent').data("daterangepicker").setEndDate(getCurdate()+"00:00");
                }
            });
            $('[data-rel=tooltip]').tooltip();
            var obj = $(".timelineMajor");
            obj = obj.sort(sortCaseEvent);
            $(obj).appendTo("#timelineEvent");
            $('<br class="clear">').appendTo("#timelineEvent");
        });
    }

    function editableEvent() {
        var authorize = $("#IsAuthorize").attr("value");
        var staffId = $("#StaffIdDiv").attr("value");
        if (authorize == "true") {
            $("#addEventBtn").show();
            $("#addCalendarEventBtn").show();
            $("#successBtn").show();
            $("#editEventi").attr("onClick", "successEditEvent()");
            $('.timelineMajor').each(function (index, element) {
                if (staffId == $(this).attr("creatorid")) {
                    $(createEditElement($('.timelineMajor')[index].id)).insertAfter($($(element).find(".dt-time")[0]));
                }
            });
        } else {
            if ($("#StatusDiv").attr("value") == "Đã thụ lý") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Hồ sơ đang trong trạng thái đã thụ lý.", 3000, "gritter-error center");
            } else if ($("#OfficeStatusDiv").attr("value")== "false") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Văn phòng đang tạm thời ngừng hoạt động.", 3000, "gritter-error center");

            }else notification("Bạn không có quyền sửa hồ sơ này!", "Liên hệ với quản lý hoặc luật sư trưởng.", 3000, "gritter-error center");
        }
    }

    function successEditEvent() {
        if (!isEdit) {
            $("#addEventBtn").hide();
            $("#addCalendarEventBtn").hide();
            $("#successBtn").hide();
            $("#titleEventInputDiv").hide();
            $("#editEventi").attr("onClick", "editableEvent()");
            $('.timelineMajor').each(function (index, domEle) {
                if ($($('.timelineMajor')[index]).find(".divEdit").size() != 0)
                    ($($('.timelineMajor')[index])).find(".divEdit").remove();
            });
        } else notification("Chỉnh sửa chưa hoàn thành!", "Hãy lưu hoặc đóng chỉnh sửa", "2000", "gritter-error center");
    }

    function deleteEvent(element) {
        bootbox.confirm("Bạn có chắc muốn xóa?", function (result) {
            if (result) {
                $.post("/Case/DeleteOEvent", { element: element }, function (out) {
                    if (out == "deleteEventSuccess") {
                        $("#caseEvent" + element).remove();
                        var obj = $(".timelineMajor");
                        obj = obj.sort(sortCaseEvent);
                        $(obj).appendTo("#timelineEvent");
                        $(".clear").remove();
                        $('<br class="clear">').appendTo("#timelineEvent");

                        notification("Xóa sự kiện thành công!", "", 2000, "btn-primary center");
                    } else {
                        notification("Xóa sự kiện thất bại!", "hãy kiểm tra lại kết nối database", 2000, "gritter-error center");
                    }
                });
            }
        });

    }
    // tao edit, delete

    function createEditElement(eventId) {
        var divEdit = document.createElement("div");
        divEdit.setAttribute("class", "divEdit  action-buttons");
        var a1 = document.createElement("a");
        a1.setAttribute("class", "green");
        a1.setAttribute("onClick", 'editEvent("' + eventId + '")');
        var i1 = document.createElement("i");
        i1.setAttribute("class", "icon-pencil bigger-200");
        var a2 = document.createElement("a");
        a2.setAttribute("class", "red");
        a2.setAttribute("onClick", 'deleteEvent(' + eventId.split("caseEvent").join("") + ')');
        var i2 = document.createElement("i");
        i2.setAttribute("class", "icon-trash bigger-200");

        $(a1).append(i1);
        $(a2).append(i2);
        $(divEdit).append(a1);
        $(divEdit).append(a2);
        return divEdit;
    }

    var isEdit = false;

    function editEvent(element) {
        $("#" + element).children().hide();
        isEdit = true;
        var caseEventId = $("#" + element).attr("id");
        $("#" + element).attr("style", "margin:10px");
        $("#titleEventInputDiv").prependTo("#" + element);
        $("#eventDatepickerDiv").prependTo("#" + element);

        $("#editDiv").appendTo("#" + element);
        var editdivId = "editor" + caseEventId.split("caseEvent").join("");

        createEditor(editdivId);
        $("#" + editdivId).show();
        $("#eventDatepickerDiv").show();
        $("#titleEventInputDiv").show();

        $("#editDiv").show();
        var title =  $($("#" + element).children(".timelineMajorMarker").children()[0]).html();
        $("#titleEventInput").val(title);

        var time = $($("#" + element).children(".timelineMajorMarker").children()[1]).html();
        var str = ($("#" + element).attr("id")).split("caseEvent").join("");
        str = $("#content" + str).html();
        for (var first in CKEDITOR.instances) {
            editor = CKEDITOR.instances[first];
            CKEDITOR.instances[first].setData(str);
            break;
        }
        $("#datePickerEvent").val(time);
        $("#saveBtn").text("Lưu chỉnh sửa");
        $("#saveBtn").attr("onClick", 'saveEditEvent("' + caseEventId + '")');
        $("#closeBtn").attr("onClick", 'closeEditEvent("' + caseEventId + '")');

        $("#successDiv").hide();
        $(".divEdit").hide();
    }

    function addEvent() {
        isEdit = false;
        $("#titleEventInputDiv").prependTo("#newEventDiv");
        $("#eventDatepickerDiv").prependTo("#newEventDiv");
        $("#newEventDiv").css("margin", "20px auto 20px 100px");
        $("#editDiv").appendTo("#newEventDiv");
        $("#titleEventInput").val("");
        $("#datePickerEvent").val("");
        createEditor("newEditorDiv");
        $("#newEditorDiv").show();
        $("#titleEventInputDiv").show();
        $("#eventDatepickerDiv").show();
        $("#editDiv").show();
        $("#saveBtn").attr("onClick", 'saveNewEvent()');
        $("#saveBtn").text("Tạo sự kiện");
        $("#closeBtn").attr("onClick", 'closeNewEvent()');
        $("#successDiv").hide();
        $(".divEdit").hide();
    }



    function addCalendarEvent() {
        $.ajax({
            url: '/Case/NewOEvent',
            method: 'POST',
            data: {
                date: $('#datePickerBegin').val(),
                str: $('#eventName').val(),
                caseId: $("#caseIdDiv").attr("value"),
                endTime: $('#datePickerEnd').val()
            },
            success: function (result) {
                if (result != 0) {
                    console.debug("success");
                } else {
                    console.debug("fail");
                }
            },
            error: function (errMsg) {
                //alert(errMsg.responseText);
                console.debug("error");
            }
        });
    }

    function closeNewEvent() {
        if (editor.checkDirty()) {
            bootbox.confirm("Nội dung đã thay đổi, bạn có đồng ý không lưu?", function (result) {
                if (result) {
                    doCloseEditEvent("newEventDiv");
                }
            });
        } else {
            doCloseEditEvent("newEventDiv");
        }
    }

    function closeEditEvent(element) {
        if (editor.checkDirty() || dateChange) {
            bootbox.confirm("Nội dung đã thay đổi, bạn có đồng ý không lưu?", function (result) {
                if (result) {
                    doCloseEditEvent(element);
                }
            });
        } else {
            doCloseEditEvent(element);
        }
    }

    function doCloseEditEvent(element) {
        dateChange = false;
        isEdit = false;
        removeEditor();
        $("#" + element).children().show();
        $("#" + element).css("margin", "");
        $("#eventDatepickerDiv").hide();
        $("#editDiv").hide();
        $("#titleEventInputDiv").hide();

        $("#successDiv").show();
        $(".divEdit").show();
    }

    function saveNewEvent() {
        var date = $("#datePickerEvent").val();
        var title = $("#titleEventInput").val().trim();
        if (date != "" && title != "") {
            var str = editor.getData();
            var bdate = date.split(" đến ")[0];
            var indexdt = $(".timelineMajor").length;
            var edate = date.split(" đến ")[1];
            var creator = $("#StaffIdDiv").attr("value");
            var content = String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
            var caseId = $("#caseIdDiv").attr("value");
            $.post("/Case/NewOEvent", { caseId: caseId, bdate: bdate, edate: edate, str: content, title: title }, function (out) {
                var eventStr = "";
                if (out != 0) {
                    doCloseEditEvent("newEventDiv");
                    eventStr += '<div  class="timelineMajor" id="caseEvent' + out + '" creatorId="' + creator + '">';
                    eventStr += '<h2 class="timelineMajorMarker"><span>' + title + '</span><span style="display:none">' + date + '</span></h2>';
                    eventStr += '<dl class="timelineMinor">';
                    eventStr += '<dt class="dt-time" id="' + indexdt + 'dt"> ' + convertStringDateToDiv(date) +'</dt>';
                    eventStr += '<dt>  <span>Luật sư phụ trách:</span> <span style="font-weight: bold">' +    $("#StaffNameDiv").attr("value")  + '</span></dt>';
                    eventStr += '<div style="font-size: 14px;margin-left:70%;margin-bottom:10px"></div>';
                    eventStr += '<dd style="display: none;"  id="' + indexdt + 'dtEX" class="timelineEvent">';
                    eventStr += '<div id=content' + out + '>' + str + '</div>';
                    eventStr += '</dd></dl>';
                    eventStr += '<div id="editor' + out + '"></div></div>';

                    $(eventStr).appendTo("#timelineEvent");
                    var obj = $(".timelineMajor");
                    obj = obj.sort(sortCaseEvent);
                    $(obj).appendTo("#timelineEvent");
                    $(".clear").remove();
                    $('<br class="clear">').appendTo("#timelineEvent");
                    successEditEvent();
                    editableEvent();
                    notification("Thêm sự kiện thành công!", "", 2000, "btn-primary center");

                } else {
                    notification("Thêm sự kiện thất bại!", "hãy kiểm tra lại kết nối database", 2000, "gritter-error center");
                }
            }).error(function () {
                notification("Thêm sự kiện thất bại!", "hãy kiểm tra lại kết nối database", 2000, "gritter-error center");
            });
        } else notification("", "hãy chọn thời gian và nhập tiêu đề!", 2000, "gritter-error center");
        return false;
    }

    function saveEditEvent(element) {
        var str = editor.getData();
        var content = String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
        var caseEventId = element.replace("caseEvent", "");
        var caseId = $("#caseIdDiv").attr("value");
        var date = $("#datePickerEvent").val();
        var title = $("#titleEventInput").val().trim();

        if (title != "" && title != null && date != "") {
            var bdate = date.split(" đến ")[0];
            var edate = date.split(" đến ")[1];
            $.post("/Case/EditOEvent", { oEventId: caseEventId, content: content, caseId: caseId, bdate: bdate, edate: edate, title: title }, function (out) {
                if (out == "EditLegalEventSuccess") {
                    doCloseEditEvent(element);
                    $($("#" + element).children(".timelineMajorMarker").children()[1]).html(date);
                    $($("#" + element).children(".timelineMajorMarker").children()[0]).html(title);
                    $($("#" + element).find(".timelineMinor").find("dt")[0]).html(convertStringDateToDiv(date));


                    var obj = $(".timelineMajor");
                    obj = obj.sort(sortCaseEvent);
                    $(obj).appendTo("#timelineEvent");
                    $(".clear").remove();
                    $('<br class="clear">').appendTo("#timelineEvent");
                    $("#content" + caseEventId).html(str);
                    notification("Sửa sự kiện thành công!", "", 2000, "btn-primary center");
                } else {
                    notification("Sửa sự kiện thất bại!", "hãy kiểm tra lại kết nối database", 2000, "gritter-error center");
                }
            }).error(function () {
                notification("Thêm sự kiện thất bại!", "hãy kiểm tra lại kết nối database", 2000, "gritter-error center");
            });
        } else {
            notification("", "hãy nhập tiêu đề và chọn thời gian cho sự kiện", 2000, "gritter-error center");
            return false;
        }
        return false;
    }

    function sortCaseEvent(a, b) {
        var x = $($(a).children(".timelineMajorMarker").children()[1]).html();
        x = x.split(" đến ")[0];
        var x2 = $($(a).children(".timelineMajorMarker").children()[1]).html().split(" đến ")[1];
        var x2hour = (x2.split(" ")[1]).split(":");
        var x2date = (x2.split(" ")[0]).split("/");
        x2 = new Date(x2date[2], x2date[1] - 1, x2date[0], x2hour[0], x2hour[1]);
        
        var xhour = (x.split(" ")[1]).split(":");
        var xdate = (x.split(" ")[0]).split("/");
        x = new Date(xdate[2], xdate[1] - 1, xdate[0], xhour[0], xhour[1]);

        var y = $($(b).children(".timelineMajorMarker").children()[1]).html();
        y = y.split(" đến ")[0];
        var y2 =  $($(b).children(".timelineMajorMarker").children()[1]).html().split(" đến ")[1];
        var y2hour = (y2.split(" ")[1]).split(":");
        var y2date = (y2.split(" ")[0]).split("/");
        y2 = new Date(y2date[2], y2date[1] - 1, y2date[0], y2hour[0], y2hour[1]);

        var yhour = (y.split(" ")[1]).split(":");
        var ydate = (y.split(" ")[0]).split("/");
        y = new Date(ydate[2], ydate[1] - 1, ydate[0], yhour[0], yhour[1]);
        if (x < y) return 1;
        else if (x > y) return -1;
        else  {
            if (x2 < y2) return 1;
            else if (x2 > y2) return -1;
            else return 0;
        }
    }
</script>

@* lawyer viewpoint ========================================================================================*@

<script>
    function getViewpoint(caseId) {
        $.post("/Case/GetLawyerViewpoint", { id: caseId }, function (out) {
            $('#txtProtectiveGoal').val(out.ProtectiveGoal);
            $('#txtOpeningProcedure').val(out.OpeningProcedure);
            $('#txtInquiryProcedure').val(out.InquiryProcedure);
            $('#txtArgumentProcedure').val(out.ArgumentProcedure);

            $('textarea[class*=autosize]').autosize({ append: "\n" });
        });
    }

    function updateViewpoint() {
        var caseId = $("#caseIdDiv").attr("value");
        var protectiveGoal = $('#txtProtectiveGoal').val();
        var openingProcedure = $('#txtOpeningProcedure').val();
        var inquiryProcedure = $('#txtInquiryProcedure').val();
        var argumentProcedure = $('#txtArgumentProcedure').val();

        $.post("/Case/UpdateLawyerViewpoint", {
            caseId: caseId, protectiveGoal: protectiveGoal, openingProcedure: openingProcedure,
            inquiryProcedure: inquiryProcedure, argumentProcedure: argumentProcedure
        }, function (result) {
            if (result == "success") {
                getViewpoint($("#caseIdDiv").attr("value"));
                setDeactiveComponentViewpoint();
                notification("Cập nhật quan điểm luật sư thành công!", "", 2000, "btn-primary center");
            } else if (result == "error") {
                notification("Cập nhật quan điểm luật sư thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
            }
        })
            .error(function () {
                notification("Cập nhật quan điểm luật sư thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
            });
    }

    function cancelUpdateViewpoint() {
        setDeactiveComponentViewpoint();
        getViewpoint($("#caseIdDiv").attr("value"));
    }

    function setDeactiveComponentViewpoint() {
        $('#txtProtectiveGoal').attr("disabled", "disabled");
        $('#txtOpeningProcedure').attr("disabled", "disabled");
        $('#txtInquiryProcedure').attr("disabled", "disabled");
        $('#txtArgumentProcedure').attr("disabled", "disabled");

        $('#divButtonUpdateViewpoint').hide();
    }

    function setActiveComponentViewpoint() {
        var authorize = $("#IsAuthorize").attr("value");
        if (authorize == "true") {

            $('#txtProtectiveGoal').removeAttr("disabled");
            $('#txtOpeningProcedure').removeAttr("disabled");
            $('#txtInquiryProcedure').removeAttr("disabled");
            $('#txtArgumentProcedure').removeAttr("disabled");

            $('#divButtonUpdateViewpoint').show();

        } else {
            if ($("#StatusDiv").attr("value") == "Đã thụ lý") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Hồ sơ đang trong trạng thái đã thụ lý.", 3000, "gritter-error center");
            }else if ($("#OfficeStatusDiv").attr("value")== "false") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Văn phòng đang tạm thời ngừng hoạt động.", 3000, "gritter-error center");

            } else notification("Bạn không có quyền sửa hồ sơ này!", "Liên hệ với quản lý hoặc luật sư trưởng.", 3000, "gritter-error center");
        }
    }
</script>

@* case file ========================================================================================*@

<script>
    function getFiles() {
        $('#peopleContent').hide();

        var caseId = $("#caseIdDiv").attr("value");
        $.post("/Case/GetFile", { caseId: caseId }, function (out) {
            if (out == "success") {
                $('.date-picker').datepicker('remove');
                removeEditor();
                $("#bodyContent").html("");

                var finder = new CKFinder();
                finder.height = "500px";
                finder.replace('bodyContent');
            }
        });
    }
</script>

@* case lawyer related ========================================================================================*@

<script>
    var law;
    function loadSelectOffices() {
        $.post("/Case/GetAllOfficeJson", {}, function (out) {
            var item = "";
            $.each(out, function (index, off) {
                item += '<option value="' + off.OfficeId + '">' + off.OfficeName + '</option>';
            });

            $('#cboOffice2').html(item);
            $("#cboOffice2").trigger("chosen:updated");
        });
    }
    function GetLawyerRelated(caseId, tableUpdate) {

        $('.date-picker').datepicker('remove');
        $("#selectLawyerRelated").html('<option value=""></option>');
        $("#selectLawyerRelated").trigger("chosen:updated");
        $('#subPeopleContent').html('');
        $('#lawyerLi').attr('class', 'active');
        $('#customerLi').attr('class', '');
        $('#subjectLi').attr('class', '');
        $('#lawyerLi').attr('style', 'font-weight: bold');
        $('#customerLi').attr('style', '');
        $('#subjectLi').attr('style', '');

        $.post("/Case/GetLawyerRelated", { caseId: caseId }, function (out) {
            document.getElementById("subPeopleContent").innerHTML = (out.html);
            $('#tittlePeople').text(out.result.CaseContent);
            $('#tittleMainPeople').text(out.result.Case_Staff[0].Staff.StaffName);
            law = out.result.Case_Staff;
            var itemLawyerRelated = '<tbody>';
            $.each(out.result.Case_Staff, function (index, lr) {
                itemLawyerRelated += '<tr>';
                itemLawyerRelated += '<td align="center"><a onClick="loadLawyerDetail(' + index + ')" data-toggle="modal" href="#modalLawyerRelated"><span class="profile-picture"><img src="' + lr.Staff.Avatar + '" class="editable-click" style="height: 60px !important"></img></span></a></td>';
                itemLawyerRelated += '<td><a onClick="loadLawyerDetail(' + index + ')" data-toggle="modal" href="#modalLawyerRelated">' + lr.Staff.StaffName + '</a></td>';
                itemLawyerRelated += '<td>' + lr.Staff.Accounts[0].Username + '</td>';
                itemLawyerRelated += '<td>' + lr.Staff.Position + '</td>';
                
                //itemLawyerRelated += '<td>' + lr.Staff.StaffGroup.StaffGroupName + '</td>';
                if (lr.Staff.Active == false) {
                    itemLawyerRelated += '<td><span class="label label-lg label-danger arrowed">Ngưng hoạt động</span></td>';
                }
                else if (lr.Staff.Active == true) {
                    itemLawyerRelated += '<td><span class="label label-lg label-success arrowed">Đang hoạt động</span></td>';
                }
                itemLawyerRelated += '<td>' + lr.Staff.Mobile + '</td>';
                itemLawyerRelated += '<td>' + lr.Staff.Email + '</td>';
                itemLawyerRelated += '<td style="display: none" class="center showHideColumnLawyer action-buttons">' +
                    '<a onClick="removeLawyerRelated(' + lr.CaseStaffId + ')" class="red" title="Loại bỏ" href="#"><i class="icon-trash bigger-130"></i></a></td>';
                itemLawyerRelated += '</tr>';
            });
            itemLawyerRelated += '</tbody>';
            $('#tblLawyerRelated').append(itemLawyerRelated);

            $('[data-rel=tooltip]').tooltip();

            $("#selectLawyerRelated").chosen();
            $("#selectLawyerRelated_chosen").css("width", "100%");
            $('.chosen-single').css("height", "40px");
            $("#cboOffice2").chosen();
            $("#cboOffice2_chosen").css("width", "100%");
            loadSelectOffices();
            if (tableUpdate) {
                showEditLawyer();
            }
            $("#bodyContent").html("");
            
        });

    }

    function loadLawyerDetail(index) {
        resetLawyerDetail();


        var array = new Array();
        $.each(law[index].Staff.Office_Staff, function (i, office) {
            array.push(office.OfficeId);
        });
        $("#cboOffice2").val(array);
        $("#cboOffice2").trigger("chosen:updated");

        $('#imgStaffAvatar').attr("src", law[index].Staff.Avatar);
        $('#txtStaffName').val(law[index].Staff.StaffName);
        $('#txtStaffUsername').val(law[index].Staff.Accounts[0].Username);
        $('#txtStaffPosition').val(law[index].Staff.Position);
        $('#txtStaffSex').val(law[index].Staff.Sex);
        $('#txtStaffGroupName').val(law[index].Staff.StaffGroup.StaffGroupName);
        if (law[index].Staff.DateOfBirth != null) {
            var dateBirth = convertNETDateTime(law[index].Staff.DateOfBirth).toLocaleFormat('%d/%m/%Y');
            $('#txtStaffDateOfBirth').val(dateBirth);
        }
        $('#txtStaffPlaceOfBirth').val(law[index].Staff.PlaceOfBirth);
        $('#txtStaffMobile').val(law[index].Staff.Mobile);
        $('#txtStaffTelephone').val(law[index].Staff.Telephone);
        $('#txtStaffEmail').val(law[index].Staff.Email);
        $('#txtStaffAddress').val(law[index].Staff.Address);
        $('#txtStaffRole').val(law[index].Staff.Role.RoleName);
        if (law[index].Staff.RoleId==1) {
            $("#listOfficeDiv").hide();
        } else $("#listOfficeDiv").show();
        $('#txtStaffIdentityNumber').val(law[index].Staff.IdentityNumber);
        if (law[index].Staff.IdentityDate != null) {
            var dateIdentity = convertNETDateTime(law[index].Staff.IdentityDate).toLocaleFormat('%d/%m/%Y');
            $('#txtStaffIdentityDate').val(dateIdentity);
        }
        $('#txtStaffIdentityPlace').val(law[index].Staff.IdentityPlace);
        $('#txtStaffTaxCode').val(law[index].Staff.TaxCode);
        $('#txtStaffBankAccount').val(law[index].Staff.BankAccount);
        $('#txtStaffBankBranch').val(law[index].Staff.BankBranch);
    }

    function resetLawyerDetail() {
        $('#imgStaffAvatar').val('');
        $('#txtStaffName').val('');
        $('#txtStaffUsername').val('');
        $('#txtStaffPosition').val('');
        $('#txtStaffSex').val('');
        $('#txtStaffGroupName').val('');
        $('#txtStaffDateOfBirth').val('');
        $('#txtStaffPlaceOfBirth').val('');
        $('#txtStaffMobile').val('');
        $('#txtStaffTelephone').val('');
        $('#txtStaffEmail').val('');
        $('#txtStaffAddress').val('');
        $('#txtStaffRole').val('');
        $('#txtStaffIdentityNumber').val('');
        $('#txtStaffIdentityDate').val('');
        $('#txtStaffIdentityPlace').val('');
        $('#txtStaffTaxCode').val('');
        $('#txtStaffBankAccount').val('');
        $('#txtStaffBankBranch').val('');
    }

    function showEditLawyer() {
        var authorize = $("#IsAuthorize").attr("value");
        if (authorize == "true") {

            if ($("#CanEditLawyer").attr("value") == 'true') {
                $(".showHideColumnLawyer").show();
                $("#btnEditGroupLawyer").show();

                $.post("/Case/GetLawyerByOffice", { officeId: offId }, function (out) {
                    var staffItem = '<option value=""></option>';
                    $.each(out, function (index, staff) {
                        staffItem += '<option value=' + staff.StaffId + '>' + staff.StaffName + ' (' + staff.Accounts[0].Username + ')</option>';
                    });
                    $("#selectLawyerRelated").html(staffItem);
                    $("#selectLawyerRelated").trigger("chosen:updated");
                });
            }else notification("Bạn không có quyền thay đổi luật sư!", "Liên hệ với quản lý hoặc người tạo hồ sơ.", 3000, "gritter-error center");
        } else {
            if ($("#StatusDiv").attr("value") == "Đã thụ lý") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Hồ sơ đang trong trạng thái đã thụ lý.", 3000, "gritter-error center");
            } else if ($("#OfficeStatusDiv").attr("value")== "false") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Văn phòng đang tạm thời ngừng hoạt động.", 3000, "gritter-error center");
            } else notification("Bạn không có quyền sửa hồ sơ này!", "Liên hệ với quản lý hoặc luật sư trưởng.", 3000, "gritter-error center");
        }
    }

    function hideEditLawyer() {
        $(".showHideColumnLawyer").hide();
        $("#btnEditGroupLawyer").hide();
    }

    function removeLawyerRelated(caseStaffId) {
        $(ace.click_event, function () {

            bootbox.confirm("Bạn thực sự muốn loại bỏ luật sư này?", function (result) {
                if (result) {
                    $.post("/Case/RemoveLawyerRelated", { caseStaffId: caseStaffId }, function (out) {
                        if (out == "success") {
                            GetLawyerRelated($("#caseIdDiv").attr("value"), true);
                            notification("Loại bỏ luật sư thành công!", "", 2000, "btn-primary center");
                        } else if (out == "error") {
                            notification("Loại bỏ luật sư thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                        } else if (out == "creator") {
                            notification("Không thể loại bỏ luật sư khởi tạo!", "Liên hệ với quản lý hoặc người tạo hồ sơ.", 3000, "gritter-error center");
                        }
                    }).error(function () {
                        notification("Loại bỏ luật sư thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                    });
                }
            });

        });
    }

    function addLawyerRelated() {
        var caseId = $("#caseIdDiv").attr("value");
        var staffId = $("#selectLawyerRelated option:selected").val();
        if (staffId != "" && staffId != null) {

            $.post("/Case/AddLawyerRelated", { caseId: caseId, staffId: staffId }, function (result) {
                if (result == "success") {
                    GetLawyerRelated(caseId, true);
                    notification("Đã phân công luật sư!", "", 2000, "btn-primary center");
                } else if (result == "error") {
                    notification("Phân công luật sư thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                } else if (result == "exist") {
                    notification("Đã tồn tại luật sư!", "Vui lòng chọn luật sư khác.", 3000, "gritter-error center");
                    showEditLawyer();
                }
            })
                .error(function () {
                    notification("Phân công luật sư thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                });

        } else    notification("Hãy chọn 1 luật sư!", "", 3000, "gritter-error center");
    }
</script>

@* case customer related ========================================================================================*@

<script>
    var cus;
    function GetCustomerRelated(caseId, tableUpdate) {
        $('.date-picker').datepicker('remove');
        $("#selectCustomerRelated").html('<option value=""></option>');
        $("#selectCustomerRelated").trigger("chosen:updated");

        $('#subPeopleContent').html('');
        $('#lawyerLi').attr('class', '');
        $('#customerLi').attr('class', 'active');
        $('#customerLi').attr('style', 'font-weight: bold');
        $('#lawyerLi').attr('style', '');
        $('#subjectLi').attr('style', '');
        
        $('#subjectLi').attr('class', '');

        $.post("/Case/GetCustomerRelated", { caseId: caseId }, function (out) {
            document.getElementById("subPeopleContent").innerHTML = (out.html);
            cus = out.result.Case_Customer;

            var itemCustomerRelated = '<tbody>';
            $.each(out.result.Case_Customer, function (index, cr) {
                itemCustomerRelated += '<tr>';

                itemCustomerRelated += '<td><a onClick="loadCustomerDetail(' + index + ')" data-toggle="modal" href="#modalCustomerRelated">' + cr.Customer.CustomerName + '</a></td>';
                itemCustomerRelated += '<td>' + cr.Customer.Representative + '</td>';
                itemCustomerRelated += '<td>' + cr.Customer.CustomerGroup.CustomerGroupName + '</td>';
                itemCustomerRelated += '<td>' + cr.Customer.Address + '</td>';
                itemCustomerRelated += '<td>' + cr.Customer.Mobile + '</td>';
                itemCustomerRelated += '<td style="display: none" class="center showHideColumnCustomer action-buttons">' +
                    '<a onClick="removeCustomerRelated(' + cr.CaseCustomerId + ')" class="red" title="Loại bỏ" href="#"><i class="icon-trash bigger-130"></i></a></td>';

                itemCustomerRelated += '</tr>';
            });
            itemCustomerRelated += '</tbody>';
            $('#tblCustomerRelated').append(itemCustomerRelated);

            $('[data-rel=tooltip]').tooltip();
            $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
                $(this).prev().focus();
            });
            $("#selectCustomerRelated").chosen();
            $("#selectCustomerRelated_chosen").css("width", "100%");
            $('.chosen-single').css("height", "40px");

            if (tableUpdate) {
                prevSearch = "";
                showEditCustomer();
            }
            disablebutton();
            loadSelectCustomerGroup();
        });
    }

    function GetCustomersAutoSearch(searchTxt) {
        if (searchTxt == "") return $("#selectCustomerRelated_chosen").find(".chosen-results").html("");
        $.post("/Case/GetCustomersAutoSearch", { cusName: searchTxt }, function (out) {
            if (out == "") {
                if (prevSearch == "") $("#selectCustomerRelated_chosen").find(".chosen-results").html("");
                else $("#selectCustomerRelated_chosen").find(".chosen-results").html('<li class="no-results">Không tìm thấy: "<span>' + prevSearch + '</span>"</li>');
                return;
            }
            var searchText = ($("#selectCustomerRelated_chosen").find("input")).val();

            var customerItem = '<option value=""></option>';
            $.each(out, function (index, cus) {
                customerItem += '<option value=' + cus.CustomerId + '>' + cus.CustomerName + ' (' + cus.Address + ')</option>';
            });
            $("#selectCustomerRelated").html(customerItem);
            $("#selectCustomerRelated").trigger("chosen:updated");

            ($("#selectCustomerRelated_chosen").find("input")).val(searchText);
        });
    }

    function enablebutton() {
        //Cho phep user edit
        validateCustomer('#updateCustomerValidateForm');
        $('.editableInput').removeAttr("readonly");
        $('.editableSelect').removeAttr("disabled");
        $('.editableGender').removeAttr("disabled");
        $('#txtCustomerDateOfBirth').attr("style", "width: 100%;cursor: pointer; background: none repeat scroll 0 0 #fff !important");
        $('#txtCustomerIdentityDate').attr("style", "width: 100%;cursor: pointer; background: none repeat scroll 0 0 #fff !important");

        $('#savebutton').show();
        $('#enablebutton').hide();
    }

    function disablebutton() {
        //Khong cho user edit cac field
        $('.editableInput').attr("readonly", "");
        $('.editableSelect').attr("disabled", "disabled");
        $('.editableGender').attr("disabled", "disabled");
        $("#txtCustomerDateOfBirth").css("background", "");
        $("#txtCustomerIdentityDate").css("background", "");
        $('#enablebutton').show();
        $('#disablebutton').hide();
    }

    function updateCustomer() {
        if ($('#updateCustomerValidateForm').valid()) {
            var cusId = $('#detailCustomerId').val();
            var cusname = $('#txtCustomerName').val();
            var selectCustomerGroup = $('#txtCustomerGroup option:selected').val();
            var represent = $('#txtCustomerRepresentative').val();
            var sex = "";
            if (document.getElementById('genderMale').checked) {
                sex = document.getElementById('genderMale').value;
            } else if (document.getElementById('genderFemale').checked) {
                sex = document.getElementById('genderFemale').value;
            }
            var birthDay = $('#txtCustomerDateOfBirth').val();
            var identityNum = $('#txtCustomerIdentityNumber').val();
            var identityDate = $('#txtCustomerIdentityDate').val();
            var identityPlace = $('#txtCustomerIdentityPlace').val();
            var bankAccount = $('#txtCustomerBankAccount').val();
            var bankBranch = $('#txtCustomerBankAccount').val();
            var taxCode = $('#txtCustomerTaxCode').val();
            var address = $('#txtCustomerAddress').val();
            var email = $('#txtCustomerEmail').val();
            var mobile = $('#txtCustomerMobile').val();
            var telephone = $('#txtCustomerTelephone').val();
            $("#savebutton").hide();
            $.post("/Case/UpdateCustomer", {
                id: cusId, name: cusname, selectCustomerGroup: selectCustomerGroup, represent: represent, sex: sex,
                birthDay: birthDay, identityNum: identityNum, identityDate: identityDate, identityPlace: identityPlace,
                bankAccount: bankAccount, bankBranch: bankBranch, taxCode: taxCode, address: address, email: email,
                mobile: mobile, telephone: telephone
            }, function (result) {
                if (result == "success") {
                    notification("Chỉnh sửa khách hàng thành công!", "", 3000, "btn-primary center");
                    GetCustomerRelated($("#caseIdDiv").attr("value"), true);
                } else {
                    notification("Chỉnh sửa khách hàng thất bại!", "Hãy kiểm tra lại kết nối database.", 5000, "gritter-error center");
                }
            })
                .error(function () {
                    notification("Chỉnh sửa khách hàng thất bại!", "Có lỗi xảy ra trong quá trình chỉnh sửa khách hàng.", 5000, "gritter-error center");
                });
            $('.close').click();
            validator.resetForm();
        }
    }
    function loadCustomerDetail(index) {
        resetCustomerDetail();
        $("#savebutton").hide();

        validator.resetForm();
        $("#txtCustomerMobile").numeric({ decimal: false, negative: false });
        $("#txtCustomerTelephone").numeric({ decimal: false, negative: false });
        $('#detailCustomerId').val(cus[index].Customer.CustomerId);

        $('#txtCustomerName').val(cus[index].Customer.CustomerName);
        $('#txtCustomerGroup').val(cus[index].Customer.CustomerGroup.CustomerGroupId);
        $('#txtCustomerRepresentative').val(cus[index].Customer.Representative);
        $('#txtCustomerTaxCode').val(cus[index].Customer.TaxCode);
        if (cus[index].Customer.DateOfBirth != null) {
            var dateBirth = convertNETDateTime(cus[index].Customer.DateOfBirth).toLocaleFormat('%d/%m/%Y');
            $('#txtCustomerDateOfBirth').val(dateBirth);
        }
        $("#genderMale").prop("checked", false);
        $("#genderFemale").prop("checked", false);
        if (cus[index].Customer.Sex == 'Nam') {
            $("#genderMale").prop("checked", true);
        } else if (cus[index].Customer.Sex == 'Nữ') {
            $("#genderFemale").prop("checked", true);
        }
        $('#txtCustomerIdentityNumber').val(cus[index].Customer.IdentityNumber);
        if (cus[index].Customer.IdentityDate != null) {
            var identityDate = convertNETDateTime(cus[index].Customer.IdentityDate).toLocaleFormat('%d/%m/%Y');
            $('#txtCustomerIdentityDate').val(identityDate);
        }
        $('#txtCustomerIdentityPlace').val(cus[index].Customer.IdentityPlace);
        $('#txtCustomerBankAccount').val(cus[index].Customer.BankAccount);
        $('#txtCustomerBankBranch').val(cus[index].Customer.BankBranch);
        $('#txtCustomerMobile').val(cus[index].Customer.Mobile);
        $('#txtCustomerTelephone').val(cus[index].Customer.Telephone);
        $('#txtCustomerEmail').val(cus[index].Customer.Email);
        $('#txtCustomerAddress').val(cus[index].Customer.Address);
        disablebutton();
        $('#txtCustomerDateOfBirth').attr("style", "width: 100%;cursor: pointer; background: none repeat scroll 0 0 #f5f5f5 !important");
        $('#txtCustomerIdentityDate').attr("style", "width: 100%;cursor: pointer; background: none repeat scroll 0 0 #f5f5f5 !important");
    }

    function resetCustomerDetail() {
        $('#txtCustomerName').val('');
        $('#txtCustomerRepresentative').val('');
        $('#txtCustomerGroup').val('');
        $('#txtCustomerBankAccount').val('');
        $('#txtCustomerDateOfBirth').val('');
        $('#txtCustomerBankBranch').val('');
        $('#txtCustomerTaxCode').val('');
        $('#txtCustomerIdentityNumber').val('');
        $('#txtCustomerMobile').val('');
        $('#txtCustomerIdentityDate').val('');
        $('#txtCustomerTelephone').val('');
        $('#txtCustomerIdentityPlace').val('');
        $('#txtCustomerEmail').val('');
        $('#txtCustomerAddress').val('');
        $("#genderMale").prop("checked", false);
        $("#genderFemale").prop("checked", false);
        $('#txtCustomerGroup').val("");
    }

    var prevSearch = "";
    function showEditCustomer() {
        var authorize = $("#IsAuthorize").attr("value");
        if (authorize == "true") {
            $(".showHideColumnCustomer").show();
            $("#btnEditGroupCustomer").show();

            // kich hoat su kien tu dong search
            ($("#selectCustomerRelated_chosen").find("input")).keyup(function () {
                var searchTxt = ($("#selectCustomerRelated_chosen").find("input")).val();
                if (searchTxt == prevSearch) return;
                prevSearch = searchTxt;
                if ('<i class="icon-spinner icon-spin orange bigger-200"></i>' != $("#selectCustomerRelated_chosen").find(".chosen-results").html())
                    $("#selectCustomerRelated_chosen").find(".chosen-results").html('<i class="icon-spinner icon-spin orange bigger-200"></i>');
                delaySearch(function () {
                    GetCustomersAutoSearch(searchTxt);
                }, 500);
            });
        } else {
            if ($("#StatusDiv").attr("value") == "Đã thụ lý") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Hồ sơ đang trong trạng thái đã thụ lý.", 3000, "gritter-error center");
            } else if ($("#OfficeStatusDiv").attr("value")== "false") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Văn phòng đang tạm thời ngừng hoạt động.", 3000, "gritter-error center");

            }else notification("Bạn không có quyền sửa hồ sơ này!", "Liên hệ với quản lý hoặc luật sư trưởng.", 3000, "gritter-error center");
        }
    }

    function hideEditCustomer() {
        $(".showHideColumnCustomer").hide();
        $("#btnEditGroupCustomer").hide();
    }

    function removeCustomerRelated(id) {
        $(ace.click_event, function () {
            bootbox.confirm("Bạn thực sự muốn loại bỏ khách hàng này?", function (result) {
                if (result) {
                    $.post("/Case/RemoveCustomerRelated", { caseCustomerId: id }, function (out) {
                        if (out == "success") {
                            GetCustomerRelated($("#caseIdDiv").attr("value"), true);
                            notification("Loại bỏ khách hàng thành công!", "", 2000, "btn-primary center");
                        } else if (out == "error") {
                            notification("Loại bỏ khách hàng thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                        }
                    })
                        .error(function () {
                            notification("Loại bỏ khách hàng thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                        });
                }
            });
        });
    }

    function addCustomerRelated() {
        var caseId = $("#caseIdDiv").attr("value");
        var customerId = $("#selectCustomerRelated option:selected").val();
        if (customerId != "" && customerId != null) {

            $.post("/Case/AddCaseCustomer", { caseId: caseId, customerId: customerId }, function (result) {
                if (result == "success") {
                    GetCustomerRelated(caseId, true);

                    notification("Thêm khách hàng thành công!", "", 2000, "btn-primary center");
                } else if (result == "error") {
                    notification("Thêm khách hàng thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                } else if (result == "exist") {
                    notification("Đã tồn tại khách hàng!", "Vui lòng chọn khách hàng khác.", 3000, "gritter-error center");
                    showEditCustomer();

                }
            }).error(function () {
                notification("Thêm khách hàng thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
            });
        } else notification("Hãy chọn 1 khách hàng!", "", 3000, "gritter-error center");
    }
</script>

<script>
    function clearFieldCustomer() {
        $('#txtName').val("");
        $('#selectCustomerGroup').val("0");
        $('#txtRepresent').val("");
        $('#sexMale').removeAttr("checked");
        $('#sexFemale').removeAttr("checked");
        $('#datePickerBD').val("");
        $('#txtIdentityNum').val("");
        $('#datePickerNC').val("");
        $('#txtIdentityPlace').val("");
        $('#txtBankAccount').val("");
        $('#txtBankBranch').val("");
        $('#txtTaxCode').val("");
        $('#txtAddress').val("");
        $('#txtEmail').val("");
        $('#txtMobile').val("");
        $('#txtTelephone').val("");
    }

    function prepareAddCustomer() {
        validateCustomer('#addCustomerValidateForm');
        $("#txtMobile").numeric({ decimal: false, negative: false });
        $("#txtTelephone").numeric({ decimal: false, negative: false });
    }

    function addCustomer() {
        if ($('#addCustomerValidateForm').valid()) {
            var caseId = $("#caseIdDiv").attr("value");
            var cusname = $('#txtName').val();
            var selectCustomerGroup = $('#selectCustomerGroup').val();
            var represent = $('#txtRepresent').val();
            var sex = "";
            if (document.getElementById('sexMale').checked) {
                sex = document.getElementById('sexMale').value;
            } else if (document.getElementById('sexFemale').checked) {
                sex = document.getElementById('sexFemale').value;
            }
            var birthDay = $('#datePickerBD').val();
            var identityNum = $('#txtIdentityNum').val();
            var identityDate = $('#datePickerNC').val();
            var identityPlace = $('#txtIdentityPlace').val();
            var bankAccount = $('#txtBankAccount').val();
            var bankBranch = $('#txtBankBranch').val();
            var taxCode = $('#txtTaxCode').val();
            var address = $('#txtAddress').val();
            var email = $('#txtEmail').val();
            var mobile = $('#txtMobile').val();
            var telephone = $('#txtTelephone').val();
            $("#tblAddCustomer").find('.close').click();

            $.post("/Case/CreateCusAndAddToCase", {
                cusname: cusname, selectCustomerGroup: selectCustomerGroup, represent: represent, sex: sex,
                birthDay: birthDay, identityNum: identityNum, identityDate: identityDate, identityPlace: identityPlace,
                bankAccount: bankAccount, bankBranch: bankBranch, taxCode: taxCode, address: address, email: email,
                mobile: mobile, telephone: telephone, caseId: caseId
            }, function (result) {
                if (result == "success") {
                    clearFieldCustomer();
                    notification("Tạo khách hàng thành công!", "", 2000, "btn-primary center");
                    GetCustomerRelated($("#caseIdDiv").attr("value"), true);
                } else {
                    $('.close').click();
                    notification("Tạo khách hàng thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                }
            }).error(function () {
                $('.close').click();
                notification("Tạo khách hàng thất bại!", "Có lỗi xảy ra trong quá trình tạo khách hàng.", 3000, "gritter-error center");
            });
        }
    }

    function loadSelectCustomerGroup() {
        $.ajax({
            url: "/Case/GetAllCustomerGroupJson",
            type: 'POST',
            async: false,
            success: function (data) {
                if (data != "") {
                    var item = '';
                    $.each(data, function (index, customer) {
                        item += '<option value="' + customer.CustomerGroupId + '">' + customer.CustomerGroupName + '</option>';
                    });
                    $('#selectCustomerGroup').html(item);

                    $('#txtCustomerGroup').html(item);

                    $('#selectCustomerGroup').val('');
                }
            },
            error: function (errMsg) {
                alert(errMsg.responseText);
            }
        });
        validateCustomer('#addCustomerValidateForm');
    }

    var validator;
    function validateCustomer(validateform) {
        validator = $(validateform).validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            rules: {
                txtName: {
                    required: true
                },
                txtRepresent: {
                    required: true
                },
                selectCustomerGroup: {
                    required: true

                },
                txtAddress: {
                    required: true
                },
                txtEmail: {
                    email: true
                },
                txtMobile: {
                    required: true,
                }
            },
            messages: {
                txtName: {
                    required: "Nhập tên khách hàng!"
                },
                txtRepresent: {
                    required: "Nhập tên người đại diện!"
                },
                selectCustomerGroup: {
                    required: "Chọn nhóm khách hàng!"
                },
                txtAddress: {
                    required: "Nhập địa chỉ!"
                },
                txtEmail: {
                    email: "Email chưa đúng định dạng!"
                },
                txtMobile: {
                    required: "Nhập số điện thoại di động!"
                }
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            },

            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).remove();
            },
            errorPlacement: function (error, element) {
                if (element.is(':checkbox') || element.is(':radio')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                } else error.insertAfter(element.parent());
            }
        });
    }
</script>

@* case subject related ========================================================================================*@

<script>
    var sub;
    function GetSubjectRelated(caseId, tableUpdate) {
        $('.date-picker').datepicker('remove');
        $('#subPeopleContent').html('');
        $('#lawyerLi').attr('class', '');
        $('#customerLi').attr('class', '');
        $('#subjectLi').attr('class', 'active');
        $('#subjectLi').attr('style', 'font-weight: bold');
        $('#customerLi').attr('style', '');
        $('#lawyerLi').attr('style', '');
        $.post("/Case/GetSubjectRelated", { caseId: caseId }, function (out) {
            document.getElementById("subPeopleContent").innerHTML = (out.html);
            sub = out.result;

            var itemSubjectRelated = '<tbody>';
            $.each(out.result, function (index, sr) {
                itemSubjectRelated += '<tr>';

                itemSubjectRelated += '<td>' + sr.subjectName + '</td>';
                itemSubjectRelated += '<td>' + sr.litigationCapacity + '</td>';
                itemSubjectRelated += '<td>' + sr.address + '</td>';
                itemSubjectRelated += '<td>' + sr.phoneNumber + '</td>';
                itemSubjectRelated += '<td>' + sr.email + '</td>';
                itemSubjectRelated += '<td style="display: none" class="center showHideColumnSubject action-buttons">' +
                    '<a onClick="loadSubjectDetail(' + index + ')" data-toggle="modal" href="#modalSubjectRelated" class="green" title="Chỉnh sửa"><i class="icon-pencil bigger-130"></i></a>' +
                    '<a onClick="deleteSubject(' + sr.subjectId + ')" class="red" title="Xóa" href="#"><i class="icon-trash bigger-130"></i></a></td>';

                itemSubjectRelated += '</tr>';
            });
            itemSubjectRelated += '</tbody>';
            itemSubjectRelated = itemSubjectRelated.split("null").join("");
            $('#tblSubjectRelated').append(itemSubjectRelated);

            if (tableUpdate) {
                showEditSubject();
            }

            $('[data-rel=tooltip]').tooltip();

            // validate
            $("#txtSubjectPhoneNumber").numeric({ decimal: false, negative: false });
            validateSubjectForm('#subjectValidateForm');
        });
    }

    function loadSubjectDetail(index) {
        prepareForUpdateSubject();

        $('#txtSubjectId').val(sub[index].subjectId);
        $('#txtSubjectName').val(sub[index].subjectName);
        $('#txtLitigationCapacity').val(sub[index].litigationCapacity);
        $('#txtSubjectPhoneNumber').val(sub[index].phoneNumber);
        $('#txtSubjectEmail').val(sub[index].email);
        $('#txtSubjectAddress').val(sub[index].address);
    }

    function resetSubjectDetail() {
        $('#txtSubjectId').val('');
        $('#txtSubjectName').val('');
        $('#txtLitigationCapacity').val('');
        $('#txtSubjectPhoneNumber').val('');
        $('#txtSubjectEmail').val('');
        $('#txtSubjectAddress').val('');
    }

    function showEditSubject() {
        var authorize = $("#IsAuthorize").attr("value");
        if (authorize == "true") {
            $(".showHideColumnSubject").show();
            $("#btnEditGroupSubject").show();
        } else {
            if ($("#StatusDiv").attr("value") == "Đã thụ lý") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Hồ sơ đang trong trạng thái đã thụ lý.", 3000, "gritter-error center");
            } else if ($("#OfficeStatusDiv").attr("value")== "false") {
                notification("Bạn không có quyền sửa hồ sơ này!", "Văn phòng đang tạm thời ngừng hoạt động.", 3000, "gritter-error center");

            }else notification("Bạn không có quyền sửa hồ sơ này!", "Liên hệ với quản lý hoặc luật sư trưởng.", 3000, "gritter-error center");
        }

    }

    function hideEditSubject() {
        $(".showHideColumnSubject").hide();
        $("#btnEditGroupSubject").hide();
    }

    function prepareForAddSubject() {
        resetSubjectDetail();
        $('#btnAddSubject').show();
        $('#btnUpdateSubject').hide();
    }

    function prepareForUpdateSubject() {
        resetSubjectDetail();
        $('#btnAddSubject').hide();
        $('#btnUpdateSubject').show();
    }

    function deleteSubject(id) {
        $(ace.click_event, function () {
            bootbox.confirm("Bạn thực sự muốn xóa chủ thể này?", function (result) {
                if (result) {
                    $.post("/Case/DeleteSubject", { subjectId: id }, function (out) {
                        if (out == "success") {
                            GetSubjectRelated($("#caseIdDiv").attr("value"), true);
                            notification("Xóa chủ thể thành công!", "", 2000, "btn-primary center");
                        } else if (out == "error") {
                            notification("Xóa chủ thể thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                        }
                    })
                        .error(function () {
                            notification("Xóa chủ thể thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                        });
                }
            });
        });
    }

    function addSubject() {
        if ($('#subjectValidateForm').valid()) {
            var subjectName = $('#txtSubjectName').val();
            var litigationCapacity = $('#txtLitigationCapacity').val();
            var address = $('#txtSubjectAddress').val();
            var phoneNumber = $('#txtSubjectPhoneNumber').val();
            var email = $('#txtSubjectEmail').val();
            var caseId = $("#caseIdDiv").attr("value");

            $.post("/Case/AddSubject", {
                subjectName: subjectName, litigationCapacity: litigationCapacity, address: address,
                phoneNumber: phoneNumber, email: email, caseId: caseId
            }, function (result) {
                if (result == "success") {
                    GetSubjectRelated($("#caseIdDiv").attr("value"), true);
                    notification("Thêm chủ thể mới thành công!", "", 2000, "btn-primary center");
                } else if (result == "error") {
                    notification("Thêm chủ thể mới thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                }
            })
                .error(function () {
                    notification("Thêm chủ thể mới thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                });
            $('#btnCloseSubject').click();
            $(".modal-backdrop").remove();
        }
    }

    function updateSubject() {
        if ($('#subjectValidateForm').valid()) {
            var subjectId = $('#txtSubjectId').val();
            var subjectName = $('#txtSubjectName').val();
            var litigationCapacity = $('#txtLitigationCapacity').val();
            var address = $('#txtSubjectAddress').val();
            var phoneNumber = $('#txtSubjectPhoneNumber').val();
            var email = $('#txtSubjectEmail').val();
            $.post("/Case/UpdateSubject", {

                subjectId: subjectId, subjectName: subjectName, litigationCapacity: litigationCapacity, address: address,
                phoneNumber: phoneNumber, email: email
            }, function (result) {
                if (result == "success") {
                    GetSubjectRelated($("#caseIdDiv").attr("value"), true);
                    notification("Cập nhật chủ thể thành công!", "", 2000, "btn-primary center");
                } else if (result == "error") {
                    notification("Cập nhật chủ thể thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
                }
            }).error(function () {
                notification("Cập nhật chủ thể thất bại!", "Hãy kiểm tra lại kết nối database.", 3000, "gritter-error center");
            });
            $('#btnCloseSubject').click();
            $(".modal-backdrop").remove();
        }
    }

    function validateSubjectForm(validateform) {
        $(validateform).validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            rules: {
                txtSubjectName: {
                    required: true
                },
                txtLitigationCapacity: {
                    required: true
                },
                txtSubjectEmail: {
                    email: true
                }
            },
            messages: {
                txtSubjectName: {
                    required: "Nhập tên chủ thể!"
                },
                txtLitigationCapacity: {
                    required: "Nhập tư cách tố tụng!"
                },
                txtSubjectEmail: {
                    email: "Email chưa đúng định dạng!"
                }
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            },
            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).remove();
            },
            errorPlacement: function (error, element) {
                if (element.is(':checkbox') || element.is(':radio')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                }
                else error.insertAfter(element.parent());
            }
        });
    }
</script>

@* case people related ========================================================================================*@

<script>
    function getPeople(caseId) {
        removeEditor();
        $('#peopleContent').show();
        $('#subPeopleContent').html('');
        GetLawyerRelated(caseId, false);

    }
</script>

@* add-on ========================================================================================*@
<script>
    var xhr = "";
    $('#id-date-range-picker').daterangepicker(
        { showDropdowns: true, startDate: "1/1/1945", endDate: moment(), minDate: "1/1/1945", maxDate: moment(), format: "DD/MM/YYYY", separator: " đến " }).prev().on(ace.click_event, function () {
            $(this).next().focus();
        });
    $('#id-date-range-picker').val($('input[name=daterangepicker_start]').val() + ' đến ' + $('input[name=daterangepicker_end]').val());
    $(".cv-tcvn").hide();
    $(".hideSearch").hide();

    function hideSearchMethod() {
        if ($("#hideSearchMethodBtn").text() == "+ Thêm điều kiện") {
            $(".hideSearch").show();
            $("#hideSearchMethodBtn").text("- Bớt điều kiện");
        } else {
            $(".hideSearch").hide();
            $("#hideSearchMethodBtn").text("+ Thêm điều kiện");
        }
    }

    var isSearchLab = false;
    $('#searchBtn').click(function () {
        if (!isSearchLab) {
            $("#searchBtn").find("i").appendTo($("#searchBtn").find("button"));
            $("#searchBtn").find("span").text("Đóng");
            $($("#searchBtn").find("i")).attr("class", "icon-arrow-right icon-on-right");

            $("#searchtvplContent").show();

            $("#searchBtn").css("right", "900px");
            isSearchLab = true;
        } else {
            $("#searchBtn").find("span").text(" Thư Viện");
            $("#searchBtn").find("span").appendTo($("#searchBtn").find("button"));
            $($("#searchBtn").find("i")).attr("class", "icon-arrow-left icon-on-right");

            $("#searchtvplContent").hide();
            $("#searchBtn").css("right", "0");
            isSearchLab = false;
        }
    });
    var valType = "VB";

    function changeSearch(typeSearch) {
        $("#tabSearchtvpl").find("li").attr("class", "");
        $("#tabSearchtvpl").find("a").css({ 'font-weight': '' });
        $(typeSearch).attr("class", "active");
        $(typeSearch).find("a").css({ 'font-weight': 'bold' });
        if ($(typeSearch).is($("#vbplLi"))) {
            valType = "VB";
            $("#documentTypeDropDownListVbpl").show();
            $("#documentTypeDropDownListTcvn").hide();
            $(".vbpl-tcvn").show();
            $("#searchText").attr("placeholder", "Tìm kiếm văn bản pháp luật...");
        } else if ($(typeSearch).is($("#cvLi"))) {
            valType = "CV";
            $(".vbpl-tcvn").hide();
            $("#searchText").attr("placeholder", "Tìm kiếm công văn...");
        } else if ($(typeSearch).is($("#tcvnLi"))) {
            valType = "TC";
            $("#documentTypeDropDownListTcvn").show();
            $("#documentTypeDropDownListVbpl").hide();
            $(".vbpl-tcvn").show();
            $("#searchText").attr("placeholder", "Tìm kiếm tiêu chuẩn Việt Nam...");

        }
    }

    function searchKeyWord() {
        $("#searchWait").css("visibility","visible");
        var keyword = $('#searchText').val();
        keyword = encodeURIComponent(keyword);
        var area = $('#searchArea input:checked').val();
        var bdate = $("#id-date-range-picker").val().split(" đến ")[0];
        var edate = $("#id-date-range-picker").val().split(" đến ")[1];
        var signer = 0;
        var org = 0;

        var type = 3;
        if (valType == 'VB') {
            type = $('#documentTypeDropDownListVbpl').val();
        } else if (valType == 'TC') {
            type = $('#documentTypeDropDownListTcvn').val();
        }
        var status = 0;

        if (valType == 'VB' || valType == 'TC') {
            status = $('#ddlStatus').val();
        }
        var ngonngu = 1;
        var match = $('#searchMath input:checked').val();
        var sort = $('#sortDropDownList').val();
        if ($("#hideSearchMethodBtn").text() == "+ Thêm điều kiện") {
            type = 3;
            if (valType == 'VB') {
                type = 0;
            } else if (valType == 'TC') {
                type = 39;
            }
            status = 0;
            ngonngu = 1;
            match = "True";
            sort = 1;
        }
        $("#searchDocBtn").attr("disabled","disabled");
        if (xhr != "") xhr.abort();
        xhr = $.ajax({
            url: '/Proxy/SearchDoc',
            method: 'POST',
            async:true,
            data: {
                keyword: keyword,
                area: area,
                type: type,
                status: status,
                lan: ngonngu,
                org: org,
                signer: signer,
                match: match,
                sort: sort,
                bdate: bdate,
                edate: edate,
                scan: 0,
                fields: 0,
                page: 0
            },
            success: function (out) {
                showSearchResult(out);
                $("#searchDocBtn").removeAttr("disabled");
            }

        });
    }
    $("#searchDocBtn").removeAttr("disabled");
    function searchFieldAndPage(searchString) {
        $("#searchWait").css("visibility","visible");
        field = searchString.split("fields=")[1];
        field = field.split("&page=")[0];
        $("#searchDocBtn").attr("disabled","disabled");
        xhr = $.post("/Proxy/SearchFieldAndPage", { searchString: searchString }, function (out) {
            showSearchResult(out);
            $("#searchDocBtn").removeAttr("disabled");
        });

    }

    var field = 0;
    function showSearchResult(result) {
        $("#searchResult").html(result);
        $("#searchWait").css("visibility","hidden");
        $.each($("#tree").find("li"), function (element, index) {
            var link = $(this).find("a").attr("href").split('http://thuvienphapluat.vn/phap-luat/tim-van-ban.aspx?').join("");
            $($(this).find("a")[0]).attr("onClick", 'searchFieldAndPage("' + link + '")');
            $($(this).find("a")[1]).attr("onClick", 'searchFieldAndPage("' + link + '")');
            $($(this).find("a")[1]).removeAttr("href");
            $($(this).find("a")[0]).removeAttr("href");

            if ($($(this).find("a")[0]).attr("atr") == field) {
                $($(this).find("a")[0]).css({ fontWeight: 'bold', color: '#F79A18' });
            }

        });


        $.each($(".cmPager").find("a"), function (element, index) {
            var link = $(this).attr("href");
            $(this).attr("onClick", 'searchFieldAndPage("' + link + '")');
            $(this).removeAttr("href");
        });
        $("#block-info-advan").css("width", "100%");
        $($("#block-info-advan").children()[1]).css("width", "710px");
        $($("#block-info-advan").children()[1]).attr("class", "jscrollPanelDiv");
        $($("#block-info-advan").children()[1]).jScrollPane({ mouseWheelSpeed: 30 });
        $('.jspContainer').on('mousewheel', function (event) {
            $(".jspDrag").attr("class", "jspDrag jspActive");
            clearTimeout($.data(this, 'timer'));
            $.data(this, 'timer', setTimeout(function () {
                $(".jspDrag").attr("class", "jspDrag");
            }, 600));
        });
        $(".cmPager").appendTo(".jscrollPanelDiv");
        $(".jspPane").find(".nqTitle a").removeAttr("href onClick");
        $.each($(".links-bot"), function (element, index) {
            $(this).find("a").removeAttr("onmouseout onmouseover onClick style");
            var review = $($(this).find("a")[5]).attr("href");
            var downLink = $($(this).find("a")[4]).attr("href");
            $($(this).find("a")[0]).text("Xem trước nội dung").attr("onClick", 'reviewDoc("' + review + '")').attr("href","#reviewPopup").attr( "data-toggle","modal");
            $($(this).find("a")[1]).text("Tải về").attr("onClick", 'downloadFile("' + downLink + '")').removeAttr("href");

            var text = $(this).html().split("|")[0] + "|" + $(this).html().split("|")[1];
            $(this).html(text);
        });

    }

    function reviewDoc(review) {
        $("#reviewWait").show();
        $("#reviewContent").html("");
        $.post("/Proxy/ReviewDoc", { url: review }, function(out) {
            $("#reviewWait").hide();
            if (out.indexOf("đang cập nhật nội dung") != -1) {
                $("#reviewContent").html('<div style=" text-align: center;"><p>Văn bản này<span id="mainContentPlaceHolder_lbms"> đang cập nhật nội dung </span>nên để xem được văn bản, bạn phải tải về.</p></div>');
            } else if (out.indexOf("có nội dung tương đối lớn") != -1) {
                $("#reviewContent").html('<div style=" text-align: center;"><p>Văn bản này<span id="mainContentPlaceHolder_lbms"> có nội dung tương đối lớn </span>nên để xem được văn bản, bạn phải tải về.</p></div>');
            } else if (out=="LoginError") {
                $("#reviewContent").html('<div style=" text-align: center;"><br/><b>Không thể login vào thuvienphapluat.vn, hãy kiểm tra kết nối mạng!</b></div>');
            }
            else {
                $("#reviewContent").html('<div style="margin:10px">'+out);
                $($("#reviewContent").children()[1]).remove();
            }
        });
    }

    function downloadFile(url) {
        notification("Hệ thống đang tải văn bản", 'Xin hãy đợi 1 lát ... <i class="icon-spinner icon-spin orange bigger-220"></i>', 5000000, "btn-purple center");

        $.post("/Proxy/DownloadFile", { url: url,caseCode:  $("#breadcrumbsCaseCode").text() }, function(out) {
            if ($('.gritter-item-wrapper').length > 0) {
                $('#gritter-notice-wrapper')[0].removeChild($(".gritter-item-wrapper")[$('.gritter-item-wrapper').length-1]);
            }
            if (out == "Exist") {
                notification("Đã tồn tại văn bản này trong hồ sơ", 'Xin hãy kiểm tra lại', 3000, "btn-danger center");
            } else if (out == "Maintain") {
                notification("thuvienphapluat.vn đang bảo trì", 'Xin hãy thử lại sau', 3000, "btn-danger center");
            } else if (out == "LoginError") {
                notification("không thể đăng nhập vào thuvienphapluat.vn", 'Xin hãy kiểm tra kết nối mạng hoặc tài khoản đã hết hạn', 3000, "btn-danger center");
            } else if(out.indexOf("success,")!=-1) {
                out = out.split("success,")[1];
                notification("Tải văn bản "+out+" thành công!", "Hãy kiểm tra trong hồ sơ", 5000, "btn-primary center");
            } else if (out == "Error") {
                notification("không thể đăng nhập vào thuvienphapluat.vn", 'Xin hãy kiểm tra kết nối mạng', 3000, "btn-danger center");
            } else if (out == "DoneCase") {
                notification("Không thể tải tài liệu vì hồ sơ đã thụ lý xong", 'Xin hãy chuyển hồ sơ khác hoặc liên hệ với quản lý', 3000, "btn-danger center");
            }else if (out == "PermissionError") {
                notification("Không thể tải tài liệu vì không có quyền", 'Hãy liên hệ với người tạo hoặc quản lý để cấp quyền', 3000, "btn-danger center");
            }
        });
    }

</script>