@{
    ViewBag.Title = "Quản lí khách hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/Content/css/jquery.gritter.css" />
<link rel="stylesheet" href="~/Content/css/jquery-ui-1.10.3.custom.min.css" />

<link rel="stylesheet" href="~/Content/css/chosen.css" />
<link rel="stylesheet" href="~/Content/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/Content/css/font-awesome.min.css" />
<link rel="stylesheet" href="~/Content/css/ace.min.css" />
<link rel="stylesheet" href="~/Content/css/datepicker.css" />
<link rel="stylesheet" href="~/Content/css/timeline/screen.css" />

<script src="~/Content/ckeditor/ckeditor.js" type="text/javascript"></script>
<script src="~/Content/ckfinder/ckfinder.js" type="text/javascript"></script>
<script src="~/Content/js/jquery-ui-1.10.3.custom.min.js" type="text/javascript"></script>
<script src="~/Content/js/timeliner.min.js" type="text/javascript"></script>
<script src="~/Content/js/bootbox.min.js" type="text/javascript"></script>
<script>
    var cusGroupPage = false;
</script>
<script src="~/Content/js/jquery.dataTablesCustomer.js" type="text/javascript"></script>
<script src="~/Content/js/jquery.dataTables.bootstrapCustomer.js" type="text/javascript"></script>
<script src="~/Content/js/date-time/bootstrap-datepicker.min.js" type="text/javascript"></script>
<script src="~/Content/js/jquery.numeric.js" type="text/javascript"></script>
<script src="~/Content/js/jquery.autosize.min.js" type="text/javascript"></script>
<script src="~/Content/js/jquery.gritter.min.js" type="text/javascript"></script>
<script src="~/Content/js/typeahead-bs2.min.js" type="text/javascript"></script>
<script src="~/Content/js/chosen.jquery.min.js" type="text/javascript"></script>
<script src="~/Content/js/jquery.validate.min.js"></script>
<script src="~/Content/js/additional-methods.js"></script>

@section Sidebar
{
    <div class=" sidebar" id="sidebar">
        <script type="text/javascript">
            try { ace.settings.check('sidebar', 'fixed') } catch (e) { }
        </script>

        <ul class="nav nav-list">
            <li class="" id="liCustomer" onclick='getAllCustomerJson()'>
                <a href="#" onclick="setLiActiveClass('#liCustomer')">
                    <i class="icon-edit"></i>
                    <span class="menu-text"> Khách hàng</span>
                </a>
            </li>

            <li class="" id="liCustomerGroup" onclick='getAllCustomerGroupJson()'>
                <a href="#" onclick="setLiActiveClass('#liCustomerGroup')">
                    <i class="icon-calendar"></i>
                    <span class="menu-text"> Nhóm khách hàng</span>
                </a>
            </li>
        </ul><!-- /.nav-list -->

        <div class="sidebar-collapse" id="sidebar-collapse">
            <i class="icon-double-angle-left" data-icon1="icon-double-angle-left" data-icon2="icon-double-angle-right"></i>
        </div>

        <script type="text/javascript">
            try { ace.settings.check('sidebar', 'collapsed') } catch (e) { }
        </script>
    </div>
}

@section Breadcrumbs
{
    <div class="breadcrumbs" id="breadcrumbs">
        <script type="text/javascript">
            try { ace.settings.check('breadcrumbs', 'fixed') } catch (e) { }
        </script>

        <ul class="breadcrumb">
            <li>
                <i class="icon-home home-icon"></i>

                <a href="/Home/Index">Trang chủ</a> | Quản lý khách hàng
            </li>

            <li>
                <span id="breadcrumbsMenu" style="font-weight: bold"></span>
            </li>
        </ul><!-- .breadcrumb -->
    </div>
}

<div id="bodyContent"></div>

<div id="bodyChangePass">

</div>

<script type="text/javascript">
    $(document).ready(function () {
        setLiActiveClass('#liCustomer');
        getAllCustomerJson();
        
    });

    var allCustomer = null;
    var allCustomerGroup = null;

    function setLiActiveClass(liId) {
        $('#liCustomer').attr("class", "");
        $('#liCustomerGroup').attr("class", "");
        $(liId).attr("class", "active");
        //
    }

    function getAllCustomerJson() {

        $.post("/Customer/GetAllCustomerJson", { displayNum: "10", orderKey: "0", orderType: "desc", code: "", pageNum: "0" }, function (out) {
            cusGroupPage = false;
            document.getElementById("bodyContent").innerHTML = (out.html);//render HTML cua partial view
            var item = '<tbody id="tbodyCustomerTbl"  role="alert" aria-live="polite" aria-relevant="all">';

            $.each(out.list.list, function (index, cus) {
                item += '<tr>';
                item += '<td><a onClick="getCustomerByIndex(' + index + ')" data-toggle="modal" href="#tblCustomerDetail">' + cus.CustomerName + '</a></td>';
                if (cus.Representative == "" || cus.Representative == null || !cus.Representative || cus.Representative === null || cus.Representative == "null") {
                    item += '<td><i style="color: grey"></i></td>';
                } else {
                    item += '<td class="hidden-640">' + cus.Representative + '</td>';
                }
                item += '<td class="hidden-480">' + cus.Address + '</td>';
                item += '<td>' + cus.Mobile + '</td>';
                item += '<td class=" action-buttons"><center><a onClick="getCustomerByIndex(' + index + ')" class="view" title="View" data-toggle="modal" href="#tblCustomerDetail" id="' + index
                    + '"><i class="icon-zoom-in bigger-130"></i></a><a onClick="getUpdateCustomerPopup(' + index + ')" class="green" title="Update" data-toggle="modal" href="#tblCustomerDetail" id="' + index
                    + '"><i class="icon-pencil bigger-130"></i></a><a id="btnDelete' + cus.CustomerId + '" onClick="deleteCustomer(' + cus.CustomerId + ')" class="red" title="Delete" href="#" data-id="' + cus.CustomerId + '"><i class="icon-trash bigger-130"></i></a></center></td>'
                    + '</td>';
                item += '</tr>';
            });
            item += '</tbody>';
            $('#tblCustomer').append(item);
            var oTable1 = $('#tblCustomer').dataTable({
                "aoColumns": [
                    null, null, null, null, { "bSortable": false }
                ],
                "aaSorting": [[0, "desc"]]

            });
            editFr = $('#tblCustomer').val();
            $("#txtMobile", editFr).numeric({ decimal: false, negative: false });
            $("#txtTelephone", editFr).numeric({ decimal: false, negative: false });
            $("#txtBankAccount", editFr).numeric({ decimal: false, negative: false });
            $("#txtTaxCode", editFr).numeric({ decimal: false, negative: false });
            $("#txtIdentityNum", editFr).numeric({ decimal: false, negative: false });
            $("#detailBankAccount", editFr).numeric({ decimal: false, negative: false });
            $("#detailTaxCode", editFr).numeric({ decimal: false, negative: false });
            $("#detailMobile", editFr).numeric({ decimal: false, negative: false });
            $("#detailIdentityNum", editFr).numeric({ decimal: false, negative: false });
            $("#detailTelephone", editFr).numeric({ decimal: false, negative: false });

            $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
                $(this).prev().focus();
            });
            loadSelectCustomerGroup();//load combobox CustomerGroup khi add new customer (ham nay phai duoc load sau khi ra render ra html cua partial view)
        });
        $('#breadcrumbsMenu').text('Danh sách khách hàng');
        
    }

    var cusGroupPage = false;
    var changePage = false;
    var changeRecord = 10;
    var totalRecord;
    var serverSideListCase = true;
    
    function getPagingCustomerJson(displayNum1, orderKey1, orderType1, code1, pageNum1) {
        $.ajax({
            url: '/Customer/GetPagingCustomerJson',
            method: 'POST',
            async: false,
            data: { displayNum: displayNum1, orderKey: orderKey1, orderType: orderType1, code: code1, pageNum: pageNum1 },
            success: function (out) {
                {
                    var item = '';
                    allCustomer = out.list;

                    $.each(out.list, function (index, cus) {
                        item += '<tr>';
                        item += '<td><a onClick="getCustomerByIndex(' + index + ')" data-toggle="modal" href="#tblCustomerDetail">' + cus.CustomerName + '</a></td>';
                        if (cus.Representative == "" || cus.Representative == null || !cus.Representative || cus.Representative === null || cus.Representative == "null") {
                            item += '<td><i style="color: grey"></i></td>';
                        } else {
                            item += '<td class="hidden-640">' + cus.Representative + '</td>';
                        }
                        item += '<td class="hidden-480">' + cus.Address + '</td>';
                        item += '<td>' + cus.Mobile + '</td>';
                        item += '<td class=" action-buttons"><center><a onClick="getCustomerByIndex(' + index + ')" class="view" title="View" data-toggle="modal" href="#tblCustomerDetail" id="' + index
                            + '"><i class="icon-zoom-in bigger-130"></i></a><a onClick="getUpdateCustomerPopup(' + index + ')" class="green" title="Update" data-toggle="modal" href="#tblCustomerDetail" id="' + index
                            + '"><i class="icon-pencil bigger-130"></i></a><a id="btnDelete' + cus.CustomerId + '" onClick="deleteCustomer(' + cus.CustomerId + ')" class="red" title="Delete" href="#" data-id="' + cus.CustomerId + '"><i class="icon-trash bigger-130"></i></a></center></td>'
                            + '</td>';
                        item += '</tr>';
                    });
                    $('#tbodyCustomerTbl').html(item);
                    totalRecord = out.totalRecord;
                };
            }
        });
    }

    function addCustomer() {
        if ($('#addCustomerValidateForm').valid()) {
            var cusname = $('#txtName').val();
            var selectCustomerGroup = $('#selectCustomerGroup').val();
            var represent = $('#txtRepresent').val();
            if (document.getElementById('sexMale').checked) {
                var sex = document.getElementById('sexMale').value;
            } else if (document.getElementById('sexFemale').checked) {
                var sex = document.getElementById('sexFemale').value;
            }
            var birthDay = $('#datePickerBD').val();
            var identityNum = $('#txtIdentityNum').val();
            var identityDate = $('#datePickerNC').val();
            var identityPlace = $('#txtIdentityPlace').val();
            var bankAccount = $('#txtBankAccount').val();
            var bankBranch = $('#txtBankBranch').val();
            var taxCode = $('#txtTaxCode').val();
            var address = $('#txtAddress').val();
            var email = $('#txtEmail').val();
            var mobile = $('#txtMobile').val();
            var telephone = $('#txtTelephone').val();

            $.post("/Customer/AddCustomer", {
                    cusname: cusname, selectCustomerGroup: selectCustomerGroup, represent: represent, sex: sex,
                    birthDay: birthDay, identityNum: identityNum, identityDate: identityDate, identityPlace: identityPlace,
                    bankAccount: bankAccount, bankBranch: bankBranch, taxCode: taxCode, address: address, email: email,
                    mobile: mobile, telephone: telephone
                }, function (result) {
                    if (result == "success") {
                        getAllCustomerJson();
                        $('.close').click();
                        $("body").attr("class", "");
                        notification("Tạo khách hàng thành công!", "", 3000, "btn-primary center");
                    } else {
                        $('.close').click();
                        notification("Tạo khách hàng thất bại!", "Hãy kiểm tra lại kết nối database.", 5000, "gritter-error center");
                    }
                })
                .error(function () {
                    $('.close').click();
                    notification("Tạo khách hàng thất bại!", "Có lỗi xảy ra trong quá trình tạo khách hàng.", 5000, "gritter-error center");
                });
        }
    }

    function loadSelectCustomerGroup() {
        $.ajax({
            url: "/Customer/GetAllCustomerGroupJson",
            type: 'POST',
            async: false,
            success: function (data) {
                if (data.list != null) {
                    var item = '';
                    $.each(data.list, function (index, customer) {
                        item += '<option value="' + customer.CustomerGroupId + '">' + customer.CustomerGroupName + '</option>';
                    });
                    $('#selectCustomerGroup').html(item);

                    $('#selectedGroup').html(item);
                    
                    $('#selectCustomerGroup').val('');
                }
            },
            error: function (errMsg) {
                alert(errMsg.responseText);
            }
        });
        validateCustomer('#addCustomerValidateForm');
    }
    function resetFeildDetail() {
        $('#detailCustomerId').val("");
        $('#detailRepresent').val("");
        $('#detailName').val("");
        $('#detailGroup').val("");
        $("#genderMale").prop("checked", false);
        $("#genderFemale").prop("checked", false);
        $('#detailBirthday').val("");
        $('#detailIdentityNum').val("");
        $('#detailIdentityPlace').val("");
        $('#detailIdentityDate').val("");
        $('#detailBankAccount').val("");
        $('#detailBankBranch').val("");
        $('#detailAddress').val("");
        $('#detailMobile').val("");
        $('#detailTelephone').val("");
        $('#detailEmail').val("");
        $('#detailTaxCode').val("");
    }

    function getCustomerByIndex(index) {
        resetFeildDetail();
        validator.resetForm();
        //Lay customer detail dua vao idex cua customer do trong mang allCustomer
        //loadSelectedCustomerGroup(allCustomer[index].CustomerGroup.CustomerGroupId);//Goi ham nay de render ra CustomerGroup selection
        var editFr = $('#tblCustomerDetail');
        $('#detailCustomerId', editFr).val(allCustomer[index].CustomerId);
        $('#detailRepresent', editFr).val(allCustomer[index].Representative);
        $('#detailName', editFr).val(allCustomer[index].CustomerName);
        $('#selectedGroup', editFr).val(allCustomer[index].CustomerGroup.CustomerGroupId);
        $("#genderMale").prop("checked", false);
        $("#genderFemale").prop("checked", false);
        if (allCustomer[index].Sex == 'Nam') {
            $("#genderMale").prop("checked", true);
        } else if (allCustomer[index].Sex == 'Nữ') {
            $("#genderFemale").prop("checked", true);
        }
        if (allCustomer[index].DateOfBirth != null)
        {
            var bd = convertNETDateTime(allCustomer[index].DateOfBirth).toLocaleFormat('%d/%m/%Y');
        }
        else
        {
            var bd = "";
        }
        $('#detailBirthday', editFr).val(bd);
        $('#detailIdentityNum', editFr).val(allCustomer[index].IdentityNumber);
        $('#detailIdentityPlace', editFr).val(allCustomer[index].IdentityPlace);
        if (allCustomer[index].IdentityDate != null) {
            var idd = convertNETDateTime(allCustomer[index].IdentityDate).toLocaleFormat('%d/%m/%Y');
        }
        else {
            var idd = "";
        }
        $('#detailIdentityDate', editFr).val(idd);
        $('#detailBankAccount', editFr).val(allCustomer[index].BankAccount);
        $('#detailBankBranch', editFr).val(allCustomer[index].BankBranch);
        $('#detailAddress', editFr).val(allCustomer[index].Address);
        $('#detailMobile', editFr).val(allCustomer[index].Mobile);
        $('#detailTelephone', editFr).val(allCustomer[index].Telephone);
        $('#detailEmail', editFr).val(allCustomer[index].Email);
        $('#detailTaxCode', editFr).val(allCustomer[index].TaxCode);
        disablebutton();
        validateCustomer('#updateCustomerValidateForm');
        $('#detailBirthday').attr("readonly", "readonly");
        $('#detailBirthday').removeAttr("style");
        $('#detailIdentityDate').attr("readonly", "readonly");
        $('#detailIdentityDate').removeAttr("style");
    }

    function getUpdateCustomerPopup(index) {
        resetFeildDetail();
        //Lay customer detail dua vao idex cua customer do trong mang allCustomer
        //loadSelectedCustomerGroup(allCustomer[index].CustomerGroup.CustomerGroupId);//Goi ham nay de render ra CustomerGroup selection
        var editFr = $('#tblCustomerDetail');
        $('#detailCustomerId', editFr).val(allCustomer[index].CustomerId);
        $('#detailRepresent', editFr).val(allCustomer[index].Representative);
        $('#detailName', editFr).val(allCustomer[index].CustomerName);
        $('#selectedGroup', editFr).val(allCustomer[index].CustomerGroup.CustomerGroupId);
        $("#genderMale").prop("checked", false);
        $("#genderFemale").prop("checked", false);
        if (allCustomer[index].Sex == 'Nam') {
            $("#genderMale").prop("checked", true);
        } else if (allCustomer[index].Sex == 'Nữ') {
            $("#genderFemale").prop("checked", true);
        }
        if (allCustomer[index].DateOfBirth != null) {
            var bd = convertNETDateTime(allCustomer[index].DateOfBirth).toLocaleFormat('%d/%m/%Y');
        }
        else {
            var bd = "";
        }
        $('#detailBirthday', editFr).val(bd);
        $('#detailIdentityNum', editFr).val(allCustomer[index].IdentityNumber);
        $('#detailIdentityPlace', editFr).val(allCustomer[index].IdentityPlace);
        if (allCustomer[index].IdentityDate != null) {
            var idd = convertNETDateTime(allCustomer[index].IdentityDate).toLocaleFormat('%d/%m/%Y');
        }
        else {
            var idd = "";
        }
        $('#detailIdentityDate', editFr).val(idd);
        $('#detailBankAccount', editFr).val(allCustomer[index].BankAccount);
        $('#detailBankBranch', editFr).val(allCustomer[index].BankBranch);
        $('#detailAddress', editFr).val(allCustomer[index].Address);
        $('#detailMobile', editFr).val(allCustomer[index].Mobile);
        $('#detailTelephone', editFr).val(allCustomer[index].Telephone);
        $('#detailEmail', editFr).val(allCustomer[index].Email);
        $('#detailTaxCode', editFr).val(allCustomer[index].TaxCode);
        enablebutton();
        validateCustomer('#updateCustomerValidateForm');
    }

    function updateCustomer() {
        if ($('#updateCustomerValidateForm').valid()) {
            var cusId = $('#detailCustomerId').val();
            var cusname = $('#detailName').val();
            var selectCustomerGroup = $('#selectedGroup option:selected').val();
            var represent = $('#detailRepresent').val();
            if (document.getElementById('genderMale').checked) {
                var sex = document.getElementById('genderMale').value;
            } else if (document.getElementById('genderFemale').checked) {
                var sex = document.getElementById('genderFemale').value;
            }
            var birthDay = $('#detailBirthday').val();
            var identityNum = $('#detailIdentityNum').val();
            var identityDate = $('#detailIdentityDate').val();
            var identityPlace = $('#detailIdentityPlace').val();
            var bankAccount = $('#detailBankAccount').val();
            var bankBranch = $('#detailBankBranch').val();
            var taxCode = $('#detailTaxCode').val();
            var address = $('#detailAddress').val();
            var email = $('#detailEmail').val();
            var mobile = $('#detailMobile').val();
            var telephone = $('#detailTelephone').val();

            $.post("/Customer/UpdateCustomer", {
                    id: cusId, name: cusname, selectCustomerGroup: selectCustomerGroup, represent: represent, sex: sex,
                    birthDay: birthDay, identityNum: identityNum, identityDate: identityDate, identityPlace: identityPlace,
                    bankAccount: bankAccount, bankBranch: bankBranch, taxCode: taxCode, address: address, email: email,
                    mobile: mobile, telephone: telephone
                }, function (result) {
                    if (result == "success") {
                        getAllCustomerJson();
                        $("body").attr("class", "");
                        notification("Chỉnh sửa khách hàng thành công!", "", 3000, "btn-primary center");
                    } else {
                        notification("Chỉnh sửa khách hàng thất bại!", "Hãy kiểm tra lại kết nối database.", 5000, "gritter-error center");
                    }
                })
                .error(function () {
                    notification("Chỉnh sửa khách hàng thất bại!", "Có lỗi xảy ra trong quá trình chỉnh sửa khách hàng.", 5000, "gritter-error center");
                });
            $('.close').click();
        }
    }

    function deleteCustomer(id) {
        $(ace.click_event, function () {
            bootbox.confirm("Bạn thực sự muốn xóa khách hàng này?", function (result) {
                if (result) {
                    $.post("/Customer/DeleteCustomer", { customerId: id }
                        , function (result2) {
                            if (result2 == "success") {
                                getAllCustomerJson();
                                notification("Xóa khách hàng thành công!", "", 3000, "btn-primary center");
                            } else {
                                notification("Xóa khách hàng thất bại!", "Hãy kiểm tra lại kết nối database.", 5000, "gritter-error center");
                            }
                        })
                        .error(function () {
                            notification("Xóa khách hàng thất bại!", "Có lỗi xảy ra trong quá trình xóa khách hàng.", 5000, "gritter-error center");
                        });
                }
            });
        });
    }

    function disablebutton() {
        //Khong cho user edit cac field
        $('.editableInput').attr("readonly", "");
        $('.editableSelect').attr("disabled", "disabled");
        $('.editableGender').attr("disabled", "disabled");
        $('#enablebutton').show();
        $('#disablebutton').hide();
    }
    
    function enablebutton() {
        //Cho phep user edit
        $('.editableInput').removeAttr("readonly");
        $('.editableSelect').removeAttr("disabled");
        $('.editableGender').removeAttr("disabled");
        $('#disablebutton').show();
        $('#enablebutton').hide();

        $('#detailBirthday').attr("readonly", "readonly");
        $('#detailBirthday').attr("style", "background: none repeat scroll 0 0 #fff !important; width: 100%; cursor: pointer")
        $('#detailIdentityDate').attr("readonly", "readonly");
        $('#detailIdentityDate').attr("style", "background: none repeat scroll 0 0 #fff !important; width: 100%; cursor: pointer")
    }

    function clearFieldCustomer() {
        $('#txtName').val("");
        $('#selectCustomerGroup').val("0");
        $('#txtRepresent').val("");
        $('#sexMale').removeAttr("checked");
        $('#sexFemale').removeAttr("checked");
        $('#datePickerBD').val("");
        $('#txtIdentityNum').val("");
        $('#datePickerNC').val("");
        $('#txtIdentityPlace').val("");
        $('#txtBankAccount').val("");
        $('#txtBankBranch').val("");
        $('#txtTaxCode').val("");
        $('#txtAddress').val("");
        $('#txtEmail').val("");
        $('#txtMobile').val("");
        $('#txtTelephone').val("");
    }

    var validator;
    //Validate
    function validateCustomer(validateform) {
     validator=   $(validateform).validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            rules: {
                txtName: {
                    required: true
                },
                txtRepresent:{
                    required: true
                },
                selectCustomerGroup: {
                    required: true 
                 
                },
                txtAddress: {
                    required: true
                },
                txtEmail: {
                    email: true
                },
                txtMobile: {
                    required: true,
                }
              
            },
            messages: {
                txtName: {
                    required: "Nhập tên khách hàng!"
                },
                txtRepresent: {
                    required: "Nhập tên người đại diện!"
                },
                selectCustomerGroup: {
                    required: "Chọn nhóm khách hàng!",
                },
                txtAddress: {
                    required: "Nhập địa chỉ!"
                },
                txtEmail: {
                    required: "Nhập địa chỉ email!",
                    email: "Email chưa đúng định dạng!"
                },
                txtMobile: {
                    required: "Nhập số điện thoại di động!",
                }
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            },

            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).remove();
            },
            errorPlacement: function (error, element) {
                if (element.is(':checkbox') || element.is(':radio')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                } else error.insertAfter(element.parent());
            }
        });
    }

    jQuery(function ($) {
     

        $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });

        $('textarea[class*=autosize]').autosize({ append: "\n" });

    });

    function getAllCustomerGroupJson() {
        $.post("/Customer/GetAllCustomerGroupJson", {}, function (out) {
            cusGroupPage = true;
            document.getElementById("bodyContent").innerHTML = (out.html);//render HTML cua partial view
            var item = '<tbody>';
            $.each(out.list, function (index, cus) {
                allCustomerGroup = out.list;
                item += '<tr>';
                item += '<td><a onClick="getCustomerGroupByIndex(' + index + ')" data-toggle="modal" href="#tblCustomerGroupDetail">' + cus.CustomerGroupName + '</a></td>';
                if (cus.Description == "" || cus.Description == null || !cus.Description || cus.Description === null || cus.Description == "null") {
                    item += '<td><i style="color: grey"></i></td>';
                } else {
                    item += '<td>' + cus.Description + '</td>';
                }
                item += '<td class="visible-md visible-lg hidden-sm hidden-xs action-buttons"><center><a onClick="getCustomerGroupByIndex(' + index + ')" class="view" title="View" data-toggle="modal" href="#tblCustomerGroupDetail" id="' + index
                    + '"><i class="icon-zoom-in bigger-130"></i></a><a onClick="getUpdatePopup(' + index + ')" class="green" title="Update" data-toggle="modal" href="#tblCustomerGroupDetail" id="' + index
                    + '"><i class="icon-pencil bigger-130"></i></a><a id="btnDelete' + cus.CustomerGroupId + '" onClick="deleteCustomerGroup(' + cus.CustomerGroupId + ')" class="red" title="Delete" href="#" data-id="' + cus.CustomerGroupId + '"><i class="icon-trash bigger-130"></i></a></center></td>'
                    + '</td>';
                item += '</tr>';
            });
            item += '</tbody>';
            $('#tblCustomerGroup').append(item);
            $('#tblCustomerGroup').dataTable().fnDestroy();
            var oTable1 = $('#tblCustomerGroup').dataTable({
                "aoColumns": [
                    null, null, { "bSortable": false }
                ]
            });
            validateCustomerGroup('#addCustomerGroupValidateForm');
        });
        $('#breadcrumbsMenu').text('Nhóm khách hàng');
    }

    function addCustomerGroup() {
        if ($('#addCustomerGroupValidateForm').valid()) {
            var groupName = $('#txtGroupName').val();
            var description = $('#txtDescription').val();

            $.post("/Customer/AddCustomerGroup", {
                    groupName: groupName, description: description
                }, function (result) {
                    if (result == "success") {
                        $('.close').click();
                        $("body").attr("class", "");
                        getAllCustomerGroupJson();
                        notification("Tạo nhóm khách hàng thành công!", "", 3000, "btn-primary center");
                    } else {
                        $('.close').click();
                        notification("Tạo nhóm khách hàng thất bại!", "Hãy kiểm tra lại kết nối database.", 5000, "gritter-error center");
                    }
                })
                .error(function () {
                    $('.close').click();
                    notification("Tạo nhóm khách hàng thất bại!", "Có lỗi xảy ra trong quá trình tạo nhóm khách hàng.", 5000, "gritter-error center");
                });
        }
    }

    function getCustomerGroupByIndex(index) {
        //Lay CustomerGroup detail dua vao idex cua CustomerGroup do trong mang allCustomerGroup
        var editFr = $('#tblCustomerGroupDetail');
        $('#detailCustomerGroupId', editFr).val(allCustomerGroup[index].CustomerGroupId);
        $('#detailName', editFr).val(allCustomerGroup[index].CustomerGroupName);
        $('#detailDescription', editFr).val(allCustomerGroup[index].Description);

        disablebutton();
        validateCustomerGroup('#updateCustomerGroupValidateForm');
    }

    function getUpdatePopup(index) {
        //Lay CustomerGroup detail dua vao idex cua CustomerGroup do trong mang allCustomerGroup
        var editFr = $('#tblCustomerGroupDetail');
        $('#detailCustomerGroupId', editFr).val(allCustomerGroup[index].CustomerGroupId);
        $('#detailName', editFr).val(allCustomerGroup[index].CustomerGroupName);
        $('#detailDescription', editFr).val(allCustomerGroup[index].Description);

        enablebutton();
        validateCustomerGroup('#updateCustomerGroupValidateForm');
    }

    function updateCustomerGroup() {
        if ($('#updateCustomerGroupValidateForm').valid()) {
            var groupId = $('#detailCustomerGroupId').val();
            var groupName = $('#detailName').val();
            var description = $('#detailDescription').val();

            disablebutton(); //Nhan nut Update thi se disable cac editable field

            $.post("/Customer/UpdateCustomerGroup", {
                    groupId: groupId, groupName: groupName, description: description
                }, function (result) {
                    if (result == "success") {
                        $('.close').click();
                        $("body").attr("class", "");
                        getAllCustomerGroupJson();
                        notification("Chỉnh sửa nhóm khách hàng thành công!", "", 3000, "btn-primary center");
                    } else {
                        notification("Chỉnh sửa nhóm khách hàng thất bại!", "Hãy kiểm tra lại kết nối database.", 5000, "gritter-error center");
                    }
                })
                .error(function () {
                    notification("Chỉnh sửa nhóm khách hàng thất bại!", "Có lỗi xảy ra trong quá trình chỉnh sửa nhóm khách hàng.", 5000, "gritter-error center");
                });
        }
    }

    function deleteCustomerGroup(id) {
        $(ace.click_event, function () {
            bootbox.confirm("Bạn thực sự muốn xóa nhóm khách hàng này?", function (result) {
                if (result) {
                    $.post("/Customer/DeleteCustomerGroup", { groupId: id }
                        , function (result2) {
                            if (result2 == "success") {
                                getAllCustomerGroupJson();
                                notification("Xóa nhóm khách hàng thành công!", "", 3000, "btn-primary center");
                            } else {
                                notification("Xóa nhóm khách hàng thất bại!", "Hãy kiểm tra lại kết nối database.", 5000, "gritter-error center");
                            }
                        })
                        .error(function () {
                            notification("Xóa nhóm khách hàng thất bại!", "Có lỗi xảy ra trong quá trình xóa nhóm khách hàng.", 5000, "gritter-error center");
                        });
                }
            });
        });
    }

    function clearFieldGroup() {
        $('#txtGroupName').val("");
        $('#txtDescription').val("");
    }

    //Validate
    function validateCustomerGroup(validateform) {
        $(validateform).validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            rules: {
                txtGroupName: {
                    required: true
                }
            },
            messages: {
                txtGroupName: {
                    required: "Nhập tên nhóm khách hàng!"
                }
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            },

            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).remove();
            },
            errorPlacement: function (error, element) {
                if (element.is(':checkbox') || element.is(':radio')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                } else error.insertAfter(element.parent());
            }
        });
    }

    jQuery(function ($) {


        $('.date-picker').datepicker({ autoclose: true }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });

        $('textarea[class*=autosize]').autosize({ append: "\n" });

    });
</script>